{"version":3,"file":"component---src-pdf-pages-avi-sharvit-resume-tsx-264c2b9d705bcf8c9509.js","mappings":"oLAYe,SAASA,IACtB,IAAMC,GAAgBC,EAAAA,EAAAA,MAChBC,GAAYC,EAAAA,EAAAA,MACZC,GAAWC,EAAAA,EAAAA,MAEjB,OACEC,EAAAA,cAAAA,MAAAA,CAAKC,UCbS,0CDcZD,EAAAA,cAAAA,KAAAA,KACGN,EAAcQ,KAAK,MAAIR,EAAcS,OAGxCH,EAAAA,cAAAA,UAAAA,CAASC,UCpBM,6CDqBbD,EAAAA,cAAAA,KAAAA,KACEA,EAAAA,cAAAA,KAAAA,KACEA,EAAAA,cAAAA,SAAAA,KAAQ,UAAgB,IACxBA,EAAAA,cAAAA,IAAAA,CAAGI,KAAI,QAAUV,EAAcW,OAAUX,EAAcW,QAEzDL,EAAAA,cAAAA,KAAAA,KACEA,EAAAA,cAAAA,SAAAA,KAAQ,WAAiB,IACzBA,EAAAA,cAAAA,IAAAA,CAAGI,KAAI,WAAaV,EAAcY,OAAUZ,EAAcY,QAE5DN,EAAAA,cAAAA,KAAAA,KACEA,EAAAA,cAAAA,SAAAA,KAAQ,YAAkB,IAC1BA,EAAAA,cAAAA,IAAAA,CAAGI,KAAMV,EAAca,SAAUb,EAAca,YAKrDP,EAAAA,cAAAA,UAAAA,CAASC,UCvCI,2CDwCXD,EAAAA,cAAAA,KAAAA,KAAI,YACJA,EAAAA,cAAAA,MAAAA,CAAKQ,wBAAyB,CAAEC,OAAQb,MAG1CI,EAAAA,cAAAA,UAAAA,CAASC,UCrCY,oDDsCnBD,EAAAA,cAAAA,KAAAA,KAAI,eACJA,EAAAA,cAAAA,IAAAA,CAAGC,UCxCS,4CDyCTH,EAASY,OAAOC,KAAI,SAACC,GAAK,OACzBZ,EAAAA,cAAAA,OAAAA,CAAMa,IAAKD,EAAOX,UC3CX,2CD4CJW,EACI,MAKZd,EAASgB,YAAYH,KAAI,SAACI,GAAC,OAC1Bf,EAAAA,cAAAA,MAAAA,CAAKa,IAAKE,EAAEC,QAASf,UCrDL,gDDsDdD,EAAAA,cAAAA,KAAAA,KAAKe,EAAEE,UACPjB,EAAAA,cAAAA,KAAAA,KAAKe,EAAEC,SACPhB,EAAAA,cAAAA,MAAAA,CAAKC,UCnDI,2CDmDsBc,EAAEG,OACjClB,EAAAA,cAAAA,KAAAA,KACGe,EAAEI,aAAaR,KAAI,SAACS,GAAE,OACrBpB,EAAAA,cAAAA,KAAAA,CAAIa,IAAKO,EAAInB,UC7DF,kDD8DRmB,EACE,KAKL,IAId,C,8LEnEaC,EAAoB,WAAH,aAYrB,QAXP,WAAc,aAWXC,YAAI,aAXPC,EAWSC,uBAAmBC,CAAU,ECZ3BC,EAAqB,WAAH,aAYtB,QAXP,WAAc,aAWXJ,YAAI,aAXPC,EAWSC,uBAAmBC,CAAU,ECd3B5B,EAAoB,WAAH,eASrB,QARP,WAAc,aAQXyB,YAAI,OAAqB,QAArB,EARPC,EAQSI,2BAAmB,WAArB,EARPC,EAQ8BC,OAAQ,EAAG,E,UCY9BlC,EAAmB,WAuB9B,OA3CmC,SACnCmC,GACoB,IAAD,IACXC,IAAqB,QAAT,EAAAD,EAAKR,YAAI,aAATU,EAAWC,YAAa,CAAC,GAArCF,QAER,MAAO,CACL7B,MAAM6B,aAAO,EAAPA,EAAS7B,OAAQ,GACvBgC,UAAUH,aAAO,EAAPA,EAASG,WAAY,GAC/B/B,OAAO4B,aAAO,EAAPA,EAAS5B,QAAS,GACzBI,SAASwB,aAAO,EAAPA,EAASxB,UAAW,GAC7BF,OAAO0B,aAAO,EAAPA,EAAS1B,QAAS,GACzBC,OAAOyB,aAAO,EAAPA,EAASzB,QAAS,GACzB6B,QAAQJ,aAAO,EAAPA,EAASI,SAAU,GAC3BC,SAASL,aAAO,EAAPA,EAASK,UAAW,GAC7BC,eAAeN,SAAsB,QAAf,EAAPA,EAASM,qBAAa,WAAf,EAAPC,EAAwBC,aAAc,GACrDC,QAAQT,aAAO,EAAPA,EAASS,SAAU,GAC3BC,QAAQV,aAAO,EAAPA,EAASU,SAAU,GAE/B,CAyBSC,EAtBMC,EAAAA,EAAAA,IAAc,cAuB7B,EC7CaC,EAAiB,WAC5B,IAAMb,EAAUpC,IAEhB,OAAOkD,EAAAA,EAAAA,UACL,iBAAM,CACJ,CACEC,KAAM,SACN1C,KAAK,sBAAuB2B,EAAQI,OACpCY,MAAOhB,EAAQI,QAEjB,CACEW,KAAM,UACN1C,KAAK,2BAA4B2B,EAAQK,QACzCW,MAAOhB,EAAQK,SAEjB,CACEU,KAAM,gBACN1C,KAAK,mCAAoC2B,EAAQM,cACjDU,MAAOhB,EAAQG,UAEjB,CACEY,KAAM,QACN1C,KAAK,UAAW2B,EAAQzB,MACxByC,MAAOhB,EAAQzB,OAElB,GACD,CAACyB,GAEL,ECCahC,EAAc,WAoBzB,OApC8B,SAAC+B,GAAoC,IAAD,MAC1DkB,IAAgB,QAAT,EAAAlB,EAAKR,YAAI,aAATU,EAAWC,YAAa,CAAC,GAAhCe,GAER,MAAO,CACLtC,QAAQsC,SAAU,QAAR,EAAFA,EAAItC,cAAM,WAAR,EAAFuC,EAAYC,OAAOC,MAAM,QAAS,GAC1CrC,aACEkC,SAAe,QAAb,EAAFA,EAAIlC,mBAAW,WAAb,EAAFsC,EAAiBzC,KAAI,SAACI,GAAC,cAAM,CAC3BC,SAASD,aAAC,EAADA,EAAGC,UAAW,GACvBC,UAAUF,aAAC,EAADA,EAAGE,WAAY,GACzBC,OAAOH,aAAC,EAADA,EAAGG,QAAS,GACnBmC,MAAMtC,SAAO,QAAN,EAADA,EAAGsC,YAAI,WAAN,EAADC,EAASJ,OAAOC,MAAM,QAAS,GACrChC,cAAcJ,SAAgB,QAAf,EAADA,EAAGwC,qBAAa,WAAf,EAADC,EAAkB7C,KAAI,SAACS,GAAE,OAAKA,aAAE,EAAFA,EAAI8B,SAAU,EAAE,MAAK,GAClE,MAAM,GAEb,CAsBSO,EAnBMd,EAAAA,EAAAA,IAAc,cAoB7B,C","sources":["webpack://avi-sharvit/./src/pdf-pages/avi-sharvit-resume.tsx","webpack://avi-sharvit/./src/pdf-pages/avi-sharvit-resume.module.css","webpack://avi-sharvit/./src/profile/hooks/useHomeCoverImage.ts","webpack://avi-sharvit/./src/profile/hooks/useAboutCoverImage.ts","webpack://avi-sharvit/./src/profile/hooks/useShortAboutHTML.ts","webpack://avi-sharvit/./src/profile/hooks/useAuthorProfile.ts","webpack://avi-sharvit/./src/profile/hooks/useSocialLinks.ts","webpack://avi-sharvit/./src/profile/hooks/useAuthorCV.tsx"],"sourcesContent":["import React from 'react';\n\nimport {\n  useAuthorProfile,\n  useAuthorCV,\n  useShortAboutHTML,\n} from '../profile/hooks';\n\n// import { ThemeProvider } from '../theme';\n\nimport * as styles from './avi-sharvit-resume.module.css';\n\nexport default function AviSharvitResumePDF() {\n  const authorProfile = useAuthorProfile();\n  const aboutHTML = useShortAboutHTML();\n  const authorCV = useAuthorCV();\n\n  return (\n    <div className={styles.page}>\n      <h1>\n        {authorProfile.name} | {authorProfile.title}\n      </h1>\n\n      <section className={styles.contact}>\n        <ul>\n          <li>\n            <strong>phone:</strong>{' '}\n            <a href={`tel: ${authorProfile.phone}`}>{authorProfile.phone}</a>\n          </li>\n          <li>\n            <strong>e-mail:</strong>{' '}\n            <a href={`mailto: ${authorProfile.email}`}>{authorProfile.email}</a>\n          </li>\n          <li>\n            <strong>website:</strong>{' '}\n            <a href={authorProfile.website}>{authorProfile.website}</a>\n          </li>\n        </ul>\n      </section>\n\n      <section className={styles.about}>\n        <h2>My Story</h2>\n        <div dangerouslySetInnerHTML={{ __html: aboutHTML }} />\n      </section>\n\n      <section className={styles.skillsSection}>\n        <h2>Main Skills</h2>\n        <p className={styles.skills}>\n          {authorCV.skills.map((skill) => (\n            <span key={skill} className={styles.skill}>\n              {skill}\n            </span>\n          ))}\n        </p>\n      </section>\n\n      {authorCV.experiences.map((e) => (\n        <div key={e.company} className={styles.experience}>\n          <h3>{e.position}</h3>\n          <h4>{e.company}</h4>\n          <div className={styles.years}>{e.years}</div>\n          <ul>\n            {e.bulletPoints.map((bp) => (\n              <li key={bp} className={styles.bulletPoint}>\n                {bp}\n              </li>\n            ))}\n          </ul>\n          {/* <SkillsList skills={e.tags} /> */}\n          {/* <hr /> */}\n        </div>\n      ))}\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport var about = \"avi-sharvit-resume-module--about--ace0e\";\nexport var bulletPoint = \"avi-sharvit-resume-module--bullet-point--a3b40\";\nexport var contact = \"avi-sharvit-resume-module--contact--0c5e6\";\nexport var experience = \"avi-sharvit-resume-module--experience--0aae0\";\nexport var page = \"avi-sharvit-resume-module--page--58e0c\";\nexport var skill = \"avi-sharvit-resume-module--skill--4d55a\";\nexport var skills = \"avi-sharvit-resume-module--skills--41508\";\nexport var skillsSection = \"avi-sharvit-resume-module--skills-section--8e530\";\nexport var years = \"avi-sharvit-resume-module--years--1d179\";","import { useStaticQuery, graphql } from 'gatsby';\n\nimport { CoverImageSharp } from '../../components/Layout/components/CoverImage';\n\n// eslint-disable-next-line no-undef\nexport type HomeCoverImageQuery = Queries.HomeCoverImageQuery;\n\nexport const useHomeCoverImage = (): CoverImageSharp | undefined =>\n  useStaticQuery<HomeCoverImageQuery>(graphql`\n    query HomeCoverImage {\n      file(\n        sourceInstanceName: { eq: \"images\" }\n        name: { eq: \"home-cover-background\" }\n      ) {\n        childImageSharp {\n          ...CoverImageSharp\n        }\n      }\n    }\n  `).file?.childImageSharp || undefined;\n","import { useStaticQuery, graphql } from 'gatsby';\n\nimport { CoverImageSharp } from '../../components/Layout/components/CoverImage';\n\n// eslint-disable-next-line no-undef\nexport type AboutCoverImageQuery = Queries.AboutCoverImageQuery;\n\nexport const useAboutCoverImage = (): CoverImageSharp | undefined =>\n  useStaticQuery<AboutCoverImageQuery>(graphql`\n    query AboutCoverImage {\n      file(\n        sourceInstanceName: { eq: \"images\" }\n        name: { eq: \"about-page-cover-background\" }\n      ) {\n        childImageSharp {\n          ...CoverImageSharp\n        }\n      }\n    }\n  `).file?.childImageSharp || undefined;\n","import { useStaticQuery, graphql } from 'gatsby';\n\n// eslint-disable-next-line no-undef\nexport type ShortAboutMarkdownQuery = Queries.ShortAboutMarkdownQuery;\n\nexport const useShortAboutHTML = (): string =>\n  useStaticQuery<ShortAboutMarkdownQuery>(graphql`\n    query ShortAboutMarkdown {\n      file(sourceInstanceName: { eq: \"bio\" }, name: { eq: \"short-bio\" }) {\n        childMarkdownRemark {\n          html\n        }\n      }\n    }\n  `).file?.childMarkdownRemark?.html || '';\n","import { useStaticQuery, graphql } from 'gatsby';\nimport { IAuthorProfile } from '../../../content/bio/types';\n\n// eslint-disable-next-line no-undef\nexport type AuthorProfileQuery = Queries.AuthorProfileQuery;\n\nexport const mapAuthorProfileQuery = (\n  data: AuthorProfileQuery\n): IAuthorProfile => {\n  const { profile } = data.file?.childYaml || {};\n\n  return {\n    name: profile?.name || '',\n    nickname: profile?.nickname || '',\n    title: profile?.title || '',\n    website: profile?.website || '',\n    phone: profile?.phone || '',\n    email: profile?.email || '',\n    github: profile?.github || '',\n    twitter: profile?.twitter || '',\n    stackoverflow: profile?.stackoverflow?.toString() || '',\n    disqus: profile?.disqus || '',\n    avatar: profile?.avatar || '',\n  };\n};\n\nexport const useAuthorProfile = (): IAuthorProfile => {\n  const data = useStaticQuery<AuthorProfileQuery>(graphql`\n    query AuthorProfile {\n      file(sourceInstanceName: { eq: \"bio\" }, name: { eq: \"author\" }) {\n        childYaml {\n          profile {\n            name\n            nickname\n            title\n            website\n            email\n            phone\n            github\n            twitter\n            stackoverflow\n            disqus\n            avatar\n          }\n        }\n      }\n    }\n  `);\n\n  return mapAuthorProfileQuery(data);\n};\n","import { useMemo } from 'react';\n\nimport { ISocialLink } from '../components/SocialLinks/types';\nimport { useAuthorProfile } from './useAuthorProfile';\n\nexport const useSocialLinks = (): ISocialLink[] => {\n  const profile = useAuthorProfile();\n\n  return useMemo(\n    () => [\n      {\n        type: 'github',\n        href: `https://github.com/${profile.github}`,\n        label: profile.github,\n      },\n      {\n        type: 'twitter',\n        href: `https://www.twitter.com/${profile.twitter}`,\n        label: profile.twitter,\n      },\n      {\n        type: 'stackoverflow',\n        href: `https://stackoverflow.com/users/${profile.stackoverflow}`,\n        label: profile.nickname,\n      },\n      {\n        type: 'email',\n        href: `mailto:${profile.email}`,\n        label: profile.email,\n      },\n    ],\n    [profile]\n  );\n};\n","import { useStaticQuery, graphql } from 'gatsby';\n\n// eslint-disable-next-line no-undef\nexport type AuthorCVQuery = Queries.AuthorCVQuery;\n\nexport interface IAuthorExperience {\n  company: string;\n  position: string;\n  years: string;\n  tags: string[];\n  bulletPoints: string[];\n}\n\nexport interface IAuthorCV {\n  skills: string[];\n  experiences: IAuthorExperience[];\n}\n\nexport const mapAuthorCVQuery = (data: AuthorCVQuery): IAuthorCV => {\n  const { cv } = data.file?.childYaml || {};\n\n  return {\n    skills: cv?.skills?.trim().split(', ') || [],\n    experiences:\n      cv?.experiences?.map((e) => ({\n        company: e?.company || '',\n        position: e?.position || '',\n        years: e?.years || '',\n        tags: e?.tags?.trim().split(', ') || [],\n        bulletPoints: e?.bullet_points?.map((bp) => bp?.trim() || '') || [],\n      })) || [],\n  };\n};\n\nexport const useAuthorCV = (): IAuthorCV => {\n  const data = useStaticQuery<AuthorCVQuery>(graphql`\n    query AuthorCV {\n      file(sourceInstanceName: { eq: \"bio\" }, name: { eq: \"author\" }) {\n        childYaml {\n          cv {\n            skills\n            experiences {\n              company\n              position\n              years\n              tags\n              bullet_points\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  return mapAuthorCVQuery(data);\n};\n"],"names":["AviSharvitResumePDF","authorProfile","useAuthorProfile","aboutHTML","useShortAboutHTML","authorCV","useAuthorCV","React","className","name","title","href","phone","email","website","dangerouslySetInnerHTML","__html","skills","map","skill","key","experiences","e","company","position","years","bulletPoints","bp","useHomeCoverImage","file","_useStaticQuery$file","childImageSharp","undefined","useAboutCoverImage","childMarkdownRemark","_useStaticQuery$file$","html","data","profile","_data$file","childYaml","nickname","github","twitter","stackoverflow","_profile$stackoverflo","toString","disqus","avatar","mapAuthorProfileQuery","useStaticQuery","useSocialLinks","useMemo","type","label","cv","_cv$skills","trim","split","_cv$experiences","tags","_e$tags","bullet_points","_e$bullet_points","mapAuthorCVQuery"],"sourceRoot":""}