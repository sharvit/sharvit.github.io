{"version":3,"sources":["webpack:///./src/components/OpenSource/AllOpenSourceSection/AllOpenSourceSectionData.js","webpack:///./src/components/OpenSource/AllOpenSourceSection/AllOpenSourceSection.js","webpack:///./src/components/OpenSource/AllOpenSourceSection/index.js","webpack:///./src/pages/open-source.js","webpack:///./src/components/OpenSource/AllOpenSourceSection/AllOpenSourceSection.module.scss"],"names":["getAllOpenSourceProjects","a","getUserRepositories","repositories","filter","fork","sort","b","stargazersCount","reverse","console","error","AllOpenSourceSection","className","classNames","styles","container","map","repository","key","name","OpenSourceCard","defaultProps","Component","useState","setRepositories","loadRepositories","useEffect","OpenSourcePage","Layout","breadcrumbs","title","path","SEO","module","exports"],"mappings":"0VAEO,IAAMA,EAAwB,e,EAAA,G,EAAA,UAAG,4BAAAC,EAAA,+EAETC,YAAoB,WAFX,cAE9BC,EAF8B,yBAI7BA,EACJC,QAAO,qBAAGC,QACVC,MAAK,SAACL,EAAGM,GAAJ,OAAUN,EAAEO,gBAAkBD,EAAEC,mBACrCC,WAPiC,gCASpCC,QAAQC,MAAR,MAToC,iCAY/B,IAZ+B,wD,+KAAH,qD,kECM/BC,EAAuB,SAAC,GAAD,IAAGT,EAAH,EAAGA,aAAH,OAC3B,0BAAMU,UAAWC,IAAW,uBAAwBC,IAAOC,YACzD,yBAAKH,UAAU,aACb,2DAEA,yBAAKA,UAAU,mBACZV,EAAac,KAAI,SAAAC,GAAU,OAC1B,yBAAKL,UAAU,WAAWM,IAAKD,EAAWE,MACxC,kBAACC,EAAA,EAAmBH,WAgBhCN,EAAqBU,aAAe,CAClCnB,aAAc,IAGDS,Q,yHC/Bf,IAceW,EAdG,WAAO,IAAD,EACkBC,mBAAS,IAA1CrB,EADe,KACDsB,EADC,KAGhBC,EAAgB,e,EAAA,G,EAAA,UAAG,sBAAAzB,EAAA,kEACvBwB,EADuB,SACDzB,IADC,4E,+KAAH,qDAQtB,OAJA2B,qBAAU,WACRD,MACC,IAEI,kBAAC,EAAD,CAAsBvB,aAAcA,KCD9ByB,UATQ,kBACrB,kBAACC,EAAA,EAAD,CACEC,YAAa,CAAC,CAAEC,MAAO,uBAAwBC,KAAM,kBAErD,kBAACC,EAAA,EAAD,CAAKF,MAAM,yBACX,kBAAC,EAAD,S,qBCVJG,EAAOC,QAAU,CAAC,UAAY","file":"component---src-pages-open-source-js-49736886c7062e6bfe72.js","sourcesContent":["import { getUserRepositories } from '../OpenSourceData';\n\nexport const getAllOpenSourceProjects = async () => {\n  try {\n    const repositories = await getUserRepositories('sharvit');\n\n    return repositories\n      .filter(({ fork }) => !fork)\n      .sort((a, b) => a.stargazersCount - b.stargazersCount)\n      .reverse();\n  } catch (error) {\n    console.error(error); // eslint-disable-line no-console\n  }\n\n  return [];\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport OpenSourceCard from '../OpenSourceCard';\n\nimport styles from './AllOpenSourceSection.module.scss';\n\nconst AllOpenSourceSection = ({ repositories }) => (\n  <main className={classNames('section section-nude', styles.container)}>\n    <div className=\"container\">\n      <h1>Latest Open Source Projects</h1>\n\n      <div className=\"row open-source\">\n        {repositories.map(repository => (\n          <div className=\"col-md-4\" key={repository.name}>\n            <OpenSourceCard {...repository} />\n          </div>\n        ))}\n      </div>\n    </div>\n  </main>\n);\n\nAllOpenSourceSection.propTypes = {\n  repositories: PropTypes.arrayOf(\n    PropTypes.shape({\n      ...OpenSourceCard.propTypes,\n    })\n  ),\n};\n\nAllOpenSourceSection.defaultProps = {\n  repositories: [],\n};\n\nexport default AllOpenSourceSection;\n","import React, { useState, useEffect } from 'react';\n\nimport { getAllOpenSourceProjects } from './AllOpenSourceSectionData';\nimport AllOpenSourceSection from './AllOpenSourceSection';\n\nconst Component = () => {\n  const [repositories, setRepositories] = useState([]);\n\n  const loadRepositories = async () => {\n    setRepositories(await getAllOpenSourceProjects());\n  };\n\n  useEffect(() => {\n    loadRepositories();\n  }, []);\n\n  return <AllOpenSourceSection repositories={repositories} />;\n};\n\nexport default Component;\n","import React from 'react';\n\nimport Layout from '../components/Layout';\nimport SEO from '../components/SEO';\nimport AllOpenSourceSection from '../components/OpenSource/AllOpenSourceSection';\n\nconst OpenSourcePage = () => (\n  <Layout\n    breadcrumbs={[{ title: 'Open Source Projects', path: '/open-source' }]}\n  >\n    <SEO title=\"Open Source Projects\" />\n    <AllOpenSourceSection />\n  </Layout>\n);\n\nexport default OpenSourcePage;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"AllOpenSourceSection-module--container--2C_M8\"};"],"sourceRoot":""}