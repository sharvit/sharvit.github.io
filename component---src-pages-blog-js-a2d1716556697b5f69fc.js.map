{"version":3,"sources":["webpack:///./src/components/Blog/AllBlogPostsSection.js","webpack:///./src/pages/blog.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/Layout/LayoutContext.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/SEO.js","webpack:///./src/components/Layout/Navbar/Navbar.js","webpack:///./src/components/Layout/Navbar/index.js","webpack:///./src/components/Layout/Layout.js","webpack:///./src/components/Layout/index.js","webpack:///./src/components/Layout/LayoutData.js","webpack:///./src/components/Layout/Breadcrumbs/BreadcrumbItem.js","webpack:///./src/components/Layout/Breadcrumbs/Breadcrumbs.js","webpack:///./src/components/Layout/Breadcrumbs/index.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./node_modules/core-js/modules/es6.date.to-json.js","webpack:///./src/components/Blog/BlogPostList/BlogPostListItem.js","webpack:///./src/components/Blog/BlogData.js","webpack:///./src/components/Blog/BlogPostList/BlogPostListData.js","webpack:///./src/components/Blog/BlogPostList/BlogPostList.js","webpack:///./src/components/Blog/BlogPostList/index.js"],"names":["AllBlogPostsSection","react_default","a","createElement","className","BlogPostList","limit","BlogPage","Layout","breadcrumbs","title","path","SEO","Blog_AllBlogPostsSection","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","d","__webpack_exports__","loader","enqueue","React","createContext","LayoutProvider","LayoutContext","navigation","collapse","Provider","m","module","exports","require","default","_ref","description","lang","meta","_staticQueryData$data","_public_static_d_3921925534_json__WEBPACK_IMPORTED_MODULE_0__","data","siteMetadata","site","file","titleTemplate","metaTitle","metaDescription","childMarkdownRemark","rawMarkdownBody","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","name","content","property","author","avatar","twitter","concat","defaultProps","Navbar","siteTitle","transparent","toggleNavigation","classNames","styles","container","role","type","navbarToggle","onClick","iconBar","gatsby_browser_entry","to","Component","props","_useContext$navigatio","useContext","Layout_Navbar_Navbar","Object","assign","children","Fragment","Layout_Navbar","length","Breadcrumbs","items","_toConsumableArray","_useState","useState","setCollapse","value","components_Layout_Layout","_856328897","BreadcrumbItem","itemScope","itemType","itemProp","style","margin","map","item","Breadcrumbs_BreadcrumbItem","key","ProdPageRenderer","location","pageResources","InternalPageRenderer","json","$export","toObject","toPrimitive","P","F","Date","NaN","toJSON","prototype","call","toISOString","O","this","pv","isFinite","BlogPostListItem","date","excerpt","article","dateTime","toDateString","articleContent","readMoreButton","fileToBlogPost","_ref$node","node","_ref$node$childMarkdo","frontmatter","formatBlogPost","_ref2","_name$split","split","year","month","day","nameWithoutDate","slice","join","getBlogPostsList","_1183512983","allFile","edges","post","BlogPostList_BlogPostListItem"],"mappings":"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","file":"component---src-pages-blog-js-a2d1716556697b5f69fc.js","sourcesContent":["import React from 'react';\nimport BlogPostList from './BlogPostList';\n\nconst AllBlogPostsSection = () => (\n  <main className=\"section posts-section section-blog-list section-nude\">\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-md-10 col-md-offset-1\">\n          <div className=\"text-center\">\n            <h1>Latest Blog Posts</h1>\n          </div>\n        </div>\n      </div>\n\n      <BlogPostList limit={1000} />\n    </div>\n  </main>\n);\n\nexport default AllBlogPostsSection;\n","import React from 'react';\n\nimport Layout from '../components/Layout';\nimport SEO from '../components/SEO';\nimport AllBlogPostsSection from '../components/Blog/AllBlogPostsSection';\n\nconst BlogPage = () => (\n  <Layout breadcrumbs={[{ title: 'Blog', path: '/blog' }]}>\n    <SEO title=\"Blog\" />\n    <AllBlogPostsSection />\n  </Layout>\n);\n\nexport default BlogPage;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from 'react';\n\nconst LayoutContext = React.createContext({\n  navigation: {\n    collapse: true,\n  },\n});\n\nexport const LayoutProvider = LayoutContext.Provider;\n\nexport default LayoutContext;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nfunction SEO({ description, lang, meta, title }) {\n  const {\n    site: { siteMetadata },\n    file,\n  } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author {\n              twitter\n              avatar\n            }\n          }\n        }\n        file(sourceInstanceName: { eq: \"bio\" }, name: { eq: \"short-bio\" }) {\n          childMarkdownRemark {\n            rawMarkdownBody\n          }\n        }\n      }\n    `\n  );\n\n  const titleTemplate = title ? `${siteMetadata.title} | %s` : '%s';\n\n  const metaTitle =\n    title || `${siteMetadata.title} | ${siteMetadata.description}`;\n\n  const metaDescription =\n    description || file.childMarkdownRemark.rawMarkdownBody;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={metaTitle}\n      titleTemplate={titleTemplate}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: metaTitle,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: 'og:image',\n          content: siteMetadata.author.avatar,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:site`,\n          content: `@${siteMetadata.author.twitter}`,\n        },\n        {\n          name: `twitter:creator`,\n          content: `@${siteMetadata.author.twitter}`,\n        },\n      ].concat(meta)}\n    />\n  );\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string,\n};\n\nSEO.defaultProps = {\n  lang: 'en',\n  meta: [],\n  description: '',\n  title: '',\n};\n\nexport default SEO;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Link } from 'gatsby';\n\nimport styles from './Navbar.module.scss';\n\nconst Navbar = ({ siteTitle, transparent, collapse, toggleNavigation }) => (\n  <nav\n    className={classNames(\n      'navbar',\n      styles.container,\n      transparent ? 'navbar-ct-transparent' : 'navbar-ct-primary'\n    )}\n    role=\"navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-header\">\n        <button\n          type=\"button\"\n          className={classNames('navbar-toggle', styles.navbarToggle)}\n          onClick={() => toggleNavigation()}\n        >\n          <span className=\"sr-only\">Toggle navigation</span>\n          <span className={classNames('icon-bar', styles.iconBar)} />\n          <span className={classNames('icon-bar', styles.iconBar)} />\n          <span className={classNames('icon-bar', styles.iconBar)} />\n        </button>\n        <Link to=\"/\" className=\"navbar-brand\">\n          {siteTitle}\n        </Link>\n      </div>\n      <div className={classNames({ collapse }, 'navbar-collapse')}>\n        <ul className=\"nav navbar-nav navbar-right\">\n          <li>\n            <Link to=\"/blog\">Blog</Link>\n          </li>\n          <li>\n            <Link to=\"/open-source\">Open Source</Link>\n          </li>\n          <li>\n            <Link to=\"/about\">About</Link>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </nav>\n);\n\nNavbar.propTypes = {\n  siteTitle: PropTypes.string,\n  transparent: PropTypes.bool,\n  collapse: PropTypes.bool,\n  toggleNavigation: PropTypes.func,\n};\n\nNavbar.defaultProps = {\n  siteTitle: ``,\n  transparent: false,\n  collapse: false,\n  toggleNavigation: () => null,\n};\n\nexport default Navbar;\n","import React, { useContext } from 'react';\nimport LayoutContext from '../LayoutContext';\nimport Navbar from './Navbar';\n\nconst Component = props => {\n  const {\n    navigation: { collapse, toggleNavigation },\n  } = useContext(LayoutContext);\n\n  return (\n    <Navbar\n      collapse={collapse}\n      toggleNavigation={toggleNavigation}\n      {...props}\n    />\n  );\n};\n\nexport default Component;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Navbar from './Navbar';\nimport Breadcrumbs from './Breadcrumbs';\nimport '../../stylesheet/main.scss';\n\nconst Layout = ({ siteTitle, transparent, breadcrumbs, children }) => (\n  <>\n    <Navbar siteTitle={siteTitle} transparent={transparent} />\n    {breadcrumbs && breadcrumbs.length > 0 && (\n      <Breadcrumbs items={[{ title: siteTitle, path: '/' }, ...breadcrumbs]} />\n    )}\n    <div className=\"wrapper\">{children}</div>\n  </>\n);\n\nLayout.propTypes = {\n  transparent: PropTypes.bool,\n  siteTitle: PropTypes.string,\n  breadcrumbs: Breadcrumbs.propTypes.items,\n  children: PropTypes.node.isRequired,\n};\n\nLayout.defaultProps = {\n  siteTitle: '',\n  breadcrumbs: [],\n  transparent: false,\n};\n\nexport default Layout;\n","import React, { useState } from 'react';\n\nimport { LayoutProvider } from './LayoutContext';\nimport { getSiteTitle } from './LayoutData';\nimport Layout from './Layout';\n\nconst Component = props => {\n  const [collapse, setCollapse] = useState(true);\n  const toggleNavigation = () => setCollapse(!collapse);\n\n  return (\n    <LayoutProvider value={{ navigation: { collapse, toggleNavigation } }}>\n      <Layout {...props} siteTitle={getSiteTitle()} />\n    </LayoutProvider>\n  );\n};\n\nexport default Component;\n","import { useStaticQuery, graphql } from 'gatsby';\n\nexport const getSiteTitle = () =>\n  useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `).site.siteMetadata.title;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\n\nconst BreadcrumbItem = ({ title, path }) => (\n  <li itemScope itemType=\"http://data-vocabulary.org/Breadcrumb\">\n    <Link to={path} itemProp=\"url\">\n      <span itemProp=\"title\">{title}</span>\n    </Link>\n  </li>\n);\n\nBreadcrumbItem.propTypes = {\n  title: PropTypes.string,\n  path: PropTypes.string,\n};\n\nBreadcrumbItem.defaultProps = {\n  title: '',\n  path: '',\n};\n\nexport default BreadcrumbItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport BreadcrumbItem from './BreadcrumbItem';\n\nconst Breadcrumbs = ({ items }) => (\n  <nav className=\"breadcrumbs\">\n    <ol className=\"breadcrumb\" style={{ margin: 0 }}>\n      {items.map(item => (\n        <BreadcrumbItem key={item.path} {...item} />\n      ))}\n    </ol>\n  </nav>\n);\n\nBreadcrumbs.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      ...Breadcrumbs.propTypes,\n    })\n  ).isRequired,\n};\n\nexport default Breadcrumbs;\n","import Breadcrumbs from './Breadcrumbs';\n\nexport default Breadcrumbs;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","'use strict';\nvar $export = require('./_export');\nvar toObject = require('./_to-object');\nvar toPrimitive = require('./_to-primitive');\n\n$export($export.P + $export.F * require('./_fails')(function () {\n  return new Date(NaN).toJSON() !== null\n    || Date.prototype.toJSON.call({ toISOString: function () { return 1; } }) !== 1;\n}), 'Date', {\n  // eslint-disable-next-line no-unused-vars\n  toJSON: function toJSON(key) {\n    var O = toObject(this);\n    var pv = toPrimitive(O);\n    return typeof pv == 'number' && !isFinite(pv) ? null : O.toISOString();\n  }\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Link } from 'gatsby';\n\nimport styles from './BlogPostListItem.module.scss';\n\nconst BlogPostListItem = ({ title, path, date, excerpt }) => (\n  <article className={styles.article}>\n    <div className=\"row\">\n      <div className=\"col-md-10 col-md-offset-1\">\n        <div className=\"text-center\">\n          <Link to={path}>\n            <h2 className={styles.title}>{title}</h2>\n          </Link>\n          <div className=\"title-uppercase\">\n            <time dateTime={date.toJSON()}>{date.toDateString()}</time>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div className=\"row\">\n      <div className=\"col-md-8 col-md-offset-2\">\n        <div className={styles.articleContent}>\n          <p>{excerpt}</p>\n          <Link\n            to={path}\n            className={classNames(\n              'btn btn-simple btn-primary',\n              styles.readMoreButton\n            )}\n          >\n            READ MORE\n          </Link>\n        </div>\n      </div>\n    </div>\n  </article>\n);\n\nBlogPostListItem.propTypes = {\n  title: PropTypes.string,\n  path: PropTypes.string,\n  date: PropTypes.instanceOf(Date),\n  excerpt: PropTypes.string,\n};\n\nBlogPostListItem.defaultProps = {\n  title: '',\n  path: '',\n  date: new Date(),\n  excerpt: '',\n};\n\nexport default BlogPostListItem;\n","import { useStaticQuery, graphql } from 'gatsby';\n\nexport const getBlogPosts = () =>\n  useStaticQuery(\n    graphql`\n      {\n        allFile(\n          filter: { sourceInstanceName: { eq: \"posts\" } }\n          sort: { order: DESC, fields: name }\n          limit: 1000\n        ) {\n          edges {\n            node {\n              name\n              childMarkdownRemark {\n                excerpt\n                frontmatter {\n                  title\n                }\n              }\n            }\n          }\n        }\n      }\n    `\n  ).allFile.edges.map(fileToBlogPost);\n\nexport const fileToBlogPost = ({\n  node: {\n    name,\n    childMarkdownRemark: {\n      excerpt,\n      frontmatter: { title },\n    },\n  },\n}) => formatBlogPost({ name, title, excerpt });\n\nexport const formatBlogPost = ({ name, title, excerpt }) => {\n  const [year, month, day, ...nameWithoutDate] = name.split('-');\n  const date = new Date(`${year}-${month}-${day}`);\n\n  return {\n    title,\n    date,\n    excerpt,\n    path: `/blog/${nameWithoutDate.join('-')}`,\n  };\n};\n","import { getBlogPosts } from '../BlogData';\n\nexport const getBlogPostsList = limit => getBlogPosts().slice(0, limit);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// import classNames from 'classnames';\n\nimport BlogPostListItem from './BlogPostListItem';\nimport { getBlogPostsList } from './BlogPostListData';\n// import styles from './LatestBlogPostsSection.module.scss';\n\nconst BlogPostList = ({ limit }) => (\n  <div className=\"articles\">\n    {getBlogPostsList(limit).map(post => (\n      <BlogPostListItem key={post.path} {...post} />\n    ))}\n  </div>\n);\n\nBlogPostList.propTypes = {\n  limit: PropTypes.number,\n};\n\nBlogPostList.defaultProps = {\n  limit: 1000,\n};\n\nexport default BlogPostList;\n","import BlogPostList from './BlogPostList';\n\nexport default BlogPostList;\n"],"sourceRoot":""}