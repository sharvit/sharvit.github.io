{"version":3,"file":"component---src-pdf-pages-avi-sharvit-resume-tsx-2ab5cc39086e875d8d75.js","mappings":"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","sources":["webpack://avi-sharvit/./src/pdf-pages/avi-sharvit-resume.module.css","webpack://avi-sharvit/./src/pdf-pages/avi-sharvit-resume.tsx","webpack://avi-sharvit/./src/profile/hooks/useAboutHTML.ts","webpack://avi-sharvit/./src/profile/hooks/useHomeCoverImage.ts","webpack://avi-sharvit/./src/profile/hooks/useAboutCoverImage.ts","webpack://avi-sharvit/./src/profile/hooks/useShortAboutHTML.ts","webpack://avi-sharvit/./src/profile/hooks/useAuthorProfile.ts","webpack://avi-sharvit/./src/profile/hooks/useSocialLinks.ts","webpack://avi-sharvit/./src/profile/hooks/useAuthorCV.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var about = \"avi-sharvit-resume-module--about--ace0e\";\nexport var bulletPoint = \"avi-sharvit-resume-module--bullet-point--a3b40\";\nexport var contact = \"avi-sharvit-resume-module--contact--0c5e6\";\nexport var experience = \"avi-sharvit-resume-module--experience--0aae0\";\nexport var page = \"avi-sharvit-resume-module--page--58e0c\";\nexport var skill = \"avi-sharvit-resume-module--skill--4d55a\";\nexport var skills = \"avi-sharvit-resume-module--skills--41508\";\nexport var skillsSection = \"avi-sharvit-resume-module--skills-section--8e530\";\nexport var years = \"avi-sharvit-resume-module--years--1d179\";","import React from \"react\";\n\nimport {\n  useAuthorProfile,\n  useAuthorCV,\n  useShortAboutHTML,\n} from \"../profile/hooks\";\n\nimport * as styles from \"./avi-sharvit-resume.module.css\";\n\nexport default function AviSharvitResumePDF() {\n  const authorProfile = useAuthorProfile();\n  const aboutHTML = useShortAboutHTML();\n  const authorCV = useAuthorCV();\n\n  return (\n    <div className={styles.page}>\n      <h1>\n        {authorProfile.name} | {authorProfile.title}\n      </h1>\n\n      <section className={styles.contact}>\n        <ul>\n          <li>\n            <strong>phone:</strong>{\" \"}\n            <a href={`tel: ${authorProfile.phone}`}>{authorProfile.phone}</a>\n          </li>\n          <li>\n            <strong>e-mail:</strong>{\" \"}\n            <a href={`mailto: ${authorProfile.email}`}>{authorProfile.email}</a>\n          </li>\n          <li>\n            <strong>website:</strong>{\" \"}\n            <a href={authorProfile.website}>{authorProfile.website}</a>\n          </li>\n        </ul>\n      </section>\n\n      <section className={styles.about}>\n        <h2>My Story</h2>\n        <div dangerouslySetInnerHTML={{ __html: aboutHTML }} />\n      </section>\n\n      <section className={styles.skillsSection}>\n        <h2>Main Skills</h2>\n        <p className={styles.skills}>\n          {authorCV.skills.map((skill) => (\n            <span key={skill} className={styles.skill}>\n              {skill}\n            </span>\n          ))}\n        </p>\n      </section>\n\n      {authorCV.experiences.map((e) => (\n        <div key={e.company} className={styles.experience}>\n          <h3>{e.position}</h3>\n          <h4>{e.company}</h4>\n          <div className={styles.years}>{e.years}</div>\n          <ul>\n            {e.bulletPoints.map((bp) => (\n              <li key={bp} className={styles.bulletPoint}>\n                {bp}\n              </li>\n            ))}\n          </ul>\n          {/* <SkillsList skills={e.tags} /> */}\n          {/* <hr /> */}\n        </div>\n      ))}\n    </div>\n  );\n}\n","import { useStaticQuery, graphql } from \"gatsby\";\n\n// eslint-disable-next-line no-undef\nexport type AboutMarkdownQuery = Queries.AboutMarkdownQuery;\n\nexport const useAboutHTML = (): string =>\n  useStaticQuery<AboutMarkdownQuery>(graphql`\n    query AboutMarkdown {\n      file(sourceInstanceName: { eq: \"bio\" }, name: { eq: \"about\" }) {\n        childMarkdownRemark {\n          html\n        }\n      }\n    }\n  `).file?.childMarkdownRemark?.html || \"\";\n","import { useStaticQuery, graphql } from \"gatsby\";\n\nimport { CoverImageSharp } from \"../../components/Layout/components/CoverImage\";\n\n// eslint-disable-next-line no-undef\nexport type HomeCoverImageQuery = Queries.HomeCoverImageQuery;\n\nexport const useHomeCoverImage = (): CoverImageSharp | undefined =>\n  useStaticQuery<HomeCoverImageQuery>(graphql`\n    query HomeCoverImage {\n      file(\n        sourceInstanceName: { eq: \"images\" }\n        name: { eq: \"home-cover-background\" }\n      ) {\n        childImageSharp {\n          ...CoverImageSharp\n        }\n      }\n    }\n  `).file?.childImageSharp || undefined;\n","import { useStaticQuery, graphql } from \"gatsby\";\n\nimport { CoverImageSharp } from \"../../components/Layout/components/CoverImage\";\n\n// eslint-disable-next-line no-undef\nexport type AboutCoverImageQuery = Queries.AboutCoverImageQuery;\n\nexport const useAboutCoverImage = (): CoverImageSharp | undefined =>\n  useStaticQuery<AboutCoverImageQuery>(graphql`\n    query AboutCoverImage {\n      file(\n        sourceInstanceName: { eq: \"images\" }\n        name: { eq: \"about-page-cover-background\" }\n      ) {\n        childImageSharp {\n          ...CoverImageSharp\n        }\n      }\n    }\n  `).file?.childImageSharp || undefined;\n","import { useStaticQuery, graphql } from \"gatsby\";\n\n// eslint-disable-next-line no-undef\nexport type ShortAboutMarkdownQuery = Queries.ShortAboutMarkdownQuery;\n\nexport const useShortAboutHTML = (): string =>\n  useStaticQuery<ShortAboutMarkdownQuery>(graphql`\n    query ShortAboutMarkdown {\n      file(sourceInstanceName: { eq: \"bio\" }, name: { eq: \"short-bio\" }) {\n        childMarkdownRemark {\n          html\n        }\n      }\n    }\n  `).file?.childMarkdownRemark?.html || \"\";\n","import { useStaticQuery, graphql } from \"gatsby\";\nimport { IAuthorProfile } from \"../../../content/bio/types\";\n\n// eslint-disable-next-line no-undef\nexport type AuthorProfileQuery = Queries.AuthorProfileQuery;\n\nexport const mapAuthorProfileQuery = (\n  data: AuthorProfileQuery,\n): IAuthorProfile => {\n  const { profile } = data.file?.childYaml || {};\n\n  return {\n    name: profile?.name || \"\",\n    nickname: profile?.nickname || \"\",\n    title: profile?.title || \"\",\n    website: profile?.website || \"\",\n    phone: profile?.phone || \"\",\n    email: profile?.email || \"\",\n    github: profile?.github || \"\",\n    twitter: profile?.twitter || \"\",\n    stackoverflow: profile?.stackoverflow?.toString() || \"\",\n    disqus: profile?.disqus || \"\",\n    avatar: profile?.avatar || \"\",\n  };\n};\n\nexport const useAuthorProfile = (): IAuthorProfile => {\n  const data = useStaticQuery<AuthorProfileQuery>(graphql`\n    query AuthorProfile {\n      file(sourceInstanceName: { eq: \"bio\" }, name: { eq: \"author\" }) {\n        childYaml {\n          profile {\n            name\n            nickname\n            title\n            website\n            email\n            phone\n            github\n            twitter\n            stackoverflow\n            disqus\n            avatar\n          }\n        }\n      }\n    }\n  `);\n\n  return mapAuthorProfileQuery(data);\n};\n","import { useMemo } from \"react\";\n\nimport { ISocialLink } from \"../components/SocialLinks/types\";\nimport { useAuthorProfile } from \"./useAuthorProfile\";\n\nexport const useSocialLinks = (): ISocialLink[] => {\n  const profile = useAuthorProfile();\n\n  return useMemo(\n    () => [\n      {\n        type: \"github\",\n        href: `https://github.com/${profile.github}`,\n        label: profile.github,\n      },\n      {\n        type: \"twitter\",\n        href: `https://www.twitter.com/${profile.twitter}`,\n        label: profile.twitter,\n      },\n      {\n        type: \"stackoverflow\",\n        href: `https://stackoverflow.com/users/${profile.stackoverflow}`,\n        label: profile.nickname,\n      },\n      {\n        type: \"email\",\n        href: `mailto:${profile.email}`,\n        label: profile.email,\n      },\n    ],\n    [profile],\n  );\n};\n","import { useStaticQuery, graphql } from \"gatsby\";\n\n// eslint-disable-next-line no-undef\nexport type AuthorCVQuery = Queries.AuthorCVQuery;\n\nexport interface IAuthorExperience {\n  company: string;\n  position: string;\n  years: string;\n  tags: string[];\n  bulletPoints: string[];\n}\n\nexport interface IAuthorCV {\n  skills: string[];\n  experiences: IAuthorExperience[];\n}\n\nexport const mapAuthorCVQuery = (data: AuthorCVQuery): IAuthorCV => {\n  const { cv } = data.file?.childYaml || {};\n\n  return {\n    skills: cv?.skills?.trim().split(\", \") || [],\n    experiences:\n      cv?.experiences?.map((e) => ({\n        company: e?.company || \"\",\n        position: e?.position || \"\",\n        years: e?.years || \"\",\n        tags: e?.tags?.trim().split(\", \") || [],\n        bulletPoints: e?.bullet_points?.map((bp) => bp?.trim() || \"\") || [],\n      })) || [],\n  };\n};\n\nexport const useAuthorCV = (): IAuthorCV => {\n  const data = useStaticQuery<AuthorCVQuery>(graphql`\n    query AuthorCV {\n      file(sourceInstanceName: { eq: \"bio\" }, name: { eq: \"author\" }) {\n        childYaml {\n          cv {\n            skills\n            experiences {\n              company\n              position\n              years\n              tags\n              bullet_points\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  return mapAuthorCVQuery(data);\n};\n"],"names":["about","bulletPoint","contact","experience","page","skills","skillsSection","years","AviSharvitResumePDF","authorProfile","useAuthorProfile","aboutHTML","useShortAboutHTML","authorCV","useAuthorCV","React","className","styles","name","title","href","phone","email","website","dangerouslySetInnerHTML","__html","map","skill","key","experiences","e","company","position","bulletPoints","bp","useHomeCoverImage","_useStaticQuery$file","useStaticQuery","file","childImageSharp","undefined","useAboutCoverImage","_useStaticQuery$file$","childMarkdownRemark","html","data","_data$file","_profile$stackoverflo","profile","childYaml","nickname","github","twitter","stackoverflow","toString","disqus","avatar","mapAuthorProfileQuery","useSocialLinks","useMemo","type","label","_cv$skills","_cv$experiences","cv","trim","split","_e$tags","_e$bullet_points","tags","bullet_points","mapAuthorCVQuery"],"sourceRoot":""}