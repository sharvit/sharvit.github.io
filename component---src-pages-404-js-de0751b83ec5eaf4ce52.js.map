{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/Layout/LayoutContext.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/SEO.js","webpack:///./src/components/Layout/Navbar/Navbar.js","webpack:///./src/components/Layout/Navbar/index.js","webpack:///./src/components/Layout/Layout.js","webpack:///./src/components/Layout/index.js","webpack:///./src/components/Layout/LayoutData.js","webpack:///./src/components/Layout/Breadcrumbs/BreadcrumbItem.js","webpack:///./src/components/Layout/Breadcrumbs/Breadcrumbs.js","webpack:///./src/components/Layout/Breadcrumbs/index.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_Layout__WEBPACK_IMPORTED_MODULE_1__","_components_SEO__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","a","createElement","title","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","d","loader","enqueue","React","createContext","LayoutProvider","LayoutContext","navigation","collapse","Provider","m","module","exports","require","default","SEO","_ref","description","lang","meta","_staticQueryData$data","_public_static_d_3921925534_json__WEBPACK_IMPORTED_MODULE_0__","data","siteMetadata","site","file","titleTemplate","metaTitle","metaDescription","childMarkdownRemark","rawMarkdownBody","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","name","content","property","author","avatar","twitter","concat","defaultProps","Navbar","siteTitle","transparent","toggleNavigation","react_default","className","classNames","styles","container","role","type","navbarToggle","onClick","iconBar","gatsby_browser_entry","to","Component","props","_useContext$navigatio","useContext","Layout_Navbar_Navbar","Object","assign","Layout","breadcrumbs","children","Fragment","Layout_Navbar","length","Breadcrumbs","items","path","_toConsumableArray","_useState","useState","setCollapse","value","components_Layout_Layout","_856328897","BreadcrumbItem","itemScope","itemType","itemProp","style","margin","map","item","Breadcrumbs_BreadcrumbItem","key","ProdPageRenderer","location","pageResources","InternalPageRenderer","json"],"mappings":"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","file":"component---src-pages-404-js-de0751b83ec5eaf4ce52.js","sourcesContent":["import React from 'react';\n\nimport Layout from '../components/Layout';\nimport SEO from '../components/SEO';\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n);\n\nexport default NotFoundPage;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from 'react';\n\nconst LayoutContext = React.createContext({\n  navigation: {\n    collapse: true,\n  },\n});\n\nexport const LayoutProvider = LayoutContext.Provider;\n\nexport default LayoutContext;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nfunction SEO({ description, lang, meta, title }) {\n  const {\n    site: { siteMetadata },\n    file,\n  } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author {\n              twitter\n              avatar\n            }\n          }\n        }\n        file(sourceInstanceName: { eq: \"bio\" }, name: { eq: \"short-bio\" }) {\n          childMarkdownRemark {\n            rawMarkdownBody\n          }\n        }\n      }\n    `\n  );\n\n  const titleTemplate = title ? `${siteMetadata.title} | %s` : '%s';\n\n  const metaTitle =\n    title || `${siteMetadata.title} | ${siteMetadata.description}`;\n\n  const metaDescription =\n    description || file.childMarkdownRemark.rawMarkdownBody;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={metaTitle}\n      titleTemplate={titleTemplate}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: metaTitle,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: 'og:image',\n          content: siteMetadata.author.avatar,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:site`,\n          content: `@${siteMetadata.author.twitter}`,\n        },\n        {\n          name: `twitter:creator`,\n          content: `@${siteMetadata.author.twitter}`,\n        },\n      ].concat(meta)}\n    />\n  );\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string,\n};\n\nSEO.defaultProps = {\n  lang: 'en',\n  meta: [],\n  description: '',\n  title: '',\n};\n\nexport default SEO;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Link } from 'gatsby';\n\nimport styles from './Navbar.module.scss';\n\nconst Navbar = ({ siteTitle, transparent, collapse, toggleNavigation }) => (\n  <nav\n    className={classNames(\n      'navbar',\n      styles.container,\n      transparent ? 'navbar-ct-transparent' : 'navbar-ct-primary'\n    )}\n    role=\"navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-header\">\n        <button\n          type=\"button\"\n          className={classNames('navbar-toggle', styles.navbarToggle)}\n          onClick={() => toggleNavigation()}\n        >\n          <span className=\"sr-only\">Toggle navigation</span>\n          <span className={classNames('icon-bar', styles.iconBar)} />\n          <span className={classNames('icon-bar', styles.iconBar)} />\n          <span className={classNames('icon-bar', styles.iconBar)} />\n        </button>\n        <Link to=\"/\" className=\"navbar-brand\">\n          {siteTitle}\n        </Link>\n      </div>\n      <div className={classNames({ collapse }, 'navbar-collapse')}>\n        <ul className=\"nav navbar-nav navbar-right\">\n          <li>\n            <Link to=\"/blog\">Blog</Link>\n          </li>\n          <li>\n            <Link to=\"/open-source\">Open Source</Link>\n          </li>\n          <li>\n            <Link to=\"/about\">About</Link>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </nav>\n);\n\nNavbar.propTypes = {\n  siteTitle: PropTypes.string,\n  transparent: PropTypes.bool,\n  collapse: PropTypes.bool,\n  toggleNavigation: PropTypes.func,\n};\n\nNavbar.defaultProps = {\n  siteTitle: ``,\n  transparent: false,\n  collapse: false,\n  toggleNavigation: () => null,\n};\n\nexport default Navbar;\n","import React, { useContext } from 'react';\nimport LayoutContext from '../LayoutContext';\nimport Navbar from './Navbar';\n\nconst Component = props => {\n  const {\n    navigation: { collapse, toggleNavigation },\n  } = useContext(LayoutContext);\n\n  return (\n    <Navbar\n      collapse={collapse}\n      toggleNavigation={toggleNavigation}\n      {...props}\n    />\n  );\n};\n\nexport default Component;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Navbar from './Navbar';\nimport Breadcrumbs from './Breadcrumbs';\nimport '../../stylesheet/main.scss';\n\nconst Layout = ({ siteTitle, transparent, breadcrumbs, children }) => (\n  <>\n    <Navbar siteTitle={siteTitle} transparent={transparent} />\n    {breadcrumbs && breadcrumbs.length > 0 && (\n      <Breadcrumbs items={[{ title: siteTitle, path: '/' }, ...breadcrumbs]} />\n    )}\n    <div className=\"wrapper\">{children}</div>\n  </>\n);\n\nLayout.propTypes = {\n  transparent: PropTypes.bool,\n  siteTitle: PropTypes.string,\n  breadcrumbs: Breadcrumbs.propTypes.items,\n  children: PropTypes.node.isRequired,\n};\n\nLayout.defaultProps = {\n  siteTitle: '',\n  breadcrumbs: [],\n  transparent: false,\n};\n\nexport default Layout;\n","import React, { useState } from 'react';\n\nimport { LayoutProvider } from './LayoutContext';\nimport { getSiteTitle } from './LayoutData';\nimport Layout from './Layout';\n\nconst Component = props => {\n  const [collapse, setCollapse] = useState(true);\n  const toggleNavigation = () => setCollapse(!collapse);\n\n  return (\n    <LayoutProvider value={{ navigation: { collapse, toggleNavigation } }}>\n      <Layout {...props} siteTitle={getSiteTitle()} />\n    </LayoutProvider>\n  );\n};\n\nexport default Component;\n","import { useStaticQuery, graphql } from 'gatsby';\n\nexport const getSiteTitle = () =>\n  useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `).site.siteMetadata.title;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\n\nconst BreadcrumbItem = ({ title, path }) => (\n  <li itemScope itemType=\"http://data-vocabulary.org/Breadcrumb\">\n    <Link to={path} itemProp=\"url\">\n      <span itemProp=\"title\">{title}</span>\n    </Link>\n  </li>\n);\n\nBreadcrumbItem.propTypes = {\n  title: PropTypes.string,\n  path: PropTypes.string,\n};\n\nBreadcrumbItem.defaultProps = {\n  title: '',\n  path: '',\n};\n\nexport default BreadcrumbItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport BreadcrumbItem from './BreadcrumbItem';\n\nconst Breadcrumbs = ({ items }) => (\n  <nav className=\"breadcrumbs\">\n    <ol className=\"breadcrumb\" style={{ margin: 0 }}>\n      {items.map(item => (\n        <BreadcrumbItem key={item.path} {...item} />\n      ))}\n    </ol>\n  </nav>\n);\n\nBreadcrumbs.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      ...Breadcrumbs.propTypes,\n    })\n  ).isRequired,\n};\n\nexport default Breadcrumbs;\n","import Breadcrumbs from './Breadcrumbs';\n\nexport default Breadcrumbs;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}