{"version":3,"file":"component---src-templates-post-tsx-5f93cae467c8d71b492d.js","mappings":"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","sources":["webpack://avi-sharvit/./src/blog/utils.ts","webpack://avi-sharvit/./src/blog/hooks.ts","webpack://avi-sharvit/./src/blog/components/BlogPost/BlogPost.tsx","webpack://avi-sharvit/./src/blog/components/BlogPost/BlogPost.module.css","webpack://avi-sharvit/./src/blog/components/BlogPostListItem/BlogPostListItem.tsx","webpack://avi-sharvit/./src/blog/components/BlogPostListItem/BlogPostListItem.module.css","webpack://avi-sharvit/./src/blog/components/BlogPostList/BlogPostList.tsx","webpack://avi-sharvit/./src/blog/components/BlogSection/BlogSection.tsx","webpack://avi-sharvit/./src/blog/components/BlogSection/BlogSection.module.css","webpack://avi-sharvit/./src/templates/post.tsx"],"sourcesContent":["import { IBlogPost, PostFileFragment } from './types';\n\nexport const getDateFromName = (name: string): Date => {\n  const [year, month, day] = name.split('-');\n  return new Date(`${year}-${month}-${day}`);\n};\n\nexport const mapBlogPostData = (data: PostFileFragment): IBlogPost => ({\n  name: data.name,\n  title: data.childMarkdownRemark?.frontmatter?.title || '',\n  date: getDateFromName(data.name),\n  url: `/blog/${data.name}`,\n  excerpt: data.childMarkdownRemark?.excerpt || '',\n  html: data.childMarkdownRemark?.html || '',\n  coverImage:\n    data.childMarkdownRemark?.frontmatter?.coverImage?.childImageSharp ||\n    undefined,\n});\n","import { useStaticQuery, graphql } from 'gatsby';\nimport { useMemo } from 'react';\n\nimport { GetBlogPostsQuery, IBlogPost, PostFileFragment } from './types';\nimport { mapBlogPostData } from './utils';\n\nexport const useGetBlogPostsQuery = (top?: number) => {\n  const postFileFragments = useStaticQuery<GetBlogPostsQuery>(graphql`\n    query GetBlogPosts {\n      allFile(\n        filter: { sourceInstanceName: { eq: \"posts\" } }\n        sort: { order: DESC, fields: name }\n        limit: 10000\n      ) {\n        nodes {\n          ...PostFile\n        }\n      }\n    }\n  `).allFile.nodes as PostFileFragment[];\n\n  return useMemo(() => {\n    if (top) {\n      return postFileFragments.slice(0, top);\n    }\n    return postFileFragments;\n  }, [postFileFragments, top]);\n};\n\nexport const useBlogPosts = (top?: number): IBlogPost[] => {\n  const data = useGetBlogPostsQuery(top);\n\n  return data.map(mapBlogPostData);\n};\n","import React, { useMemo } from 'react';\n\nimport * as styles from './BlogPost.module.css';\n\nexport interface IBlogPostProps {\n  title: string;\n  date: Date;\n  html: string;\n}\n\nexport const BlogPost = ({ title, date, html }: IBlogPostProps) => {\n  const dateString = useMemo(() => date.toDateString(), [date]);\n  const dateJson = useMemo(() => date.toJSON(), [date]);\n\n  return (\n    <article className={styles.post}>\n      <header>\n        <h1>{title}</h1>\n        <time dateTime={dateJson}>{dateString}</time>\n      </header>\n      <div\n        className={styles.postContent}\n        dangerouslySetInnerHTML={{ __html: html }}\n      />\n    </article>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport var post = \"BlogPost-module--post--b8740\";\nexport var postContent = \"BlogPost-module--postContent--2fb97\";","import React from 'react';\nimport { Link } from 'gatsby';\n\nimport { IBlogPost } from '../../types';\nimport { CoverImage } from '../../../components/Layout/components/CoverImage';\n\nimport * as styles from './BlogPostListItem.module.css';\n\nexport interface IBlogPostListItemProps {\n  blogPost: IBlogPost;\n}\n\nexport function BlogPostListItem({\n  blogPost: { title, date, url, excerpt, coverImage },\n}: IBlogPostListItemProps) {\n  return (\n    <article className={styles.blogPostItem}>\n      <header>\n        {coverImage && (\n          <Link to={url}>\n            <CoverImage alt={title} image={coverImage} />\n          </Link>\n        )}\n        <Link to={url}>\n          <h3>{title}</h3>\n        </Link>\n        <time dateTime={date.toJSON()}>{date.toDateString()}</time>\n      </header>\n      <p>{excerpt}</p>\n      <footer>\n        <Link to={url}>#read_more</Link>\n      </footer>\n    </article>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport var blogPostItem = \"BlogPostListItem-module--blog-post-item--9faee\";","import React from 'react';\n\nimport { BlogPostListItem } from '../BlogPostListItem';\nimport { useBlogPosts } from '../../hooks';\n\nexport interface IBlogPostListProps {\n  top?: number;\n}\n\nexport const BlogPostList = ({ top }: IBlogPostListProps) => {\n  const blogPosts = useBlogPosts(top);\n\n  return (\n    <>\n      {blogPosts.map((blogPost) => (\n        <BlogPostListItem key={blogPost.name} blogPost={blogPost} />\n      ))}\n    </>\n  );\n};\n","import React from 'react';\n\nimport { Section } from '../../../components';\nimport { BlogPostList } from '../BlogPostList';\n\nimport * as styles from './BlogSection.module.css';\n\nexport const BlogSection = () => (\n  <Section\n    title=\"Latest Blog Posts\"\n    footer=\"#all_blog_posts\"\n    link=\"/blog\"\n    className={styles.blogSection}\n  >\n    <BlogPostList top={5} />\n  </Section>\n);\n","// extracted by mini-css-extract-plugin\nexport var blogSection = \"BlogSection-module--blog-section--8f530\";","import * as React from 'react';\nimport { graphql, HeadProps, PageProps } from 'gatsby';\n\nimport { Layout, Seo } from '../components';\nimport { BlogPost, mapBlogPostData, PostFileFragment } from '../blog';\n\nimport * as pageStyles from '../pages/page.module.css';\n\n// eslint-disable-next-line no-undef\nexport type IPostTemplateData = Queries.GetPostFileQuery;\n\nexport interface IPostTemplateContext {\n  id: string;\n  postPath: string;\n}\n\nexport const query = graphql`\n  fragment PostFile on File {\n    name\n    childMarkdownRemark {\n      html\n      excerpt(pruneLength: 280)\n      frontmatter {\n        title\n        coverImage {\n          childImageSharp {\n            ...CoverImageSharp\n          }\n        }\n      }\n    }\n  }\n  query GetPostFile($id: String) {\n    file(id: { eq: $id }) {\n      ...PostFile\n    }\n  }\n`;\n\nexport const Head = ({ data }: HeadProps<IPostTemplateData>) => {\n  const { title, excerpt } = mapBlogPostData(data.file as PostFileFragment);\n\n  return <Seo title={title} description={excerpt} />;\n};\n\nconst PostTemplate = ({\n  data,\n  pageContext,\n}: PageProps<IPostTemplateData, IPostTemplateContext>) => {\n  const { title, coverImage, html, date } = mapBlogPostData(\n    data.file as PostFileFragment\n  );\n\n  return (\n    <Layout\n      className={pageStyles.page}\n      breadcrumbs={[\n        { title: 'Blog', path: '/blog' },\n        { title, path: pageContext.postPath },\n      ]}\n      coverImage={\n        coverImage && {\n          alt: title,\n          image: coverImage,\n        }\n      }\n    >\n      <BlogPost title={title} date={date} html={html} />\n    </Layout>\n  );\n};\n\nexport default PostTemplate;\n"],"names":["getDateFromName","name","year","month","day","split","Date","mapBlogPostData","data","_data$childMarkdownRe","_data$childMarkdownRe2","_data$childMarkdownRe3","_data$childMarkdownRe4","_data$childMarkdownRe5","_data$childMarkdownRe6","_data$childMarkdownRe7","title","childMarkdownRemark","frontmatter","date","url","excerpt","html","coverImage","childImageSharp","undefined","useBlogPosts","top","postFileFragments","useStaticQuery","allFile","nodes","useMemo","slice","useGetBlogPostsQuery","map","BlogPost","_ref","dateString","toDateString","dateJson","toJSON","React","className","dateTime","dangerouslySetInnerHTML","__html","BlogPostListItem","blogPost","Link","to","CoverImage","alt","image","BlogPostList","blogPosts","key","BlogSection","Section","footer","link","Head","file","Seo","description","_ref2","pageContext","Layout","pageStyles","breadcrumbs","path","postPath"],"sourceRoot":""}