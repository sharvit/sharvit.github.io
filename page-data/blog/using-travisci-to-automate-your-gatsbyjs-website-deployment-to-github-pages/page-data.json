{"componentChunkName":"component---src-templates-post-js","path":"/blog/using-travisci-to-automate-your-gatsbyjs-website-deployment-to-github-pages","webpackCompilationHash":"3b14e2cad893492bfafe","result":{"data":{"file":{"childMarkdownRemark":{"html":"<p><a href=\"https://www.gatsbyjs.org/\">Gatsby</a> is a free and open-source framework based on React that helps developers build blazing-fast websites and apps.\nIn this blog post, you will learn how I deploy my <a href=\"https://www.gatsbyjs.org/\">Gatsby</a> website to <a href=\"https://pages.github.com/\">Github Pages</a> using <a href=\"https://travis-ci.org/\">TravisCI</a> to automate the process.</p>\n<h2>Choose your Github Pages type</h2>\n<table>\n<thead>\n<tr>\n<th>type</th>\n<th>domain</th>\n<th>repository name</th>\n<th><code class=\"language-text\">deploy</code> branch</th>\n<th><code class=\"language-text\">source-code</code> branch</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>User or Organization website</strong></td>\n<td><code class=\"language-text\">&lt;your-github-username&gt;.github.io</code></td>\n<td><code class=\"language-text\">&lt;your-github-username&gt;.github.io</code></td>\n<td><code class=\"language-text\">master</code></td>\n<td><code class=\"language-text\">develop</code></td>\n</tr>\n<tr>\n<td><strong>Project website</strong></td>\n<td><code class=\"language-text\">&lt;your-github-username&gt;.github.io/&lt;your-project-name&gt;</code></td>\n<td>can be any name</td>\n<td><code class=\"language-text\">gh-pages</code></td>\n<td><code class=\"language-text\">master</code></td>\n</tr>\n</tbody>\n</table>\n<p>You <code class=\"language-text\">Github Pages</code> website will start existing once you have a repository on Github with the right name and branch.</p>\n<h2>Setup your repository</h2>\n<p>First, create your Github repository based on the website type you wish to have, clone your repository, and put your project source-code in the <code class=\"language-text\">source-code</code> branch.</p>\n<h2>Install gh-pages</h2>\n<p>The <code class=\"language-text\">gh-pages</code> library can publish files to a branch on GitHub. It is useful to push anything to Github.</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">npm install --save-dev gh-pages</code></pre></div>\n<h2>Create a deploy script</h2>\n<p>Add a deploy script to your <code class=\"language-text\">package.json</code> scripts:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"deploy\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"gh-pages --dist public --branch DEPLOY_BRANCH_NAME\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<blockquote>\n<p>Replace <code class=\"language-text\">DEPLOY_BRANCH_NAME</code> with your <code class=\"language-text\">deploy-branch</code> name</p>\n</blockquote>\n<h2>Manually deploy your website</h2>\n<p>Now, once you installed <code class=\"language-text\">gh-pages</code> and configured your deployment script, you can deploy your website manually to <code class=\"language-text\">Github Pages</code>.<br>\nRun <code class=\"language-text\">yarn build &amp;&amp; yarn deploy</code> (or <code class=\"language-text\">npm run build &amp;&amp; npm run deploy</code> if working with <code class=\"language-text\">npm</code>) and go to your website URL.<br>\nYou should see your website there.</p>\n<h2>Setup Travis</h2>\n<p>TravisCI let you test and deploy your Github project easily. Use it to run the deploy script on each update to the <code class=\"language-text\">source-code</code> branch.</p>\n<h3>Setup your <code class=\"language-text\">.travis.yml</code> file</h3>\n<p>To setup Travis, first, add the following <code class=\"language-text\">.travis.yml</code> file to the root of your <code class=\"language-text\">source-code</code> branch.</p>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">language</span><span class=\"token punctuation\">:</span> node_js\n<span class=\"token key atrule\">node_js</span><span class=\"token punctuation\">:</span> <span class=\"token number\">12</span>\n<span class=\"token key atrule\">env</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">GITHUB_NAME</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"YOUR_GITHUB_NAME\"</span>\n  <span class=\"token key atrule\">GITHUB_EMAIL</span><span class=\"token punctuation\">:</span> your<span class=\"token punctuation\">-</span>email@example.com\n<span class=\"token key atrule\">before_script</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> git config <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>global user.email \"$<span class=\"token punctuation\">{</span>GITHUB_EMAIL<span class=\"token punctuation\">}</span>\"\n  <span class=\"token punctuation\">-</span> git config <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>global user.name \"$<span class=\"token punctuation\">{</span>GITHUB_NAME<span class=\"token punctuation\">}</span>\"\n  <span class=\"token punctuation\">-</span> git remote set<span class=\"token punctuation\">-</span>url origin \"https<span class=\"token punctuation\">:</span>//$<span class=\"token punctuation\">{</span>GH_TOKEN<span class=\"token punctuation\">}</span>@github.com/sharvit/sharvit.github.io.git\"\n<span class=\"token key atrule\">script</span><span class=\"token punctuation\">:</span> yarn build <span class=\"token comment\"># replace with `npm run build` if using npm</span>\n<span class=\"token key atrule\">deploy</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">branch</span><span class=\"token punctuation\">:</span> SOURCE_CODE_BRANCH_NAME\n  <span class=\"token key atrule\">provider</span><span class=\"token punctuation\">:</span> script\n  <span class=\"token key atrule\">skip_cleanup</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n  <span class=\"token key atrule\">script</span><span class=\"token punctuation\">:</span> yarn deploy <span class=\"token comment\"># replace with `npm run deploy` if using npm</span></code></pre></div>\n<blockquote>\n<p>Replace <code class=\"language-text\">YOUR_GITHUB_NAME</code> with your real name, I am using \"Avi sharvit\", this used as the committer name.<br>\nReplace <code class=\"language-text\">your-email@example.com</code> with your email, this used as the committer email.<br>\nReplace <code class=\"language-text\">SOURCE_CODE_BRANCH_NAME</code> with your <code class=\"language-text\">source-code</code> branch name.</p>\n</blockquote>\n<h3>Enable Travis</h3>\n<p>To enable Travis for your project, you can go to Travis website and use their dashboard, or you can use the CLI:</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">gem install travis\ntravis enable</code></pre></div>\n<h3>Create a Github token</h3>\n<p>To let Travis deploy to GitHub, Travis needs to have the right credentials.<br>\nTo do so, you to create a Github token with a <code class=\"language-text\">repo</code> scope.<br>\nThis can be done by visiting <a href=\"https://github.com/settings/tokens\">https://github.com/settings/tokens</a>.</p>\n<h3>Set your Github token in Travis</h3>\n<p>Set up an environment variable in Travis with the name <code class=\"language-text\">GH_TOKEN</code> and the value of the created token.<br>\nThis can be done from Travis dashboard or by the cli by running:</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">travis env set GH_TOKEN GITHUB_TOKEN_VALUE_HERE</code></pre></div>\n<blockquote>\n<p>Replace <code class=\"language-text\">GITHUB_TOKEN_VALUE_HERE</code> with your newly created token.</p>\n</blockquote>\n<h3>Commit and Push</h3>\n<p>Now you should be ready to go and push your changes to Github.\nTravis will deploy your website to <code class=\"language-text\">Github Pages</code> with every commit pushed to your <code class=\"language-text\">source-code</code> branch in GitHub.</p>","excerpt":"Gatsby is a free and open-source framework based on React that helps developers build blazing-fast websites and apps.\nIn this blog post, youâ€¦","frontmatter":{"title":"Using TravisCI to automate your GatsbyJs website deployment to Github pages"}}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"name":"2019-08-09-using-travisci-to-automate-your-gatsbyjs-website-deployment-to-github-pages","date":"2019-08-09","postPath":"/blog/using-travisci-to-automate-your-gatsbyjs-website-deployment-to-github-pages","postUrl":"https://sharvit.github.io/blog/using-travisci-to-automate-your-gatsbyjs-website-deployment-to-github-pages"}}}