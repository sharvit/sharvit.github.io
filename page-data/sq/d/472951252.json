{"data":{"allFile":{"nodes":[{"name":"2022-02-26-writing-smart-contracts-using-solidity-to-crowdfund-a-project-by-nft-sales","childMarkdownRemark":{"html":"<p>The goal is to write a smart contract that will allow entrepreneurs to crowdfund a project by selling NFTs, so if the goal isnâ€™t reached, the NFT holders can get their money back by burning their NFTs.</p>\n<p>Without smart contracts, such an implementation would be complicated and limited as it would require dealing with credit cards, bank accounts, and complex refunds.\nWith smart contracts, anyone can write and deploy simple contracts and raise funds to create new projects.</p>\n<p>I was starting with the openzeppelin wizard and created a smiple smart ERC721 contract:\n<a href=\"https://wizard.openzeppelin.com/#erc721\">https://wizard.openzeppelin.com/#erc721</a></p>\n<h2>Constants</h2>\n<div class=\"gatsby-highlight\" data-language=\"solidity\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-solidity line-numbers\"><code class=\"language-solidity\"><span class=\"token comment\">// Token Price</span>\n<span class=\"token builtin\">uint256</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">constant</span> MINT_PRICE <span class=\"token operator\">=</span> <span class=\"token number\">0.4</span> ether<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Token price for the extra supply</span>\n<span class=\"token builtin\">uint256</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">constant</span> MINT_EXTRA_PRICE <span class=\"token operator\">=</span> <span class=\"token number\">0.5</span> ether<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// The minimum amount of tokens that should be sold.</span>\n<span class=\"token comment\">// This is the goal, if not reached, token holders can ask for refund.</span>\n<span class=\"token builtin\">uint256</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">constant</span> MIN_SUPPLY <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Extra supply to be minted for the higer price</span>\n<span class=\"token builtin\">uint256</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">constant</span> EXTRA_SUPPLY <span class=\"token operator\">=</span> <span class=\"token number\">50</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Duration in seconds of the minting phase</span>\n<span class=\"token builtin\">uint256</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">constant</span> MINTING_DURATION <span class=\"token operator\">=</span> <span class=\"token number\">2</span> weeks<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Maximum to mint per transaction</span>\n<span class=\"token builtin\">uint256</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">constant</span> MAX_MINT_PER_TRANSACTION <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>Private variables</h2>\n<div class=\"gatsby-highlight\" data-language=\"solidity\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-solidity line-numbers\"><code class=\"language-solidity\"><span class=\"token comment\">//Indicator if sale is started and when started</span>\n<span class=\"token builtin\">uint256</span> <span class=\"token keyword\">private</span> _saleStartedAt <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// The amount of tokens that already minted</span>\n<span class=\"token builtin\">uint256</span> <span class=\"token keyword\">private</span> _supplyMinted <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// TokenId counter</span>\nCounters<span class=\"token punctuation\">.</span>Counter <span class=\"token keyword\">private</span> _tokenIdCounter<span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>Private mint function</h2>\n<p>The <code class=\"language-text\">_mintMulti</code> is internal, so it can only be used internaly by other functions.\nThis functions will recive an address that will recive the tokens and amount of tokens to mint.</p>\n<div class=\"gatsby-highlight\" data-language=\"solidity\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-solidity line-numbers\"><code class=\"language-solidity\"><span class=\"token keyword\">function</span> <span class=\"token function\">_mintMulti</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> to<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> amount<span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// run {amount} times</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> amount<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// get the token-id to use</span>\n    <span class=\"token builtin\">uint256</span> tokenId <span class=\"token operator\">=</span> _tokenIdCounter<span class=\"token punctuation\">.</span><span class=\"token function\">current</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// increment for the next usage</span>\n    _tokenIdCounter<span class=\"token punctuation\">.</span><span class=\"token function\">increment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// mint a new token</span>\n    <span class=\"token function\">_safeMint</span><span class=\"token punctuation\">(</span>to<span class=\"token punctuation\">,</span> tokenId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// increment the _supplyMinted</span>\n    _supplyMinted <span class=\"token operator\">=</span> _supplyMinted<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>Public functions</h2>\n<h3><code class=\"language-text\">startSale</code></h3>\n<p>Allows the owner to start the sale, uses the <code class=\"language-text\">onlyOwner</code> modifier to require the caller to be the owner.</p>\n<div class=\"gatsby-highlight\" data-language=\"solidity\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-solidity line-numbers\"><code class=\"language-solidity\"><span class=\"token keyword\">function</span> <span class=\"token function\">startSale</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> onlyOwner <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">isSaleStarted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Sale already started\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  _saleStartedAt <span class=\"token operator\">=</span> block<span class=\"token punctuation\">.</span>timestamp<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3><code class=\"language-text\">Mint</code></h3>\n<p>Allows users to mint tokens.</p>\n<div class=\"gatsby-highlight\" data-language=\"solidity\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-solidity line-numbers\"><code class=\"language-solidity\"><span class=\"token keyword\">function</span> <span class=\"token function\">mint</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> amount<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">payable</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token function\">isSaleActive</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Sale is not active\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>amount <span class=\"token operator\">&lt;=</span> MAX_MINT_PER_TRANSACTION<span class=\"token punctuation\">,</span> <span class=\"token string\">\"You can only mint 10 tokens at a time\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token function\">supplyMinted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>amount<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> MIN_SUPPLY<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Can not mint more than the max supply\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>value <span class=\"token operator\">>=</span> amount <span class=\"token operator\">*</span> MINT_PRICE<span class=\"token punctuation\">,</span> <span class=\"token string\">\"You have not sent enough ETH\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">_mintMulti</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3><code class=\"language-text\">mintExtra</code></h3>\n<p>Allows users to mint the extra tokens.</p>\n<div class=\"gatsby-highlight\" data-language=\"solidity\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-solidity line-numbers\"><code class=\"language-solidity\"><span class=\"token keyword\">function</span> <span class=\"token function\">mintExtra</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> amount<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">payable</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token function\">isSaleActive</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Sale is not active\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>amount <span class=\"token operator\">&lt;=</span> MAX_MINT_PER_TRANSACTION<span class=\"token punctuation\">,</span> <span class=\"token string\">\"You can only mint 10 tokens at a time\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token function\">supplyMinted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>amount<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> MIN_SUPPLY <span class=\"token operator\">+</span> EXTRA_SUPPLY<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Can not mint more than the max supply\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>value <span class=\"token operator\">>=</span> amount <span class=\"token operator\">*</span> MINT_EXTRA_PRICE<span class=\"token punctuation\">,</span> <span class=\"token string\">\"You have not sent enough ETH\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token function\">isMinSupplyMinted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"The normal supply has not minted yet\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">_mintMulti</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3><code class=\"language-text\">withdraw</code></h3>\n<p>Allows the owner to withdraw the funds, uses the <code class=\"language-text\">onlyOwner</code> modifier to require the caller to be the owner.</p>\n<p>It requires the goal to be reached, unless, the owner cannot withdraw the funds.</p>\n<div class=\"gatsby-highlight\" data-language=\"solidity\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-solidity line-numbers\"><code class=\"language-solidity\"><span class=\"token keyword\">function</span> <span class=\"token function\">withdraw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> onlyOwner <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token function\">isMinSupplyMinted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Goal has not been reached, cannot withdraw funds\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token builtin\">uint256</span> balance <span class=\"token operator\">=</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>balance<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">payable</span><span class=\"token punctuation\">(</span><span class=\"token function\">owner</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span>balance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3><code class=\"language-text\">getRefund</code></h3>\n<p>Allows token holders to get a refund if the goal has not reached.</p>\n<div class=\"gatsby-highlight\" data-language=\"solidity\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-solidity line-numbers\"><code class=\"language-solidity\"><span class=\"token comment\">/**\n * Allows token holders to get a refund if the goal has not reached\n */</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">getRefund</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token function\">isSaleFinished</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Sale is still active\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">isMinSupplyMinted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Goal has been reached! Cannot refund token fee\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// get user token balance</span>\n  <span class=\"token builtin\">uint256</span> tokensAmount <span class=\"token operator\">=</span> <span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>tokensAmount <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Not a token holder\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// a list of user token-ids</span>\n  <span class=\"token builtin\">uint256</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">memory</span> userTokens <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">uint256</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span>tokensAmount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// get all token-ids own by the user</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> index <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> index <span class=\"token operator\">&lt;</span> tokensAmount<span class=\"token punctuation\">;</span> index<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token builtin\">uint256</span> tokenId <span class=\"token operator\">=</span> <span class=\"token function\">tokenOfOwnerByIndex</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    userTokens<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> tokenId<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// pay the user back</span>\n  <span class=\"token keyword\">payable</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span>tokensAmount <span class=\"token operator\">*</span> MINT_PRICE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// burn the user tokens</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> index <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> index <span class=\"token operator\">&lt;</span> tokensAmount<span class=\"token punctuation\">;</span> index<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">_burn</span><span class=\"token punctuation\">(</span>userTokens<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>Full Source Code</h2>\n<div class=\"gatsby-highlight\" data-language=\"solidity\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-solidity line-numbers\"><code class=\"language-solidity\"><span class=\"token comment\">// SPDX-License-Identifier: MIT</span>\n<span class=\"token keyword\">pragma</span> <span class=\"token keyword\">solidity</span> <span class=\"token operator\">^</span><span class=\"token version number\">0.8.4</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"@openzeppelin/contracts/token/ERC721/ERC721.sol\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"@openzeppelin/contracts/access/Ownable.sol\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"@openzeppelin/contracts/utils/Counters.sol\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"@openzeppelin/contracts/utils/Address.sol\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"@openzeppelin/contracts/utils/math/SafeMath.sol\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">contract</span> <span class=\"token class-name\">MyCoolProject</span> <span class=\"token keyword\">is</span> ERC721<span class=\"token punctuation\">,</span> ERC721Enumerable<span class=\"token punctuation\">,</span> Ownable <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">using</span> <span class=\"token class-name\">Address</span> <span class=\"token keyword\">for</span> <span class=\"token builtin\">address</span> <span class=\"token keyword\">payable</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">using</span> <span class=\"token class-name\">SafeMath</span> <span class=\"token keyword\">for</span> <span class=\"token builtin\">uint256</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">using</span> <span class=\"token class-name\">Counters</span> <span class=\"token keyword\">for</span> Counters<span class=\"token punctuation\">.</span>Counter<span class=\"token punctuation\">;</span>\n    \n  <span class=\"token comment\">/**\n   * Token Price\n   */</span>\n  <span class=\"token builtin\">uint256</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">constant</span> MINT_PRICE <span class=\"token operator\">=</span> <span class=\"token number\">0.4</span> ether<span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">/**\n   * Token price for the extra supply\n   */</span>\n  <span class=\"token builtin\">uint256</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">constant</span> MINT_EXTRA_PRICE <span class=\"token operator\">=</span> <span class=\"token number\">0.5</span> ether<span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">/**\n   * The minimum amount of tokens that should be sold.\n   * This is the goal of the current phase,\n   * if not reached, token holders can ask for refund.\n   */</span>\n  <span class=\"token builtin\">uint256</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">constant</span> MIN_SUPPLY <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">/**\n   * Extra supply to be minted for the higer price\n   */</span>\n  <span class=\"token builtin\">uint256</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">constant</span> EXTRA_SUPPLY <span class=\"token operator\">=</span> <span class=\"token number\">50</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">/**\n   * Duration in seconds of the minting phase\n   */</span>\n  <span class=\"token builtin\">uint256</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">constant</span> MINTING_DURATION <span class=\"token operator\">=</span> <span class=\"token number\">2</span> weeks<span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">/**\n   * Maximum to mint per transaction\n   */</span>\n  <span class=\"token builtin\">uint256</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">constant</span> MAX_MINT_PER_TRANSACTION <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Indicator if sale is started and when started</span>\n  <span class=\"token builtin\">uint256</span> <span class=\"token keyword\">private</span> _saleStartedAt <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// The amount of tokens that already minted</span>\n  <span class=\"token builtin\">uint256</span> <span class=\"token keyword\">private</span> _supplyMinted <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// tokenId counter</span>\n  Counters<span class=\"token punctuation\">.</span>Counter <span class=\"token keyword\">private</span> _tokenIdCounter<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token function\">ERC721</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"MyCoolProject\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"MCP\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n  \n  <span class=\"token comment\">/**\n   * Amount of the supply that already been minted by users\n   */</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">supplyMinted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> _supplyMinted<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">/**\n   * Timestamp of the time the sale has started\n   */</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">saleStartedAt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> _saleStartedAt<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">/**\n   * Boolean indicator, does the sale started?\n   */</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">isSaleStarted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">saleStartedAt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">/**\n   * Boolean indicator, does the sale finished?\n   */</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">isSaleFinished</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">isSaleStarted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> block<span class=\"token punctuation\">.</span>timestamp <span class=\"token operator\">></span> <span class=\"token function\">saleStartedAt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> MINTING_DURATION<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">/**\n   * Boolean indicator, does the sale active?\n   */</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">isSaleActive</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">isSaleStarted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> block<span class=\"token punctuation\">.</span>timestamp <span class=\"token operator\">&lt;=</span> <span class=\"token function\">saleStartedAt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> MINTING_DURATION<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">/**\n   * Boolean indicator, does the minimum supply minted?\n   */</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">isMinSupplyMinted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">supplyMinted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>=</span> MIN_SUPPLY<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">/**\n   * Boolean indicator, does the extra supply minted?\n   */</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">isExtraSupplyMinted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">view</span> <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">supplyMinted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">>=</span> MIN_SUPPLY <span class=\"token operator\">+</span> EXTRA_SUPPLY<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">/**\n   * Allows the owner to start the sale\n   */</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">startSale</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> onlyOwner <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">isSaleStarted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Sale already started\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    _saleStartedAt <span class=\"token operator\">=</span> block<span class=\"token punctuation\">.</span>timestamp<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">/**\n   * Allows everyone to mint tokens\n   *\n   * uint256 [amount] amount of tokens to mint\n   */</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">mint</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> amount<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">payable</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token function\">isSaleActive</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Sale is not active\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>amount <span class=\"token operator\">&lt;=</span> MAX_MINT_PER_TRANSACTION<span class=\"token punctuation\">,</span> <span class=\"token string\">\"You can only mint 10 tokens at a time\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token function\">supplyMinted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>amount<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> MIN_SUPPLY<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Can not mint more than the max supply\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>value <span class=\"token operator\">>=</span> amount <span class=\"token operator\">*</span> MINT_PRICE<span class=\"token punctuation\">,</span> <span class=\"token string\">\"You have not sent enough ETH\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">_mintMulti</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">/**\n   * Allows everyone to mint the extra tokens\n   *\n   * uint256 [amount] amount of extra tokens to mint\n   */</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">mintExtra</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> amount<span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">payable</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token function\">isSaleActive</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Sale is not active\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>amount <span class=\"token operator\">&lt;=</span> MAX_MINT_PER_TRANSACTION<span class=\"token punctuation\">,</span> <span class=\"token string\">\"You can only mint 10 tokens at a time\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token function\">supplyMinted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>amount<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> MIN_SUPPLY <span class=\"token operator\">+</span> EXTRA_SUPPLY<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Can not mint more than the max supply\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>value <span class=\"token operator\">>=</span> amount <span class=\"token operator\">*</span> MINT_EXTRA_PRICE<span class=\"token punctuation\">,</span> <span class=\"token string\">\"You have not sent enough ETH\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token function\">isMinSupplyMinted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"The normal supply has not minted yet\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">_mintMulti</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">/**\n   * Allows the owner to withdraw the funds\n   */</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">withdraw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> onlyOwner <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token function\">isMinSupplyMinted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Goal has not been reached, cannot withdraw funds\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token builtin\">uint256</span> balance <span class=\"token operator\">=</span> <span class=\"token builtin\">address</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>balance<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">payable</span><span class=\"token punctuation\">(</span><span class=\"token function\">owner</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span>balance<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">/**\n   * Allows token holders to get a refund if the goal has not reached\n   */</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">getRefund</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">public</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token function\">isSaleFinished</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Sale is still active\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">isMinSupplyMinted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Goal has been reached! Cannot refund token fee\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// get user token balance</span>\n    <span class=\"token builtin\">uint256</span> tokensAmount <span class=\"token operator\">=</span> <span class=\"token function\">balanceOf</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span>tokensAmount <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Not a token holder\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// a list of user token-ids</span>\n    <span class=\"token builtin\">uint256</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">memory</span> userTokens <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">uint256</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span>tokensAmount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// get all token-ids own by the user</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> index <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> index <span class=\"token operator\">&lt;</span> tokensAmount<span class=\"token punctuation\">;</span> index<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token builtin\">uint256</span> tokenId <span class=\"token operator\">=</span> <span class=\"token function\">tokenOfOwnerByIndex</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      userTokens<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> tokenId<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// pay the user back</span>\n    <span class=\"token keyword\">payable</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span>sender<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">transfer</span><span class=\"token punctuation\">(</span>tokensAmount <span class=\"token operator\">*</span> MINT_PRICE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// burn the user tokens</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> index <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> index <span class=\"token operator\">&lt;</span> tokensAmount<span class=\"token punctuation\">;</span> index<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">_burn</span><span class=\"token punctuation\">(</span>userTokens<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  \n  <span class=\"token keyword\">function</span> <span class=\"token function\">_mintMulti</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> to<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> amount<span class=\"token punctuation\">)</span> <span class=\"token keyword\">internal</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">uint256</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> amount<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token builtin\">uint256</span> tokenId <span class=\"token operator\">=</span> _tokenIdCounter<span class=\"token punctuation\">.</span><span class=\"token function\">current</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      _tokenIdCounter<span class=\"token punctuation\">.</span><span class=\"token function\">increment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      \n      <span class=\"token function\">_safeMint</span><span class=\"token punctuation\">(</span>to<span class=\"token punctuation\">,</span> tokenId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      _supplyMinted <span class=\"token operator\">=</span> _supplyMinted<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// The following functions are overrides required by Solidity.</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">_beforeTokenTransfer</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">address</span> <span class=\"token keyword\">from</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">address</span> to<span class=\"token punctuation\">,</span> <span class=\"token builtin\">uint256</span> tokenId<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">internal</span>\n    <span class=\"token function\">override</span><span class=\"token punctuation\">(</span>ERC721<span class=\"token punctuation\">,</span> ERC721Enumerable<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">{</span>\n    super<span class=\"token punctuation\">.</span><span class=\"token function\">_beforeTokenTransfer</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">from</span><span class=\"token punctuation\">,</span> to<span class=\"token punctuation\">,</span> tokenId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">supportsInterface</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bytes4</span> interfaceId<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">public</span>\n    <span class=\"token keyword\">view</span>\n    <span class=\"token function\">override</span><span class=\"token punctuation\">(</span>ERC721<span class=\"token punctuation\">,</span> ERC721Enumerable<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">returns</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> super<span class=\"token punctuation\">.</span><span class=\"token function\">supportsInterface</span><span class=\"token punctuation\">(</span>interfaceId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","excerpt":"The goal is to write a smart contract that will allow entrepreneurs to crowdfund a project by selling NFTs, so if the goal isnâ€™t reached, the NFT holders can get their money back by burning their NFTs. Without smart contracts, such an implementation would be complicated andâ€¦","frontmatter":{"title":"Writing smart contracts using solidity to crowdfund a project by NFT sales","coverImage":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#080818","images":{"fallback":{"src":"/static/1bda86e81cf2174bfc39a0e8b4b14bb2/52a49/2022-02-26-writing-smart-contracts-using-solidity-to-crowdfund-a-project-by-nft-sales.jpg","srcSet":"/static/1bda86e81cf2174bfc39a0e8b4b14bb2/5f965/2022-02-26-writing-smart-contracts-using-solidity-to-crowdfund-a-project-by-nft-sales.jpg 750w,\n/static/1bda86e81cf2174bfc39a0e8b4b14bb2/76f9a/2022-02-26-writing-smart-contracts-using-solidity-to-crowdfund-a-project-by-nft-sales.jpg 1080w,\n/static/1bda86e81cf2174bfc39a0e8b4b14bb2/54fb8/2022-02-26-writing-smart-contracts-using-solidity-to-crowdfund-a-project-by-nft-sales.jpg 1366w,\n/static/1bda86e81cf2174bfc39a0e8b4b14bb2/52a49/2022-02-26-writing-smart-contracts-using-solidity-to-crowdfund-a-project-by-nft-sales.jpg 1680w","sizes":"100vw"},"sources":[{"srcSet":"/static/1bda86e81cf2174bfc39a0e8b4b14bb2/ee7ce/2022-02-26-writing-smart-contracts-using-solidity-to-crowdfund-a-project-by-nft-sales.webp 750w,\n/static/1bda86e81cf2174bfc39a0e8b4b14bb2/819dc/2022-02-26-writing-smart-contracts-using-solidity-to-crowdfund-a-project-by-nft-sales.webp 1080w,\n/static/1bda86e81cf2174bfc39a0e8b4b14bb2/7b8ce/2022-02-26-writing-smart-contracts-using-solidity-to-crowdfund-a-project-by-nft-sales.webp 1366w,\n/static/1bda86e81cf2174bfc39a0e8b4b14bb2/6f2a1/2022-02-26-writing-smart-contracts-using-solidity-to-crowdfund-a-project-by-nft-sales.webp 1680w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.5}}}}}},{"name":"2019-12-28-using-webpack-to-build-a-javascript-library","childMarkdownRemark":{"html":"<p>Like building applications, webpack can be used to build libraries.\nIn this post, you will learn how to use webpack and babel to build your own library.</p>\n<h2>Demo Library</h2>\n<p>Assuming having the following project, a small library called <code class=\"language-text\">even-numbers</code> with exported <code class=\"language-text\">isEven</code> and <code class=\"language-text\">isOdd</code> methods.</p>\n<p><strong>Files</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">.\nâ”œâ”€â”€ src\nâ”‚   â””â”€â”€ index.js\nâ””â”€â”€ package.json</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n<p><strong>src/index.js</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">isEven</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">number</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isNaN</span><span class=\"token punctuation\">(</span>number<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TypeError</span><span class=\"token punctuation\">(</span><span class=\"token string\">'The first argument must be a number'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> number <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">isOdd</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">number</span> <span class=\"token operator\">=></span> <span class=\"token operator\">!</span><span class=\"token function\">isEven</span><span class=\"token punctuation\">(</span>number<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>Goals</h2>\n<ul>\n<li>\n<p>I want my library to be compatible with all the long-term support nodejs versions.</p>\n</li>\n<li>\n<p>I want my library to be compatible with all the browsers with a market share bigger than <code class=\"language-text\">1%</code>.</p>\n</li>\n<li>\n<p>Different developers have different javascript stacks, and I would like my library to be consumed in various ways as well.</p>\n</li>\n</ul>\n<p><strong>ES Module import</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> isEven<span class=\"token punctuation\">,</span> isOdd <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'even-numbers'</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p><strong>CommonJS Module require</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> isEven<span class=\"token punctuation\">,</span> isOdd <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'even-numbers'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p><strong>AMD Module require</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'even-numbers'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'evenNumbers'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">evenNumbers</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> isEven<span class=\"token punctuation\">,</span> isOdd <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> evenNumbers<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p><strong>Directly in the browser</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-html line-numbers\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span>\n <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://unpkg.com/even-numbers<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n   <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> isEven<span class=\"token punctuation\">,</span> isOdd <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>evenNumbers<span class=\"token punctuation\">;</span>\n </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>Step-1 Installing babel</h2>\n<p>Install <code class=\"language-text\">@babel/core</code> and <code class=\"language-text\">@babel/preset-env</code> as development dependencies.\n<code class=\"language-text\">@babel/preset-env</code> is a smart preset that allows you to use the latest JavaScript without needing to micromanage which syntax transforms (and optionally, browser polyfills) are needed by your target environment(s).</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\"><span class=\"token function\">yarn</span> <span class=\"token function\">add</span> <span class=\"token parameter variable\">-D</span> @babel/core @babel/preset-env\n<span class=\"token comment\"># or using npm</span>\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> --save-dev @babel/core @babel/preset-env</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<p>Create a <code class=\"language-text\">.babelrc</code> file in your project root, with the following content:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">{\n  \"presets\": [\n    [\n      \"@babel/env\",\n      {\n        \"targets\": \"> 1%, maintained node versions\"\n      }\n    ]\n  ]\n}</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p><strong>Those configurations would make sure our build will be compatible with:</strong></p>\n<ol>\n<li><code class=\"language-text\">> 1%</code> - All the browsers with a market share bigger than <code class=\"language-text\">1%</code>.</li>\n<li><code class=\"language-text\">maintained node versions</code> - All the currently maintained nodejs versions, see: <a href=\"https://nodejs.org/en/about/releases/\">https://nodejs.org/en/about/releases/</a></li>\n</ol>\n<h2>Step-2 Installing webpack</h2>\n<p>Install <code class=\"language-text\">webpack</code> and <code class=\"language-text\">babel-loader</code> as development dependencies.\n<code class=\"language-text\">babel-loader</code> is a webpack loader; it will allow webpack to use <code class=\"language-text\">babel</code> to build javascript files.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\"><span class=\"token function\">yarn</span> <span class=\"token function\">add</span> <span class=\"token parameter variable\">-D</span> webpack babel-loader</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>Create a <code class=\"language-text\">webpack.config.js</code> file in your project root, with the following content:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'path'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">entry</span><span class=\"token operator\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'./src/index.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token literal-property property\">output</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">path</span><span class=\"token operator\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'./dist'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">filename</span><span class=\"token operator\">:</span> <span class=\"token string\">'index.js'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">globalObject</span><span class=\"token operator\">:</span> <span class=\"token string\">'this'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">libraryTarget</span><span class=\"token operator\">:</span> <span class=\"token string\">'umd'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">library</span><span class=\"token operator\">:</span> <span class=\"token string\">'evenNumbers'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token literal-property property\">module</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">rules</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">test</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\.js$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">exclude</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">node_modules</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">loader</span><span class=\"token operator\">:</span> <span class=\"token string\">'babel-loader'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>The first part of the config is the <code class=\"language-text\">entry</code> field, and this is the entry point of the library:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\">  <span class=\"token literal-property property\">entry</span><span class=\"token operator\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'./src/index.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>The second field is the <code class=\"language-text\">output</code>, and this will configure what output webpack should produce.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token literal-property property\">output</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">path</span><span class=\"token operator\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'./dist'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">filename</span><span class=\"token operator\">:</span> <span class=\"token string\">'index.js'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">library</span><span class=\"token operator\">:</span> <span class=\"token string\">'evenNumbers'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">globalObject</span><span class=\"token operator\">:</span> <span class=\"token string\">'this'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">libraryTarget</span><span class=\"token operator\">:</span> <span class=\"token string\">'umd'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<ul>\n<li>\n<p><code class=\"language-text\">path</code> together with <code class=\"language-text\">filename</code> - will be resolved to the build result destination, in this case, <code class=\"language-text\">./dist/index.js</code>.</p>\n</li>\n<li>\n<p><code class=\"language-text\">library</code> - the library name. Will be used to consume the library.</p>\n</li>\n<li>\n<p><code class=\"language-text\">globalObject: 'this'</code> - will make the library publicly available by using <code class=\"language-text\">global.evenNumbers</code> in node or <code class=\"language-text\">window.evenNumbers</code> in the browser.</p>\n</li>\n<li>\n<p><code class=\"language-text\">libraryTarget: 'umd'</code> - will make the library available when using AMD or CommonJS</p>\n</li>\n</ul>\n<p>The last part is the <code class=\"language-text\">module</code> filed where we add the <code class=\"language-text\">babel-loader</code> so webpack will build the javascript using <code class=\"language-text\">babel</code> together with the configurations in the <code class=\"language-text\">.babelrc</code> file.\nThis will add the compatibility for all platforms.</p>\n<h2>Step-3 Make the library available by the library name when using AMD or CommonJS</h2>\n<p>Add <code class=\"language-text\">dist/index.js</code> to the <code class=\"language-text\">main</code> field in the <code class=\"language-text\">package.json</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-json line-numbers\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"main\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"dist/index.js\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<p>This will make the library available to import/require while using the library name.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> isEven<span class=\"token punctuation\">,</span> isOdd <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'even-numbers'</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<h2>Last steps - Create the build script and use it</h2>\n<p>Add <code class=\"language-text\">build</code> and <code class=\"language-text\">develop</code> scripts to the <code class=\"language-text\">package.json</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-json line-numbers\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"build\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"webpack --mode production\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"develop\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"webpack --mode development --watch\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>To build the library, run:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\"><span class=\"token function\">yarn</span> build\n<span class=\"token comment\"># or using npm</span>\n<span class=\"token function\">npm</span> run build</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<p>This will produce the following output:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\">$ webpack <span class=\"token parameter variable\">--mode</span> production\nHash: 187393c09f5eb7fe7a4e\nVersion: webpack <span class=\"token number\">4.41</span>.4\nTime: 241ms\nBuilt at: <span class=\"token number\">12</span>/28/2019 <span class=\"token number\">5</span>:07:55 PM\n   Asset      Size  Chunks             Chunk Names\nindex.js  <span class=\"token number\">1.49</span> KiB       <span class=\"token number\">0</span>  <span class=\"token punctuation\">[</span>emitted<span class=\"token punctuation\">]</span>  main\nEntrypoint main <span class=\"token operator\">=</span> index.js\n<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> ./src/index.js <span class=\"token number\">1.05</span> KiB <span class=\"token punctuation\">{</span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span> <span class=\"token punctuation\">[</span>built<span class=\"token punctuation\">]</span>\nDone <span class=\"token keyword\">in</span> <span class=\"token number\">0</span>.66s.</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p><strong>And will create the <code class=\"language-text\">./dist/index.js</code> file with the library, ready to be consumed.</strong></p>\n<p>To build the library in watch mode, run:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\"><span class=\"token function\">yarn</span> develop\n<span class=\"token comment\"># or using npm</span>\n<span class=\"token function\">npm</span> run develop</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<h2>Optimization Bonus - Using common libraries</h2>\n<p>Many libraries use other common and popular libraries behind the scense. Such an example can be a library that exports react components.\nIn this case, you would want to avoid building <code class=\"language-text\">react</code> into your library bundle and instead trust the consumer to provide <code class=\"language-text\">react</code> and require it before the library.</p>\n<p>We can tell webpack not build <code class=\"language-text\">react</code> into the library target by adding the <code class=\"language-text\">externals</code> field to the webpack config.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token operator\">...</span>\n  <span class=\"token literal-property property\">externals</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">react</span><span class=\"token operator\">:</span> <span class=\"token string\">'react'</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token operator\">...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>If the library uses <code class=\"language-text\">jquery</code> and <code class=\"language-text\">lodash</code>, those can be added as well:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token operator\">...</span>\n  <span class=\"token literal-property property\">externals</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">react</span><span class=\"token operator\">:</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">jquery</span><span class=\"token operator\">:</span> <span class=\"token string\">'jQuery'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">lodash</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">commonjs</span><span class=\"token operator\">:</span> <span class=\"token string\">'lodash'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">amd</span><span class=\"token operator\">:</span> <span class=\"token string\">'lodash'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">root</span><span class=\"token operator\">:</span> <span class=\"token string\">'_'</span> <span class=\"token comment\">// indicates global variable</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    \n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token operator\">...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p><strong>Happy Hacking!!!</strong></p>\n<h2>Useful</h2>\n<ul>\n<li><a href=\"https://github.com/sharvit/node-mdl-starter\">node-mdl-starter</a> - A starter project for open sourced JavaScript libraries.</li>\n<li><a href=\"https://github.com/sharvit/generator-node-mdl\">generator-node-mdl</a> - Generate an open source JavaScript libraries.</li>\n</ul>","excerpt":"Like building applications, webpack can be used to build libraries.\nIn this post, you will learn how to use webpack and babel to build your own library. Demo Library Assuming having the following project, a small library called  with exported  and  methods. Files src/index.jsâ€¦","frontmatter":{"title":"Using webpack to build a javascript library","coverImage":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#282828","images":{"fallback":{"src":"/static/c5d2c67f829f3c79343413ee11d249bd/ac0ad/2019-12-28-using-webpack-to-build-a-javascript-library.png","srcSet":"/static/c5d2c67f829f3c79343413ee11d249bd/0f769/2019-12-28-using-webpack-to-build-a-javascript-library.png 750w,\n/static/c5d2c67f829f3c79343413ee11d249bd/2d3aa/2019-12-28-using-webpack-to-build-a-javascript-library.png 1080w,\n/static/c5d2c67f829f3c79343413ee11d249bd/60d14/2019-12-28-using-webpack-to-build-a-javascript-library.png 1366w,\n/static/c5d2c67f829f3c79343413ee11d249bd/ac0ad/2019-12-28-using-webpack-to-build-a-javascript-library.png 1920w","sizes":"100vw"},"sources":[{"srcSet":"/static/c5d2c67f829f3c79343413ee11d249bd/f3c20/2019-12-28-using-webpack-to-build-a-javascript-library.webp 750w,\n/static/c5d2c67f829f3c79343413ee11d249bd/9889c/2019-12-28-using-webpack-to-build-a-javascript-library.webp 1080w,\n/static/c5d2c67f829f3c79343413ee11d249bd/e04bd/2019-12-28-using-webpack-to-build-a-javascript-library.webp 1366w,\n/static/c5d2c67f829f3c79343413ee11d249bd/d3166/2019-12-28-using-webpack-to-build-a-javascript-library.webp 1920w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.3890625}}}}}},{"name":"2019-12-20-do-not-install-databases-on-your-development-machine-use-containers-instead.","childMarkdownRemark":{"html":"<p>I'm not particularly eager to install databases on my development machine because it installs unnecessary libraries and services on my system, and it is difficult to install, update, and remove them.\nTherefore I prefer to install development databases using containers since it is easier to maintain my machine that way.</p>\n<h2>Install podman</h2>\n<p>I am using Fedora, so <code class=\"language-text\">podman</code> comes preinstalled with the system, to install <code class=\"language-text\">podman</code> on other systems, see: <a href=\"https://podman.io/getting-started/installation.html\">https://podman.io/getting-started/installation.html</a>\nI prefer <code class=\"language-text\">podman</code> over <code class=\"language-text\">docker</code> since it has the <code class=\"language-text\">create</code> command that can create a layer over a specified image and prepares it for running a specified command.</p>\n<h2>Use mongodb development database</h2>\n<p>Pull the <code class=\"language-text\">tutum/mongodb</code> image from the docker.io registry:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\"><span class=\"token function\">podman</span> pull docker.io/tutum/mongodb</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>Create another layer over the base container and name it as <code class=\"language-text\">mongo_dev</code> for ease of use (this option does not exist in docker):</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\"><span class=\"token function\">podman</span> create <span class=\"token parameter variable\">--name</span><span class=\"token operator\">=</span>mongo_dev <span class=\"token parameter variable\">-d</span> <span class=\"token parameter variable\">-p</span> <span class=\"token number\">27017</span>:27017 <span class=\"token parameter variable\">-p</span> <span class=\"token number\">28017</span>:28017 <span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">AUTH</span><span class=\"token operator\">=</span>no tutum/mongodb</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>Run your <code class=\"language-text\">mongo_dev</code> container:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\"><span class=\"token function\">podman</span> start mongo_dev</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p><strong>Happy Hacking!!!</strong></p>\n<p>Your mongodb database should be accessible from without a password: <code class=\"language-text\">mongodb://localhost:27017</code></p>\n<h2>Stopping and starting your containers</h2>\n<p>To see a list of running containers run:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\"><span class=\"token function\">podman</span> <span class=\"token function\">ps</span>\n<span class=\"token comment\"># see stopped containers as well</span>\n<span class=\"token function\">podman</span> <span class=\"token function\">ps</span> <span class=\"token parameter variable\">-a</span>\n\n<span class=\"token comment\"># Start a container</span>\n<span class=\"token function\">podman</span> start <span class=\"token operator\">&lt;</span>container-name<span class=\"token operator\">></span>\n<span class=\"token comment\"># Stop a container</span>\n<span class=\"token function\">podman</span> stop <span class=\"token operator\">&lt;</span>container-name<span class=\"token operator\">></span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>Pull more databases</h2>\n<h3>PostgreSQL</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\"><span class=\"token function\">podman</span> pull postgres\n<span class=\"token function\">podman</span> create <span class=\"token parameter variable\">--name</span> postgres_dev <span class=\"token parameter variable\">-d</span> postgres</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<h2>MySQL</h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\"><span class=\"token function\">podman</span> pull mysql\n<span class=\"token function\">podman</span> create <span class=\"token parameter variable\">--name</span> mysql_dev mysql</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>","excerpt":"I'm not particularly eager to install databases on my development machine because it installs unnecessary libraries and services on my system, and it is difficult to install, update, and remove them.\nTherefore I prefer to install development databases using containers since it isâ€¦","frontmatter":{"title":"Do not install databases on your development machine, use containers instead.","coverImage":null}}},{"name":"2019-11-05-i-received-my-new-pc-and-it-is-the-time-to-install-fedora-and-set-up-my-work-environment","childMarkdownRemark":{"html":"<p>Two years after I joined Redhat to work on the <a href=\"https://theforeman.org\">foreman</a> project, I received a new PC (Lenovo T480s), and it's time for a fresh start.\nIn this post, I will describe my process of setting up a new PC.</p>\n<h2>Goals</h2>\n<ul>\n<li>Be able to work inside Redhat and use Redhat office tools</li>\n<li>Have a javascript development environment</li>\n<li>Have a ruby development environment</li>\n<li>Have Atom as my IDE and sync it back with my previous settings</li>\n<li>Have a <a href=\"https://github.com/theforeman/forklift\">forklift</a> development environment so I can work on <a href=\"https://theforeman.org\">the foreman project</a>.</li>\n</ul>\n<h2>My Tools</h2>\n<ul>\n<li>Zsh - <a href=\"https://ohmyz.sh/\">https://ohmyz.sh/</a></li>\n<li>NVM - <a href=\"https://github.com/nvm-sh/nvm\">https://github.com/nvm-sh/nvm</a></li>\n<li>RVM - <a href=\"https://rvm.io/\">https://rvm.io/</a></li>\n<li>ATOM - <a href=\"https://atom.io/\">https://atom.io/</a></li>\n<li>Ferdi - <a href=\"https://getferdi.com/\">https://getferdi.com/</a></li>\n</ul>\n<h2>Installing Fedora</h2>\n<ol>\n<li>Install the latest version of Fedora, in my case, I installed fedora 30 from Redhat PXE server and then updated to version 31.\n<ol>\n<li>Another option is to download fedora from <a href=\"https://getfedora.org/en/workstation/download/\">https://getfedora.org/en/workstation/download/</a></li>\n</ol>\n</li>\n<li>Run <code class=\"language-text\">sudo dnf upgrade</code> and <code class=\"language-text\">sudo dnf update</code></li>\n</ol>\n<h2>Install google-chrome browser</h2>\n<p>Install google chrome by running <code class=\"language-text\">sudo dnf install google-chrome-stable</code> and sign in to sync with my previous setup.</p>\n<h2>Installing ZSH and some essential terminal tools</h2>\n<h3>Install ZSH</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> dnf <span class=\"token function\">install</span> <span class=\"token function\">zsh</span>\n<span class=\"token function\">sh</span> <span class=\"token parameter variable\">-c</span> <span class=\"token string\">\"<span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">wget</span> https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh <span class=\"token parameter variable\">-O</span> -<span class=\"token variable\">)</span></span>\"</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<h3>Set my new PC hostname</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">hostname</span> sharvit-fedorabook-t480s</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<h3>Install some essential tools</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> dnf <span class=\"token function\">install</span> <span class=\"token function\">vim</span> hub</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p><strong>Restart your computer</strong></p>\n<h3>Install rpmfusion</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> dnf <span class=\"token function\">install</span> https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-31.noarch.rpm https://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-31.noarch.rpm\n<span class=\"token function\">sudo</span> dnf groupupdate core\n<span class=\"token function\">sudo</span> dnf groupupdate sound-and-video</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<h3>Configure git</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\"><span class=\"token function\">git</span> config <span class=\"token parameter variable\">--global</span> user.name <span class=\"token string\">\"Avi Sharvit\"</span>\n<span class=\"token function\">git</span> config <span class=\"token parameter variable\">--global</span> user.email sharvita@gmail.com</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<h3>Generate an ssh key</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\">ssh-keygen <span class=\"token parameter variable\">-t</span> rsa <span class=\"token parameter variable\">-b</span> <span class=\"token number\">4096</span> <span class=\"token parameter variable\">-C</span> <span class=\"token string\">\"sharvita@gmail.com\"</span>\n<span class=\"token builtin class-name\">eval</span> <span class=\"token string\">\"<span class=\"token variable\"><span class=\"token variable\">$(</span>ssh-agent <span class=\"token parameter variable\">-s</span><span class=\"token variable\">)</span></span>\"</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p>Add the ssh key to your Github account <a href=\"https://help.github.com/en/github/authenticating-to-github/adding-a-new-ssh-key-to-your-github-account\">https://help.github.com/en/github/authenticating-to-github/adding-a-new-ssh-key-to-your-github-account</a></p>\n<h2>Redhat workspace related</h2>\n<h3>Connect to Redhat VPN</h3>\n<p>To be able to connect to the Redhat VPN, you will need to be inside the Redhat VPN, to do that you will need to be in a Redhat office and connect to the secured network (wired, wifi).</p>\n<p>Duo some restrictions, I can't share the full VPN urls, you can find the URLs in this secured link:\n<a href=\"https://mojo.redhat.com/docs/DOC-1199033-set-up-vpn-in-fedora-silverblue\">https://mojo.redhat.com/docs/DOC-1199033-set-up-vpn-in-fedora-silverblue</a></p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> dnf <span class=\"token function\">install</span> NetworkManager-openvpn NetworkManager-openvpn-gnome\n\n<span class=\"token comment\"># download the redhat certificate</span>\n<span class=\"token function\">sudo</span> <span class=\"token function\">wget</span> <span class=\"token parameter variable\">-O</span> /etc/pki/tls/certs/RH-IT-Root-CA.crt https://-------------.redhat.com/RH-IT-Root-CA.crt\n<span class=\"token function\">sudo</span> <span class=\"token function\">cp</span> /etc/pki/tls/certs/RH-IT-Root-CA.crt /etc/pki/tls/certs/2015-RH-IT-Root-CA.pem\n\n<span class=\"token comment\"># download some vpn profiles</span>\n<span class=\"token function\">sudo</span> <span class=\"token function\">wget</span> <span class=\"token parameter variable\">-O</span> /etc/NetworkManager/system-connections/AMS2.ovpn http://----------.redhat.com/--------------------------------/AMS2.ovpn\n<span class=\"token function\">sudo</span> <span class=\"token function\">wget</span> <span class=\"token parameter variable\">-O</span> /etc/NetworkManager/system-connections/PEK2.ovpn http://----------.redhat.com/--------------------------------/PEK2.ovpn?h<span class=\"token operator\">=</span>it-csb-rhel-7\n<span class=\"token function\">sudo</span> <span class=\"token function\">wget</span> <span class=\"token parameter variable\">-O</span> /etc/NetworkManager/system-connections/BNE.ovpn http://----------.redhat.com/--------------------------------/BNE.ovpn?h<span class=\"token operator\">=</span>it-csb-rhel-7\n<span class=\"token function\">sudo</span> <span class=\"token function\">wget</span> <span class=\"token parameter variable\">-O</span> /etc/NetworkManager/system-connections/BRQ.ovpn http://----------.redhat.com/--------------------------------/BRQ.ovpn?h<span class=\"token operator\">=</span>it-csb-rhel-7\n<span class=\"token function\">sudo</span> <span class=\"token function\">wget</span> <span class=\"token parameter variable\">-O</span> /etc/NetworkManager/system-connections/FAB.ovpn http://----------.redhat.com/--------------------------------/FAB.ovpn?h<span class=\"token operator\">=</span>it-csb-rhel-7\n<span class=\"token function\">sudo</span> <span class=\"token function\">wget</span> <span class=\"token parameter variable\">-O</span> /etc/NetworkManager/system-connections/PHX2.ovpn http://----------.redhat.com/--------------------------------/PHX2.ovpn?h<span class=\"token operator\">=</span>it-csb-rhel-7\n<span class=\"token function\">sudo</span> <span class=\"token function\">wget</span> <span class=\"token parameter variable\">-O</span> /etc/NetworkManager/system-connections/PNQ2.ovpn http://----------.redhat.com/--------------------------------/PNQ2.ovpn?h<span class=\"token operator\">=</span>it-csb-rhel-7\n<span class=\"token function\">sudo</span> <span class=\"token function\">wget</span> <span class=\"token parameter variable\">-O</span> /etc/NetworkManager/system-connections/RDU2.ovpn http://----------.redhat.com/--------------------------------/RDU2.ovpn?h<span class=\"token operator\">=</span>it-csb-rhel-7\n<span class=\"token function\">sudo</span> <span class=\"token function\">wget</span> <span class=\"token parameter variable\">-O</span> /etc/NetworkManager/system-connections/GRU2.ovpn http://----------.redhat.com/--------------------------------/GRU2.ovpn?h<span class=\"token operator\">=</span>it-csb-rhel-7\n<span class=\"token function\">sudo</span> <span class=\"token function\">wget</span> <span class=\"token parameter variable\">-O</span> /etc/NetworkManager/system-connections/SIN2.ovpn http://----------.redhat.com/--------------------------------/SIN2.ovpn?h<span class=\"token operator\">=</span>it-csb-rhel-7\n<span class=\"token function\">sudo</span> <span class=\"token function\">wget</span> <span class=\"token parameter variable\">-O</span> /etc/NetworkManager/system-connections/TLV.ovpn http://----------.redhat.com/--------------------------------/TLV.ovpn?h<span class=\"token operator\">=</span>it-csb-rhel-7\n<span class=\"token function\">sudo</span> <span class=\"token function\">wget</span> <span class=\"token parameter variable\">-O</span> /etc/NetworkManager/system-connections/NRT.ovpn http://----------.redhat.com/--------------------------------/NRT.ovpn?h<span class=\"token operator\">=</span>it-csb-rhel-7\n\n<span class=\"token comment\"># enable the redhat VPN</span>\n<span class=\"token function\">sudo</span> restorecon <span class=\"token parameter variable\">-RvF</span> /etc/pki/tls/certs/\n<span class=\"token function\">sudo</span> restorecon <span class=\"token parameter variable\">-RvF</span> /etc/NetworkManager/system-connections/\n<span class=\"token function\">sudo</span> <span class=\"token function\">chmod</span> <span class=\"token number\">644</span> /etc/pki/tls/certs/2015-RH-IT-Root-CA.pem\n<span class=\"token function\">sudo</span> <span class=\"token function\">chown</span> root:root /etc/NetworkManager/system-connections/*\n<span class=\"token function\">sudo</span> <span class=\"token function\">chmod</span> <span class=\"token number\">600</span> /etc/NetworkManager/system-connections/*\n<span class=\"token function\">sudo</span> nmcli connection reload</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Go to <code class=\"language-text\">Settings</code> -> <code class=\"language-text\">Network</code> and add your username to each VPN profile.</p>\n<h3>Connect to Redhat printers</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\"><span class=\"token comment\"># Adds the TelAviv printers to the cups config</span>\n<span class=\"token comment\"># Replace TLV with another office code to connect to a different office printers</span>\n<span class=\"token comment\"># See office codes here: https://redhat.service-now.com/help?id=kb_article&amp;sysparm_article=KB0002202</span>\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"BrowsePoll cups.tlv.redhat.com\"</span> <span class=\"token operator\">>></span> /etc/cups/cups-browsed.conf\n<span class=\"token function\">sudo</span> systemctl <span class=\"token builtin class-name\">enable</span> cups-browsed\n<span class=\"token function\">sudo</span> systemctl restart cups-browsed</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Once you installed the printers, you should find them in the printer settings.</p>\n<h2>Install Ferdi to manage my social interactions</h2>\n<ol>\n<li>Download the appimage from <a href=\"https://getferdi.com/\">https://getferdi.com/</a> and put it in the <code class=\"language-text\">~/Applications</code> folder.</li>\n<li>Give it exec permissions using <code class=\"language-text\">chmod +x filename</code></li>\n<li>Run it and sign in to get my saved workspace</li>\n</ol>\n<h2>Install Ruby and RVM</h2>\n<p>First fix the gnome-terminal command login using: <a href=\"https://rvm.io/integration/gnome-terminal\">https://rvm.io/integration/gnome-terminal</a></p>\n<p>Install Ruby and RVM</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\"><span class=\"token comment\"># install system ruby</span>\n<span class=\"token function\">sudo</span> dnf <span class=\"token function\">install</span> ruby\n<span class=\"token comment\"># install RVM</span>\ngpg2 --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB\n<span class=\"token punctuation\">\\</span>curl <span class=\"token parameter variable\">-sSL</span> https://get.rvm.io <span class=\"token operator\">|</span> <span class=\"token function\">bash</span> <span class=\"token parameter variable\">-s</span> stable</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p><strong>Restart the terminal.</strong></p>\n<p>Install Ruby using RVM</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\"><span class=\"token comment\"># enable autolibs</span>\nrvm get stable <span class=\"token parameter variable\">--autolibs</span><span class=\"token operator\">=</span>enable\n<span class=\"token comment\"># Install the latest stable ruby version</span>\nrvm <span class=\"token function\">install</span> ruby-2.6</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>Install NodeJS and NVM</h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\"><span class=\"token comment\"># install system nodejs and npm</span>\n<span class=\"token function\">sudo</span> dnf <span class=\"token function\">install</span> <span class=\"token parameter variable\">-y</span> nodejs <span class=\"token function\">npm</span>\n<span class=\"token comment\"># install NVM</span>\n<span class=\"token function\">curl</span> -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.0/install.sh <span class=\"token operator\">|</span> <span class=\"token function\">bash</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n<p><strong>Restart the terminal</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\"><span class=\"token comment\"># install latest node-js</span>\nnvm <span class=\"token function\">install</span> <span class=\"token number\">12</span>\n<span class=\"token comment\"># install yarn</span>\n<span class=\"token function\">curl</span> <span class=\"token parameter variable\">--silent</span> <span class=\"token parameter variable\">--location</span> https://dl.yarnpkg.com/rpm/yarn.repo <span class=\"token operator\">|</span> <span class=\"token function\">sudo</span> <span class=\"token function\">tee</span> /etc/yum.repos.d/yarn.repo\n<span class=\"token function\">sudo</span> dnf <span class=\"token function\">install</span> <span class=\"token function\">yarn</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>Install vagrant</h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\">rvm use system\n<span class=\"token function\">sudo</span> dnf <span class=\"token function\">install</span> libvirt-daemon-kvm ansible vagrant-libvirt\n<span class=\"token comment\"># enable libvirt</span>\n<span class=\"token function\">sudo</span> systemctl <span class=\"token builtin class-name\">enable</span> <span class=\"token parameter variable\">--now</span> libvirtd\n<span class=\"token comment\"># add your user to the libvirt group to avoid password prompts on running vagrant commands with libvirt provider</span>\n<span class=\"token function\">sudo</span> gpasswd <span class=\"token parameter variable\">-a</span> <span class=\"token variable\">${<span class=\"token environment constant\">USER</span>}</span> libvirt\nnewgrp libvirt\n<span class=\"token comment\"># install vagrant plugins</span>\n<span class=\"token function\">sudo</span> dnf <span class=\"token function\">install</span> sshfs vagrant-hostmanager vagrant-sshfs</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<blockquote>\n<p>NOTICE: before working with vagrant make sure you work with the system ruby (<code class=\"language-text\">rvm use system</code>)</p>\n</blockquote>\n<h2>Customizing the zsh</h2>\n<p>I ended up with the following <code class=\"language-text\">.zshrc</code> file in my home directory.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\"><span class=\"token comment\"># Path to your oh-my-zsh installation.</span>\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">ZSH</span><span class=\"token operator\">=</span><span class=\"token string\">\"/home/sharvit/.oh-my-zsh\"</span>\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\"><span class=\"token environment constant\">LANG</span></span><span class=\"token operator\">=</span>en_US.UTF-8\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">EDITOR</span><span class=\"token operator\">=</span><span class=\"token string\">'vim'</span>\n<span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">ARCHFLAGS</span><span class=\"token operator\">=</span><span class=\"token string\">\"-arch x86_64\"</span>\n\n<span class=\"token assign-left variable\">ZSH_THEME</span><span class=\"token operator\">=</span><span class=\"token string\">\"robbyrussell\"</span>\n\n<span class=\"token assign-left variable\">plugins</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>git github dnf vagrant nvm <span class=\"token function\">npm</span> rvm bundler<span class=\"token punctuation\">)</span>\n\n<span class=\"token builtin class-name\">source</span> <span class=\"token variable\">$ZSH</span>/oh-my-zsh.sh\n\n<span class=\"token comment\"># enable autocomplete</span>\nautoload <span class=\"token parameter variable\">-U</span> compinit\ncompinit</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>Install Atom</h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> <span class=\"token function\">rpm</span> <span class=\"token parameter variable\">--import</span> https://packagecloud.io/AtomEditor/atom/gpgkey\n<span class=\"token function\">sudo</span> <span class=\"token function\">sh</span> <span class=\"token parameter variable\">-c</span> <span class=\"token string\">'echo -e \"[Atom]\\nname=Atom Editor\\nbaseurl=https://packagecloud.io/AtomEditor/atom/el/7/\\$basearch\\nenabled=1\\ngpgcheck=0\\nrepo_gpgcheck=1\\ngpgkey=https://packagecloud.io/AtomEditor/atom/gpgkey\" > /etc/yum.repos.d/atom.repo'</span>\n<span class=\"token function\">sudo</span> dnf <span class=\"token function\">install</span> atom</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<p><strong>Install my personal settings</strong></p>\n<ol>\n<li>Run <code class=\"language-text\">apm install sync-settings</code></li>\n<li>Open Atom</li>\n<li>Open the sync-settings package settings</li>\n<li>Set access-token</li>\n<li>Set gist id to <code class=\"language-text\">88fddc82d91cdd7cd33fdfdbe03dd161</code></li>\n<li>Restart atom</li>\n<li>Click restore when you receive the message from sync-settings</li>\n</ol>\n<h2>Configure my <a href=\"https://github.com/theforeman/forklift\">forklift</a> development environment so I can work on <a href=\"https://theforeman.org\">the foreman project</a></h2>\n<h3>Clone forklift</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\"><span class=\"token comment\"># clone forklift</span>\n<span class=\"token function\">git</span> clone git@github.com:theforeman/forklift.git\n<span class=\"token builtin class-name\">cd</span> forklift\n<span class=\"token comment\"># setup vagrant boxes</span>\n<span class=\"token function\">cp</span> vagrant/boxes.d/99-local.yaml.example vagrant/boxes.d/99-local.yaml\n<span class=\"token function\">sed</span> <span class=\"token parameter variable\">-i.bak</span> <span class=\"token string\">\"s/&lt;REPLACE ME>/sharvit/g\"</span> vagrant/boxes.d/99-local.yaml\n<span class=\"token function\">rm</span> vagrant/boxes.d/99-local.yaml.bak</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Edit the <code class=\"language-text\">vagrant/boxes.d/99-local.yaml</code> file with the following changes:</p>\n<div class=\"gatsby-highlight\" data-language=\"diff\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-diff line-numbers\"><code class=\"language-diff\">centos7-katello-devel:\n<span class=\"token unchanged\"><span class=\"token prefix unchanged\"> </span> primary: true\n<span class=\"token prefix unchanged\"> </span> box: centos7\n</span><span class=\"token inserted-arrow inserted\"><span class=\"token prefix inserted\">></span> sshfs:\n<span class=\"token prefix inserted\">></span>   host_path: '/home/sharvit/Projects/theforeman/vagrant-shares/centos7-katello-devel'\n<span class=\"token prefix inserted\">></span>   guest_path: '/home/vagrant'\n<span class=\"token prefix inserted\">></span>   reverse: True\n</span><span class=\"token unchanged\"><span class=\"token prefix unchanged\"> </span> ansible:\n<span class=\"token prefix unchanged\"> </span>   playbook: 'playbooks/katello_devel.yml'\n<span class=\"token prefix unchanged\"> </span>   group: 'devel'\n<span class=\"token prefix unchanged\"> </span>   variables:\n<span class=\"token prefix unchanged\"> </span>     ssh_forward_agent: true\n<span class=\"token prefix unchanged\"> </span>     foreman_devel_github_push_ssh: True\n<span class=\"token prefix unchanged\"> </span>     katello_devel_github_username: sharvit\n</span>\ncentos7-luna-devel:\n<span class=\"token unchanged\"><span class=\"token prefix unchanged\"> </span> box: centos7\n<span class=\"token prefix unchanged\"> </span> memory: 9000\n</span><span class=\"token inserted-arrow inserted\"><span class=\"token prefix inserted\">></span> sshfs:\n<span class=\"token prefix inserted\">></span>   host_path: '/home/sharvit/Projects/theforeman/vagrant-shares/centos7-luna-devel'\n<span class=\"token prefix inserted\">></span>   guest_path: '/home/vagrant'\n<span class=\"token prefix inserted\">></span>   reverse: True\n</span><span class=\"token unchanged\"><span class=\"token prefix unchanged\"> </span> ansible:\n<span class=\"token prefix unchanged\"> </span>   playbook: 'playbooks/luna-devel.yml'\n<span class=\"token prefix unchanged\"> </span>   group: 'devel'\n<span class=\"token prefix unchanged\"> </span>   variables:\n<span class=\"token prefix unchanged\"> </span>     katello_devel_github_username: sharvit</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Set the <code class=\"language-text\">host_path</code> to a preferred location on your machine and make sure it exists so you can have access to the foreman source code.</p>\n<h3>Run <code class=\"language-text\">centos7-luna-devel</code></h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\">rvm use system\nvagrant up centos7-luna-devel\n<span class=\"token comment\"># the provisioning may fail by unknown reasons</span>\n<span class=\"token comment\"># in this case keep running until a successful provisioning </span>\nvagrant up centos7-luna-devel <span class=\"token parameter variable\">--provision</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>After successful provisioning, ssh into the machine and run foreman:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\">vagrant <span class=\"token function\">ssh</span> centos7-luna-devel\n<span class=\"token builtin class-name\">cd</span> foreman\nbundle\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span>\n<span class=\"token comment\"># add some faked data to `foreman`</span>\nbundle <span class=\"token builtin class-name\">exec</span> rake seed:forgeries\n<span class=\"token comment\"># run foreman</span>\nbundle <span class=\"token builtin class-name\">exec</span> foreman start</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3>Happy Hacking!</h3>\n<p>Now foreman is running so I can open it in my browser:\n<a href=\"https://centos7-luna-devel.sharvit-fedorabook-t480s.example.com/\">https://centos7-luna-devel.sharvit-fedorabook-t480s.example.com/</a></p>\n<p>Log in with the username <code class=\"language-text\">admin</code> and password <code class=\"language-text\">changeme</code>.</p>\n<p>Go to my <code class=\"language-text\">host_path</code> and open the source code with atom:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> /home/asharvit/Projects/theforeman/vagrant-shares/centos7-luna-devel/foreman\natom <span class=\"token builtin class-name\">.</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p>Happy Hacking</p>\n<p>To stop <code class=\"language-text\">centos7-luna-devel</code> run</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\">vagrant <span class=\"token function\">halt</span> centos7-luna-devel</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>","excerpt":"Two years after I joined Redhat to work on the foreman project, I received a new PC (Lenovo T480s), and it's time for a fresh start.\nIn this post, I will describe my process of setting up a new PC. Goals Be able to work inside Redhat and use Redhat office tools Have a javascriptâ€¦","frontmatter":{"title":"I received my new PC, and it is the time to install Fedora and set up my work environment","coverImage":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#383828","images":{"fallback":{"src":"/static/32b84915e1545038fd6a0aa84908b7ac/3832f/2019-11-05-i-received-my-new-pc-and-it-is-the-time-to-install-fedora-and-set-up-my-work-environment.jpg","srcSet":"/static/32b84915e1545038fd6a0aa84908b7ac/6c918/2019-11-05-i-received-my-new-pc-and-it-is-the-time-to-install-fedora-and-set-up-my-work-environment.jpg 750w,\n/static/32b84915e1545038fd6a0aa84908b7ac/49438/2019-11-05-i-received-my-new-pc-and-it-is-the-time-to-install-fedora-and-set-up-my-work-environment.jpg 1080w,\n/static/32b84915e1545038fd6a0aa84908b7ac/f4534/2019-11-05-i-received-my-new-pc-and-it-is-the-time-to-install-fedora-and-set-up-my-work-environment.jpg 1366w,\n/static/32b84915e1545038fd6a0aa84908b7ac/3832f/2019-11-05-i-received-my-new-pc-and-it-is-the-time-to-install-fedora-and-set-up-my-work-environment.jpg 1920w","sizes":"100vw"},"sources":[{"srcSet":"/static/32b84915e1545038fd6a0aa84908b7ac/66907/2019-11-05-i-received-my-new-pc-and-it-is-the-time-to-install-fedora-and-set-up-my-work-environment.webp 750w,\n/static/32b84915e1545038fd6a0aa84908b7ac/27610/2019-11-05-i-received-my-new-pc-and-it-is-the-time-to-install-fedora-and-set-up-my-work-environment.webp 1080w,\n/static/32b84915e1545038fd6a0aa84908b7ac/90004/2019-11-05-i-received-my-new-pc-and-it-is-the-time-to-install-fedora-and-set-up-my-work-environment.webp 1366w,\n/static/32b84915e1545038fd6a0aa84908b7ac/e4c47/2019-11-05-i-received-my-new-pc-and-it-is-the-time-to-install-fedora-and-set-up-my-work-environment.webp 1920w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.75}}}}}},{"name":"2019-08-17-testing-react-redux-applications-with-jest---qecamp2019-brno","childMarkdownRemark":{"html":"<p>In this talk, you will learn about testing React-Redux applications with Jest using the best practices I learned and developed while working on <a href=\"https://theforeman.org\">https://theforeman.org</a> UI.</p>\n<p><iframe loading=\"lazy\" width=\"200\" height=\"113\" src=\"https://www.youtube.com/embed/O4NHrmQ0XLY?feature=oembed\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen title=\"Testing React-Redux Applications with Jest - QECAMP2019 Brno\"></iframe></p>\n<p>react-redux-test-utils:\n<a href=\"https://sharvit.github.io/react-redux-test-utils/\">https://sharvit.github.io/react-redux-test-utils/</a></p>\n<p>Slides:\n<a href=\"https://slides.com/sharvit/testing-react-redux-applications-with-jest#/\">https://slides.com/sharvit/testing-react-redux-applications-with-jest#/</a></p>","excerpt":"In this talk, you will learn about testing React-Redux applications with Jest using the best practices I learned and developed while working on https://theforeman.org UI.  react-redux-test-utils:\nhttps://sharvit.github.io/react-redux-test-utils/ Slides:\nhttps://slides.com/sharvitâ€¦","frontmatter":{"title":"Testing React-Redux Applications with Jest - QECAMP2019 Brno","coverImage":null}}},{"name":"2019-08-09-using-travisci-to-automate-your-gatsbyjs-website-deployment-to-github-pages","childMarkdownRemark":{"html":"<p><a href=\"https://www.gatsbyjs.org/\">Gatsby</a> is a free and open-source framework based on React that helps developers build blazing-fast websites and apps.\nIn this blog post, you will learn how I deploy my <a href=\"https://www.gatsbyjs.org/\">Gatsby</a> website to <a href=\"https://pages.github.com/\">Github Pages</a> using <a href=\"https://travis-ci.org/\">TravisCI</a> to automate the process.</p>\n<h2>Choose your Github Pages type</h2>\n<table>\n<thead>\n<tr>\n<th>type</th>\n<th>domain</th>\n<th>repository name</th>\n<th><code class=\"language-text\">deploy</code> branch</th>\n<th><code class=\"language-text\">source-code</code> branch</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>User or Organization website</strong></td>\n<td><code class=\"language-text\">&lt;your-github-username>.github.io</code></td>\n<td><code class=\"language-text\">&lt;your-github-username>.github.io</code></td>\n<td><code class=\"language-text\">master</code></td>\n<td><code class=\"language-text\">develop</code></td>\n</tr>\n<tr>\n<td><strong>Project website</strong></td>\n<td><code class=\"language-text\">&lt;your-github-username>.github.io/&lt;your-project-name></code></td>\n<td>can be any name</td>\n<td><code class=\"language-text\">gh-pages</code></td>\n<td><code class=\"language-text\">master</code></td>\n</tr>\n</tbody>\n</table>\n<p>You <code class=\"language-text\">Github Pages</code> website will start existing once you have a repository on Github with the right name and branch.</p>\n<h2>Setup your repository</h2>\n<p>First, create your Github repository based on the website type you wish to have, clone your repository, and put your project source-code in the <code class=\"language-text\">source-code</code> branch.</p>\n<h2>Install gh-pages</h2>\n<p>The <code class=\"language-text\">gh-pages</code> library can publish files to a branch on GitHub. It is useful to push anything to Github.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> --save-dev gh-pages</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<h2>Create a deploy script</h2>\n<p>Add a deploy script to your <code class=\"language-text\">package.json</code> scripts:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-json line-numbers\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"deploy\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"gh-pages --dist public --branch DEPLOY_BRANCH_NAME\"</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<blockquote>\n<p>Replace <code class=\"language-text\">DEPLOY_BRANCH_NAME</code> with your <code class=\"language-text\">deploy-branch</code> name</p>\n</blockquote>\n<h2>Manually deploy your website</h2>\n<p>Now, once you installed <code class=\"language-text\">gh-pages</code> and configured your deployment script, you can deploy your website manually to <code class=\"language-text\">Github Pages</code>.<br>\nRun <code class=\"language-text\">yarn build &amp;&amp; yarn deploy</code> (or <code class=\"language-text\">npm run build &amp;&amp; npm run deploy</code> if working with <code class=\"language-text\">npm</code>) and go to your website URL.<br>\nYou should see your website there.</p>\n<h2>Setup Travis</h2>\n<p>TravisCI let you test and deploy your Github project easily. Use it to run the deploy script on each update to the <code class=\"language-text\">source-code</code> branch.</p>\n<h3>Setup your <code class=\"language-text\">.travis.yml</code> file</h3>\n<p>To setup Travis, first, add the following <code class=\"language-text\">.travis.yml</code> file to the root of your <code class=\"language-text\">source-code</code> branch.</p>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-yml line-numbers\"><code class=\"language-yml\"><span class=\"token key atrule\">language</span><span class=\"token punctuation\">:</span> node_js\n<span class=\"token key atrule\">node_js</span><span class=\"token punctuation\">:</span> <span class=\"token number\">12</span>\n<span class=\"token key atrule\">env</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">GITHUB_NAME</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"YOUR_GITHUB_NAME\"</span>\n  <span class=\"token key atrule\">GITHUB_EMAIL</span><span class=\"token punctuation\">:</span> your<span class=\"token punctuation\">-</span>email@example.com\n<span class=\"token key atrule\">before_script</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> git config <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>global user.email \"$<span class=\"token punctuation\">{</span>GITHUB_EMAIL<span class=\"token punctuation\">}</span>\"\n  <span class=\"token punctuation\">-</span> git config <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>global user.name \"$<span class=\"token punctuation\">{</span>GITHUB_NAME<span class=\"token punctuation\">}</span>\"\n  <span class=\"token punctuation\">-</span> git remote set<span class=\"token punctuation\">-</span>url origin \"https<span class=\"token punctuation\">:</span>//$<span class=\"token punctuation\">{</span>GH_TOKEN<span class=\"token punctuation\">}</span>@github.com/sharvit/sharvit.github.io.git\"\n<span class=\"token key atrule\">script</span><span class=\"token punctuation\">:</span> yarn build <span class=\"token comment\"># replace with `npm run build` if using npm</span>\n<span class=\"token key atrule\">deploy</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">branch</span><span class=\"token punctuation\">:</span> SOURCE_CODE_BRANCH_NAME\n  <span class=\"token key atrule\">provider</span><span class=\"token punctuation\">:</span> script\n  <span class=\"token key atrule\">skip_cleanup</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n  <span class=\"token key atrule\">script</span><span class=\"token punctuation\">:</span> yarn deploy <span class=\"token comment\"># replace with `npm run deploy` if using npm</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<blockquote>\n<p>Replace <code class=\"language-text\">YOUR_GITHUB_NAME</code> with your real name, I am using \"Avi sharvit\", this used as the committer name.<br>\nReplace <code class=\"language-text\">your-email@example.com</code> with your email, this used as the committer email.<br>\nReplace <code class=\"language-text\">SOURCE_CODE_BRANCH_NAME</code> with your <code class=\"language-text\">source-code</code> branch name.</p>\n</blockquote>\n<h3>Enable Travis</h3>\n<p>To enable Travis for your project, you can go to Travis website and use their dashboard, or you can use the CLI:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\">gem <span class=\"token function\">install</span> travis\ntravis <span class=\"token builtin class-name\">enable</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<h3>Create a Github token</h3>\n<p>To let Travis deploy to GitHub, Travis needs to have the right credentials.<br>\nTo do so, you to create a Github token with a <code class=\"language-text\">repo</code> scope.<br>\nThis can be done by visiting <a href=\"https://github.com/settings/tokens\">https://github.com/settings/tokens</a>.</p>\n<h3>Set your Github token in Travis</h3>\n<p>Set up an environment variable in Travis with the name <code class=\"language-text\">GH_TOKEN</code> and the value of the created token.<br>\nThis can be done from Travis dashboard or by the cli by running:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\">travis <span class=\"token function\">env</span> <span class=\"token builtin class-name\">set</span> GH_TOKEN GITHUB_TOKEN_VALUE_HERE</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<blockquote>\n<p>Replace <code class=\"language-text\">GITHUB_TOKEN_VALUE_HERE</code> with your newly created token.</p>\n</blockquote>\n<h3>Commit and Push</h3>\n<p>Now you should be ready to go and push your changes to Github.\nTravis will deploy your website to <code class=\"language-text\">Github Pages</code> with every commit pushed to your <code class=\"language-text\">source-code</code> branch in GitHub.</p>","excerpt":"Gatsby is a free and open-source framework based on React that helps developers build blazing-fast websites and apps.\nIn this blog post, you will learn how I deploy my Gatsby website to Github Pages using TravisCI to automate the process. Choose your Github Pages type type domainâ€¦","frontmatter":{"title":"Using TravisCI to automate your GatsbyJs website deployment to Github pages","coverImage":null}}},{"name":"2019-08-09-hello-gatsby-world","childMarkdownRemark":{"html":"<p>Its took a few days to set everything up and now my blog running with <a href=\"https://www.gatsbyjs.org/\">GatsbyJS</a>.<br>\nsee the source-code of my blog at: <a href=\"https://github.com/sharvit/sharvit.github.io\">https://github.com/sharvit/sharvit.github.io</a></p>","excerpt":"Its took a few days to set everything up and now my blog running with GatsbyJS. see the source-code of my blog at: https://github.com/sharvit/sharvit.github.io","frontmatter":{"title":"Hello Gatsby World","coverImage":null}}},{"name":"2016-07-01-serving-your-angular-client-with-nodejs-microservice","childMarkdownRemark":{"html":"<p>So you build your angularjs app and you need to serve the app in production.\nThe common mistake is serving your client side from your main API.\nI believe the best option is just having a nodejs micro service that serving our static angular app.</p>\n<p>The first problem serving angular app is the html5 routing system.</p>\n<p>let's say this is your router:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\">$locationProvider<span class=\"token punctuation\">.</span><span class=\"token function\">html5Mode</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n$urlRouterProvider\n    <span class=\"token punctuation\">.</span><span class=\"token function\">when</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/dashboard'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'/dashboard/state1'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">otherwise</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/login'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">;</span>\n\n$stateProvider\n    <span class=\"token punctuation\">.</span><span class=\"token function\">state</span><span class=\"token punctuation\">(</span><span class=\"token string\">'app.login'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token string\">'/login'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">templateUrl</span><span class=\"token operator\">:</span> <span class=\"token string\">'templates/states/login/login.html'</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">state</span><span class=\"token punctuation\">(</span><span class=\"token string\">'app.dashboard'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token string\">'/dashboard'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">templateUrl</span><span class=\"token operator\">:</span> <span class=\"token string\">'templates/states/dashboard/dashboard.html'</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    $stateProvider<span class=\"token punctuation\">.</span><span class=\"token function\">state</span><span class=\"token punctuation\">(</span><span class=\"token string\">'app.dashboard.state1'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token string\">'/state1'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">templateUrl</span><span class=\"token operator\">:</span> <span class=\"token string\">'templates/states/dashboard/state1/state1.html'</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    $stateProvider<span class=\"token punctuation\">.</span><span class=\"token function\">state</span><span class=\"token punctuation\">(</span><span class=\"token string\">'app.dashboard.state2'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token string\">'/state2'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">templateUrl</span><span class=\"token operator\">:</span> <span class=\"token string\">'templates/states/dashboard/state2/state2.html'</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Your urls will looks like that:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">my-domain.com -> go to my-domain.com/login\nmy-domain.com/login\nmy-domain.com/dashboard -> go to my-domain.com/dashboard/state1\nmy-domain.com/dashboard/state1\nmy-domain.com/dashboard/state2</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>So if you normally go to <code class=\"language-text\">my-domain.com</code> it will work fine and angular will naturaly change the url to <code class=\"language-text\">my-domain.com</code> and will show the <code class=\"language-text\">app.login</code> state.\nAngular will do it well until you will try to reload or open <code class=\"language-text\">my-domain.com/login</code> or whatever route, your service will need to serve the index.html for all this routes.</p>\n<p>First thing you will need to tell angular what is the base route.\nAdd this line to your <code class=\"language-text\">index.html</code></p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-html line-numbers\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n    ...\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>base</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    ...\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Install dependencies</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> express cors path compression <span class=\"token parameter variable\">--save</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>Create your <code class=\"language-text\">server.js</code> file</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token string\">'use strict'</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// use new relic if license key exists</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">NEW_RELIC_LICENSE_KEY</span> <span class=\"token operator\">===</span> <span class=\"token string\">'string'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'newrelic'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">var</span> express   <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'express'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        cors      <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'cors'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        path      <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'path'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        compress  <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'compression'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n        <span class=\"token constant\">PORT</span>          <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">PORT</span> <span class=\"token operator\">||</span> <span class=\"token number\">3000</span><span class=\"token punctuation\">,</span>\n\n        <span class=\"token constant\">PRODUCTION_DOMAIN</span> <span class=\"token operator\">=</span> <span class=\"token string\">'my-domain.com'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token constant\">APP_FOLDER</span> <span class=\"token operator\">=</span> <span class=\"token string\">'build/release'</span><span class=\"token punctuation\">,</span>\n\n        <span class=\"token constant\">RELEASE_PATH</span>  <span class=\"token operator\">=</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span>       <span class=\"token constant\">APP_FOLDER</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token constant\">INDEX_FILE</span>    <span class=\"token operator\">=</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token constant\">RELEASE_PATH</span><span class=\"token punctuation\">,</span>    <span class=\"token string\">'index.html'</span>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n        <span class=\"token constant\">STATIC_URLS</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n            <span class=\"token string\">'/fonts/'</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">'/icons/'</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">'/images/'</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">'/locales/'</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">'/scripts/'</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">'/styles/'</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">'/favicons/'</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\n        server <span class=\"token operator\">=</span> <span class=\"token function\">express</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Enable All CORS Requests</span>\n    server<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token function\">cors</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// use gzip compress</span>\n    server<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token function\">compress</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// // don't index unless production</span>\n    server<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">,</span> next</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">.</span>hostname<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token constant\">PRODUCTION_DOMAIN</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            res<span class=\"token punctuation\">.</span><span class=\"token function\">setHeader</span><span class=\"token punctuation\">(</span><span class=\"token string\">'X-Robots-Tag:'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'noindex, nofollow'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Cache the static urls</span>\n    server<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">,</span> next</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token constant\">STATIC_URLS</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token constant\">STATIC_URLS</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                res<span class=\"token punctuation\">.</span><span class=\"token function\">setHeader</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Cache-Control'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'public, max-age=345600'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 4 days</span>\n                res<span class=\"token punctuation\">.</span><span class=\"token function\">setHeader</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Expires'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span>Date<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">345600000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toUTCString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n    <span class=\"token comment\">// use express to serve the static release files</span>\n    server<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span>express<span class=\"token punctuation\">.</span><span class=\"token function\">static</span><span class=\"token punctuation\">(</span><span class=\"token constant\">RELEASE_PATH</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// support html5mode for angular</span>\n    <span class=\"token comment\">// serve the index file</span>\n    server<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/*'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">,</span> next</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n        <span class=\"token comment\">// Do not serve the index for static urls</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token constant\">STATIC_URLS</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token constant\">STATIC_URLS</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">return</span> <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token comment\">// Use res.sendFile, as it streams instead of reading the file into memory.</span>\n        res<span class=\"token punctuation\">.</span><span class=\"token function\">sendFile</span><span class=\"token punctuation\">(</span><span class=\"token constant\">INDEX_FILE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// run the server and start listen to the port</span>\n    server<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token constant\">PORT</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Render some console log output</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Angular app is running on port '</span> <span class=\"token operator\">+</span> <span class=\"token constant\">PORT</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Just run</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\"><span class=\"token function\">node</span> server.js</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>You can run it on your favorite platform.</p>","excerpt":"So you build your angularjs app and you need to serve the app in production.\nThe common mistake is serving your client side from your main API.\nI believe the best option is just having a nodejs micro service that serving our static angular app. The first problem serving angularâ€¦","frontmatter":{"title":"Serving angular client with node.js micro service","coverImage":null}}},{"name":"2016-01-22-build-your-i18n-translation-files-using-gulp","childMarkdownRemark":{"html":"<p>From one hand, i want to have a flexible and dynamic source files for my app I18n/translations.\n<a href=\"http://rubyonrails.org/\">ROR</a> have a great I18n source structure that split you translations to many files and i want to adopt it in my <a href=\"https://angularjs.org/\">angularjs</a> project.\nFrom the other hand, serving  so many translation files to the end user can be a bad idea, i prefer to serve only one file with the specific locale that the user want.</p>\n<p>The goal is to have a source folder with all the translation files, then use <a href=\"http://gulpjs.com/\">gulp</a> to build a destination folder.</p>\n<p>The source folder contain list of folder, named as the locale name (<code class=\"language-text\">en-US</code>) and contain all the translations for this specific locale.</p>\n<h2>Source folder</h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\">locales\nâ”œâ”€â”€ en-US\nâ”‚   â”œâ”€â”€ country.json\nâ”‚   â”œâ”€â”€ dashboard.json\nâ”‚   â”œâ”€â”€ dashboard.state1.json\nâ”‚   â”œâ”€â”€ dashboard.state2.json\nâ”‚   â”œâ”€â”€ language.json\nâ”‚   â”œâ”€â”€ layout.json\nâ”‚   â”œâ”€â”€ login.json\nâ”‚   â””â”€â”€ utils.json\nâ”œâ”€â”€ fr-FR\nâ”‚   â”œâ”€â”€ country.json\nâ”‚   â”œâ”€â”€ dashboard.json\nâ”‚   â”œâ”€â”€ dashboard.state1.json\nâ”‚   â”œâ”€â”€ dashboard.state2.json\nâ”‚   â”œâ”€â”€ layout.json\nâ”‚   â”œâ”€â”€ login.json\nâ”‚   â””â”€â”€ utils.json\nâ””â”€â”€ he-IL\n    â”œâ”€â”€ country.json\n    â”œâ”€â”€ dashboard.json\n    â”œâ”€â”€ dashboard.state1.json\n    â”œâ”€â”€ dashboard.state2.json\n    â”œâ”€â”€ layout.json\n    â”œâ”€â”€ login.json\n    â””â”€â”€ utils.json\n\n<span class=\"token number\">3</span> directories, <span class=\"token number\">22</span> files</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3>Source file</h3>\n<p>locales/en-US/country.json</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-json line-numbers\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"country\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"navbarTitle\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"World Countries\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"list\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"pageTitle\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"World Countries\"</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Name in english\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"nativeName\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Name in native language\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"capital\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Capital\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"region\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Region\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"subregion\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Sub Region\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"population\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Population\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"timezones\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Timezones\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"altSpellings\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Spellings\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"currencies\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Currencies\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"languages\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Languages\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"translations\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Translations\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"borders\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Borders\"</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>locales/en-US/dashboard.json</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-json line-numbers\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"dashboard\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"dashboard\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"navbarTitle\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Dashboard\"</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>locales/en-US/dashboard.state1.json</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-json line-numbers\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"dashboard\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"state1\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"paragraph1\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"This is the a paragraph for state number one.\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"navbarTitle\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"state 1\"</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>Destination folder</h2>\n<p>The destination folder will contain json file for each locale.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\">locales\nâ”œâ”€â”€ en-US.json\nâ”œâ”€â”€ fr-FR.json\nâ””â”€â”€ he-IL.json\n\n<span class=\"token number\">0</span> directories, <span class=\"token number\">3</span> files</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2>The Gulp Task</h2>\n<p>First we need to make sure that we have <a href=\"http://gulpjs.com/\">gulp</a> globally installed:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> <span class=\"token parameter variable\">-g</span> gulp</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>Then, install the task <a href=\"https://www.npmjs.com/\">npm</a> dependencies (remember that they are <strong>development dependencies</strong>):</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> --save-dev path streamqueue gulp-load-plugins gulp-extend</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<h3>The task source code</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token string\">'use strict'</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// dependencies</span>\n    <span class=\"token keyword\">var</span> gulp          <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'gulp'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> path          <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'path'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> streamqueue   <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'streamqueue'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> plugins       <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'gulp-load-plugins'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n    <span class=\"token comment\">/**\n    * Task Settings\n    */</span>\n    <span class=\"token keyword\">var</span> avilableLocales <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'en-US'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'fr-FR'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'he-IL'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">var</span> localesSourcePattern <span class=\"token operator\">=</span> <span class=\"token string\">'config/locales/xxlocalexx/*.json'</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">var</span> targetDir <span class=\"token operator\">=</span> <span class=\"token string\">'dist/locales'</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/**\n    * build each avilable locale (from localesSourcePattern)\n    * to his own json fle (en-US.json) at the target dir\n    */</span>\n    gulp<span class=\"token punctuation\">.</span><span class=\"token function\">task</span><span class=\"token punctuation\">(</span><span class=\"token string\">'build:locales'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">buildLocalesQueue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>gulp<span class=\"token punctuation\">.</span><span class=\"token function\">dest</span><span class=\"token punctuation\">(</span>targetDir<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// build each avilable locale</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">buildLocalesQueue</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// Prepare the stream queue</span>\n        <span class=\"token keyword\">var</span> localesQueue <span class=\"token operator\">=</span> <span class=\"token function\">streamqueue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">objectMode</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// For each avilable locales</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> avilableLocales<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// Build the local and add to the stream queue</span>\n            localesQueue<span class=\"token punctuation\">.</span><span class=\"token function\">queue</span><span class=\"token punctuation\">(</span>\n                <span class=\"token function\">buildLocale</span><span class=\"token punctuation\">(</span>avilableLocales<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">return</span> localesQueue<span class=\"token punctuation\">.</span><span class=\"token function\">done</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// Combine all the source locale files to one dist locale file</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">buildLocale</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">locale</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">var</span> localePattern <span class=\"token operator\">=</span> localesSourcePattern<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">xxlocalexx</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">,</span> locale<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">return</span> gulp<span class=\"token punctuation\">.</span><span class=\"token function\">src</span><span class=\"token punctuation\">(</span>localePattern<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>plugins<span class=\"token punctuation\">.</span><span class=\"token function\">extend</span><span class=\"token punctuation\">(</span>locale <span class=\"token operator\">+</span> <span class=\"token string\">'.json'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3>Using the task</h3>\n<p>just run in your terminal:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\">gulp build:locales</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>result:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-bash line-numbers\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span><span class=\"token number\">10</span>:01:11<span class=\"token punctuation\">]</span> Using gulpfile ~/develop/angular/angular-full-seed/gulpfile.js\n<span class=\"token punctuation\">[</span><span class=\"token number\">10</span>:01:11<span class=\"token punctuation\">]</span> Starting <span class=\"token string\">'build:locales'</span><span class=\"token punctuation\">..</span>.\n<span class=\"token punctuation\">[</span><span class=\"token number\">10</span>:01:11<span class=\"token punctuation\">]</span> Finished <span class=\"token string\">'build:locales'</span> after <span class=\"token number\">94</span> ms</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<p>Now you can run this task by its own or use it as a sub task for your main build task.</p>","excerpt":"From one hand, i want to have a flexible and dynamic source files for my app I18n/translations.\nROR have a great I18n source structure that split you translations to many files and i want to adopt it in my angularjs project.\nFrom the other hand, serving  so many translation filesâ€¦","frontmatter":{"title":"Build your I18n translation files using gulp","coverImage":null}}},{"name":"2015-12-21-hello-world","childMarkdownRemark":{"html":"<p>Its took a minute to set everything up, and it feel so great working on that platform!</p>","excerpt":"Its took a minute to set everything up, and it feel so great working on that platform!","frontmatter":{"title":"Hello World!","coverImage":null}}}]}}}