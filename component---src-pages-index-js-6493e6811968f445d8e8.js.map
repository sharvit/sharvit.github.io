{"version":3,"sources":["webpack:///./src/components/OpenSource/LatestOpenSourceSection/LatestOpenSourceData.js","webpack:///./src/components/OpenSource/LatestOpenSourceSection/LatestOpenSourceSection.js","webpack:///./src/components/OpenSource/LatestOpenSourceSection/index.js","webpack:///./src/components/Blog/LatestBlogPostsSection.js","webpack:///./src/pages/index.js","webpack:///./node_modules/core-js/modules/es6.date.to-json.js","webpack:///./node_modules/core-js/modules/es6.string.link.js","webpack:///./node_modules/core-js/modules/_string-html.js","webpack:///./src/components/Profile/ProfileSection/ProfileBackground/ProfileBackground.js","webpack:///./src/components/Profile/ProfileSection/ProfileBackground/index.js","webpack:///./src/components/Profile/ProfileSection/ProfileIconLinks/ProfileIconLinks.js","webpack:///./src/components/Profile/ProfileSection/ProfileIconLinks/index.js","webpack:///./src/components/Profile/ProfileSection/ProfileIconLinks/ProfileIconLinksData.js","webpack:///./src/components/Profile/ProfileSection/ProfileSection.js","webpack:///./src/components/Profile/ProfileSection/index.js","webpack:///./src/components/Profile/ProfileSection/ProfileSectionData.js","webpack:///./src/components/Blog/BlogPostList/BlogPostListItem.js","webpack:///./src/components/Blog/BlogData.js","webpack:///./src/components/Blog/BlogPostList/BlogPostListData.js","webpack:///./src/components/Blog/BlogPostList/BlogPostList.js","webpack:///./src/components/Blog/BlogPostList/index.js"],"names":["getLatestOpenSourceProjects","_ref","regenerator_default","a","mark","_callee","repositories","wrap","_context","prev","next","getUserRepositories","sent","abrupt","filter","_ref2","fork","sort","b","stargazersCount","reverse","slice","t0","console","error","stop","apply","this","arguments","LatestOpenSourceSection","react_default","createElement","className","classNames","styles","container","map","repository","key","name","OpenSourceCard","gatsby_browser_entry","to","defaultProps","Component","_useState","useState","setRepositories","loadRepositories","t1","useEffect","OpenSource_LatestOpenSourceSection_LatestOpenSourceSection","LatestBlogPostsSection","BlogPostList","limit","morePostsRow","IndexPage","Layout","transparent","SEO","ProfileSection","OpenSource_LatestOpenSourceSection","Blog_LatestBlogPostsSection","$export","__webpack_require__","toObject","toPrimitive","P","F","Date","NaN","toJSON","prototype","call","toISOString","O","pv","isFinite","createHTML","url","fails","defined","quot","string","tag","attribute","value","S","String","p1","replace","module","exports","NAME","exec","test","toLowerCase","split","length","ProfileBackground","style","backgroundImage","ProfileIconLinks","socialLinks","id","link","buttonClassName","iconClassName","Fragment","gatsby_plugin_google_analytics","href","target","rel","ProfileSection_ProfileIconLinks","_1026590087","data","site","siteMetadata","ProfileSection_ProfileIconLinks_ProfileIconLinks","description","avatar","bio","ProfileSection_ProfileBackground","profileSection","ownerAvatar","src","alt","owner","ownerContact","ownerAbout","dangerouslySetInnerHTML","__html","resumeButton","_staticQueryData$data","_staticQueryData$data2","_getProfileData","_4012728537","title","author","file","childMarkdownRemark","html","Profile_ProfileSection_ProfileSection","BlogPostListItem","path","date","excerpt","article","dateTime","toDateString","articleContent","readMoreButton","fileToBlogPost","_ref$node","node","_ref$node$childMarkdo","frontmatter","formatBlogPost","_name$split","year","month","day","nameWithoutDate","join","getBlogPostsList","_1183512983","allFile","edges","post","BlogPostList_BlogPostListItem","Object","assign"],"mappings":"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","file":"component---src-pages-index-js-6493e6811968f445d8e8.js","sourcesContent":["import { getUserRepositories } from '../OpenSourceData';\n\nexport const getLatestOpenSourceProjects = async () => {\n  try {\n    const repositories = await getUserRepositories('sharvit');\n\n    return repositories\n      .filter(({ fork }) => !fork)\n      .sort((a, b) => a.stargazersCount - b.stargazersCount)\n      .reverse()\n      .slice(0, 3);\n  } catch (error) {\n    console.error(error); // eslint-disable-line no-console\n  }\n\n  return [];\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Link } from 'gatsby';\n\nimport OpenSourceCard from '../OpenSourceCard';\n\nimport styles from './LatestOpenSourceSection.module.scss';\n\nconst LatestOpenSourceSection = ({ repositories }) => (\n  <section\n    className={classNames(\n      'section posts-section section-light-brown',\n      styles.container\n    )}\n  >\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-md-10 col-md-offset-1\">\n          <div className=\"text-center\">\n            <h2>Latest Open Source Projects</h2>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"row open-source open-source-section\">\n        {repositories.map(repository => (\n          <div className=\"col-md-4\" key={repository.name}>\n            <OpenSourceCard {...repository} />\n          </div>\n        ))}\n      </div>\n\n      <div className=\"row\">\n        <div className=\"col-md-10 col-md-offset-1\">\n          <div className=\"text-center\">\n            <Link to=\"/open-source\" className=\"btn btn-default\">\n              All Open Source Projects\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n);\n\nLatestOpenSourceSection.propTypes = {\n  repositories: PropTypes.arrayOf(\n    PropTypes.shape({\n      ...OpenSourceCard.propTypes,\n    })\n  ),\n};\n\nLatestOpenSourceSection.defaultProps = {\n  repositories: [],\n};\n\nexport default LatestOpenSourceSection;\n","import React, { useState, useEffect } from 'react';\n\nimport { getLatestOpenSourceProjects } from './LatestOpenSourceData';\nimport LatestOpenSourceSection from './LatestOpenSourceSection';\n\nconst Component = () => {\n  const [repositories, setRepositories] = useState([]);\n\n  const loadRepositories = async () => {\n    setRepositories(await getLatestOpenSourceProjects());\n  };\n\n  useEffect(() => {\n    loadRepositories();\n  }, []);\n\n  return <LatestOpenSourceSection repositories={repositories} />;\n};\n\nexport default Component;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Link } from 'gatsby';\n\nimport BlogPostList from './BlogPostList';\nimport styles from './LatestBlogPostsSection.module.scss';\n\nconst LatestBlogPostsSection = () => (\n  <section className={classNames('section section-white', styles.container)}>\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-md-10 col-md-offset-1\">\n          <div className=\"text-center\">\n            <h2>Latest Blog Posts</h2>\n          </div>\n        </div>\n      </div>\n\n      <BlogPostList limit={5} />\n\n      <div className={classNames('row', styles.morePostsRow)}>\n        <div className=\"col-md-10 col-md-offset-1\">\n          <div className=\"text-center\">\n            <Link to=\"/blog\" className=\"btn btn-fill btn-primary btn-lg\">\n              All Blog Posts\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n);\n\nexport default LatestBlogPostsSection;\n","import React from 'react';\n\nimport Layout from '../components/Layout';\nimport SEO from '../components/SEO';\nimport ProfileSection from '../components/Profile/ProfileSection';\nimport LatestOpenSourceSection from '../components/OpenSource/LatestOpenSourceSection';\nimport LatestBlogPostsSection from '../components/Blog/LatestBlogPostsSection';\n\nconst IndexPage = () => (\n  <Layout transparent>\n    <SEO />\n    <ProfileSection />\n    <LatestOpenSourceSection />\n    <LatestBlogPostsSection />\n  </Layout>\n);\n\nexport default IndexPage;\n","'use strict';\nvar $export = require('./_export');\nvar toObject = require('./_to-object');\nvar toPrimitive = require('./_to-primitive');\n\n$export($export.P + $export.F * require('./_fails')(function () {\n  return new Date(NaN).toJSON() !== null\n    || Date.prototype.toJSON.call({ toISOString: function () { return 1; } }) !== 1;\n}), 'Date', {\n  // eslint-disable-next-line no-unused-vars\n  toJSON: function toJSON(key) {\n    var O = toObject(this);\n    var pv = toPrimitive(O);\n    return typeof pv == 'number' && !isFinite(pv) ? null : O.toISOString();\n  }\n});\n","'use strict';\n// B.2.3.10 String.prototype.link(url)\nrequire('./_string-html')('link', function (createHTML) {\n  return function link(url) {\n    return createHTML(this, 'a', 'href', url);\n  };\n});\n","var $export = require('./_export');\nvar fails = require('./_fails');\nvar defined = require('./_defined');\nvar quot = /\"/g;\n// B.2.3.2.1 CreateHTML(string, tag, attribute, value)\nvar createHTML = function (string, tag, attribute, value) {\n  var S = String(defined(string));\n  var p1 = '<' + tag;\n  if (attribute !== '') p1 += ' ' + attribute + '=\"' + String(value).replace(quot, '&quot;') + '\"';\n  return p1 + '>' + S + '</' + tag + '>';\n};\nmodule.exports = function (NAME, exec) {\n  var O = {};\n  O[NAME] = exec(createHTML);\n  $export($export.P + $export.F * fails(function () {\n    var test = ''[NAME]('\"');\n    return test !== test.toLowerCase() || test.split('\"').length > 3;\n  }), 'String', O);\n};\n","import React from 'react';\n// import PropTypes from 'prop-types';\n\nimport styles from './ProfileBackground.module.scss';\n\nconst ProfileBackground = () => (\n  <div\n    className={styles.container}\n    style={{\n      backgroundImage: 'yooo',\n    }}\n  >\n    <div className={styles.filter} />\n  </div>\n);\n\nProfileBackground.propTypes = {};\n\nProfileBackground.defaultProps = {};\n\nexport default ProfileBackground;\n","import ProfileBackground from './ProfileBackground';\n\nexport default ProfileBackground;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { OutboundLink } from 'gatsby-plugin-google-analytics';\n\nconst ProfileIconLinks = ({ socialLinks }) => (\n  <p>\n    {socialLinks.map(({ id, link, buttonClassName, iconClassName }) => (\n      <React.Fragment key={id}>\n        <OutboundLink\n          className={buttonClassName}\n          href={link}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <i className={iconClassName} />\n        </OutboundLink>{' '}\n      </React.Fragment>\n    ))}\n  </p>\n);\n\nProfileIconLinks.propTypes = {\n  socialLinks: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      link: PropTypes.string,\n      buttonClassName: PropTypes.string,\n      iconClassName: PropTypes.string,\n    })\n  ),\n};\n\nProfileIconLinks.defaultProps = {\n  socialLinks: [],\n};\n\nexport default ProfileIconLinks;\n","import React from 'react';\n\nimport { getSocialLinks } from './ProfileIconLinksData';\nimport ProfileIconLinks from './ProfileIconLinks';\n\nexport default () => {\n  const socialLinks = getSocialLinks();\n\n  return <ProfileIconLinks socialLinks={socialLinks} />;\n};\n","import { useStaticQuery, graphql } from 'gatsby';\n\nexport const getSocialLinks = () =>\n  useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            socialLinks {\n              id\n              link\n              buttonClassName\n              iconClassName\n            }\n          }\n        }\n      }\n    `\n  ).site.siteMetadata.socialLinks;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { OutboundLink } from 'gatsby-plugin-google-analytics';\n\nimport ProfileBackground from './ProfileBackground';\nimport ProfileIconLinks from './ProfileIconLinks';\n\nimport styles from './ProfileSection.module.scss';\n\nconst ProfileSection = ({ name, description, avatar, bio }) => (\n  <>\n    <ProfileBackground />\n    <header className={`${styles.profileSection} section-nude`}>\n      <div className=\"container\">\n        <div className={`row ${styles.ownerAvatar}`}>\n          <div className=\"col-md-2 col-md-offset-5 col-sm-4 col-sm-offset-4 col-xs-6 col-xs-offset-3 text-center\">\n            <div className={styles.avatar}>\n              <img\n                src={avatar}\n                alt=\"Avi Sharvit Avatar\"\n                className=\"img-circle img-no-padding img-responsive\"\n              />\n            </div>\n          </div>\n        </div>\n        <div className={`row ${styles.owner}`}>\n          <div className=\"col-md-6 col-md-offset-3 text-center\">\n            <h1 className={styles.name}>\n              {name}\n              <br />\n              <small>{description}</small>\n            </h1>\n          </div>\n        </div>\n        <div className={`row ${styles.ownerContact}`}>\n          <div className=\"col-md-6 col-md-offset-3 text-center\">\n            <ProfileIconLinks />\n          </div>\n        </div>\n        <div className={`row ${styles.ownerAbout}`}>\n          <div className=\"col-md-6 col-md-offset-3 text-center\">\n            <div dangerouslySetInnerHTML={{ __html: bio }} />\n            <div className={styles.resumeButton}>\n              <OutboundLink\n                href=\"/avi-sharvit-resume.pdf\"\n                className=\"btn btn-danger btn-fill\"\n              >\n                DOWNLOAD RESUME PDF\n              </OutboundLink>\n            </div>\n          </div>\n        </div>\n      </div>\n    </header>\n  </>\n);\n\nProfileSection.propTypes = {\n  name: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  bio: PropTypes.string.isRequired,\n};\n\nProfileSection.defaultProps = {};\n\nexport default ProfileSection;\n","import React from 'react';\nimport { getProfileData } from './ProfileSectionData';\nimport ProfileSection from './ProfileSection';\n\nconst Component = () => {\n  const { title, description, avatar, bio } = getProfileData();\n\n  return (\n    <ProfileSection\n      name={title}\n      description={description}\n      avatar={avatar}\n      bio={bio}\n    />\n  );\n};\n\nexport default Component;\n","import { useStaticQuery, graphql } from 'gatsby';\n\nexport const getProfileData = () => {\n  const {\n    site: {\n      siteMetadata: {\n        title,\n        description,\n        author: { avatar },\n      },\n    },\n    file: {\n      childMarkdownRemark: { html: bio },\n    },\n  } = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n          description\n          author {\n            avatar\n          }\n        }\n      }\n      file(sourceInstanceName: { eq: \"bio\" }, name: { eq: \"short-bio\" }) {\n        childMarkdownRemark {\n          html\n        }\n      }\n    }\n  `);\n\n  return { title, description, avatar, bio };\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Link } from 'gatsby';\n\nimport styles from './BlogPostListItem.module.scss';\n\nconst BlogPostListItem = ({ title, path, date, excerpt }) => (\n  <article className={styles.article}>\n    <div className=\"row\">\n      <div className=\"col-md-10 col-md-offset-1\">\n        <div className=\"text-center\">\n          <Link to={path}>\n            <h2 className={styles.title}>{title}</h2>\n          </Link>\n          <div className=\"title-uppercase\">\n            <time dateTime={date.toJSON()}>{date.toDateString()}</time>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div className=\"row\">\n      <div className=\"col-md-8 col-md-offset-2\">\n        <div className={styles.articleContent}>\n          <p>{excerpt}</p>\n          <Link\n            to={path}\n            className={classNames(\n              'btn btn-simple btn-primary',\n              styles.readMoreButton\n            )}\n          >\n            READ MORE\n          </Link>\n        </div>\n      </div>\n    </div>\n  </article>\n);\n\nBlogPostListItem.propTypes = {\n  title: PropTypes.string,\n  path: PropTypes.string,\n  date: PropTypes.instanceOf(Date),\n  excerpt: PropTypes.string,\n};\n\nBlogPostListItem.defaultProps = {\n  title: '',\n  path: '',\n  date: new Date(),\n  excerpt: '',\n};\n\nexport default BlogPostListItem;\n","import { useStaticQuery, graphql } from 'gatsby';\n\nexport const getBlogPosts = () =>\n  useStaticQuery(\n    graphql`\n      {\n        allFile(\n          filter: { sourceInstanceName: { eq: \"posts\" } }\n          sort: { order: DESC, fields: name }\n          limit: 1000\n        ) {\n          edges {\n            node {\n              name\n              childMarkdownRemark {\n                excerpt\n                frontmatter {\n                  title\n                }\n              }\n            }\n          }\n        }\n      }\n    `\n  ).allFile.edges.map(fileToBlogPost);\n\nexport const fileToBlogPost = ({\n  node: {\n    name,\n    childMarkdownRemark: {\n      excerpt,\n      frontmatter: { title },\n    },\n  },\n}) => formatBlogPost({ name, title, excerpt });\n\nexport const formatBlogPost = ({ name, title, excerpt }) => {\n  const [year, month, day, ...nameWithoutDate] = name.split('-');\n  const date = new Date(`${year}-${month}-${day}`);\n\n  return {\n    title,\n    date,\n    excerpt,\n    path: `/blog/${nameWithoutDate.join('-')}`,\n  };\n};\n","import { getBlogPosts } from '../BlogData';\n\nexport const getBlogPostsList = limit => getBlogPosts().slice(0, limit);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// import classNames from 'classnames';\n\nimport BlogPostListItem from './BlogPostListItem';\nimport { getBlogPostsList } from './BlogPostListData';\n// import styles from './LatestBlogPostsSection.module.scss';\n\nconst BlogPostList = ({ limit }) => (\n  <div className=\"articles\">\n    {getBlogPostsList(limit).map(post => (\n      <BlogPostListItem key={post.path} {...post} />\n    ))}\n  </div>\n);\n\nBlogPostList.propTypes = {\n  limit: PropTypes.number,\n};\n\nBlogPostList.defaultProps = {\n  limit: 1000,\n};\n\nexport default BlogPostList;\n","import BlogPostList from './BlogPostList';\n\nexport default BlogPostList;\n"],"sourceRoot":""}