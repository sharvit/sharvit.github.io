{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/SEO.js","webpack:///./src/components/Layout/Navbar/Navbar.js","webpack:///./src/components/Layout/Navbar/index.js","webpack:///./src/components/Layout/Layout.js","webpack:///./src/components/Layout/index.js","webpack:///./src/components/Layout/LayoutData.js","webpack:///./src/components/Layout/Breadcrumbs/BreadcrumbItem.js","webpack:///./src/components/Layout/Breadcrumbs/Breadcrumbs.js","webpack:///./src/components/Layout/Breadcrumbs/index.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_Layout__WEBPACK_IMPORTED_MODULE_1__","_components_SEO__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","a","createElement","title","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","d","loader","enqueue","React","createContext","m","module","exports","require","default","SEO","_ref","description","lang","meta","site","_public_static_d_2755277935_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","twitter","concat","defaultProps","Navbar","siteTitle","transparent","react_default","className","classNames","role","type","data-toggle","data-target","gatsby_browser_entry","to","id","Layout","breadcrumbs","children","Fragment","Layout_Navbar","length","Breadcrumbs","items","path","_toConsumableArray","Component","props","components_Layout_Layout","Object","assign","_856328897","BreadcrumbItem","style","margin","map","item","Breadcrumbs_BreadcrumbItem","key","ProdPageRenderer","location","pageResources","InternalPageRenderer","json"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,KAAAO,EAAAP,EAAA,KAaeQ,UARM,kBACnBJ,EAAAK,EAAAC,cAACJ,EAAA,EAAD,KACEF,EAAAK,EAAAC,cAACH,EAAA,EAAD,CAAKI,MAAM,mBACXP,EAAAK,EAAAC,cAAA,uBACAN,EAAAK,EAAAC,cAAA,wGCTJ,IAAAP,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAS,EAAAZ,EAAA,IAAAa,EAAAb,EAAAK,EAAAO,GAAAZ,EAAAc,EAAAZ,EAAA,sBAAAW,EAAAJ,IAAAT,EAAA,KAAAA,EAAA,GAcyBe,QAAOC,QAELC,IAAMC,cAAc,yBChB/C,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,mFCY/C,SAASK,EAATC,GAAiD,IAAlCC,EAAkCD,EAAlCC,YAAaC,EAAqBF,EAArBE,KAAMC,EAAeH,EAAfG,KAAMjB,EAASc,EAATd,MAC9BkB,EADuCC,EAAAC,KACvCF,KAgBFG,EAAkBN,GAAeG,EAAKI,aAAaP,YAEzD,OACEQ,EAAAzB,EAAAC,cAACyB,EAAA1B,EAAD,CACE2B,eAAgB,CACdT,QAEFhB,MAAOA,EACP0B,cAAkBR,EAAKI,aAAatB,MAAvB,QACbiB,KAAM,CACJ,CACEU,KAAI,cACJC,QAASP,GAEX,CACEQ,SAAQ,WACRD,QAAS5B,GAEX,CACE6B,SAAQ,iBACRD,QAASP,GAEX,CACEQ,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAASV,EAAKI,aAAaQ,OAAOC,SAEpC,CACEJ,KAAI,gBACJC,QAAS5B,GAEX,CACE2B,KAAI,sBACJC,QAASP,IAEXW,OAAOf,KAKfJ,EAAIoB,aAAe,CACjBjB,KAAI,KACJC,KAAM,GACNF,YAAW,IAUEF,mJCpFTqB,EAAS,SAAApB,GAAA,IAAGqB,EAAHrB,EAAGqB,UAAWC,EAAdtB,EAAcsB,YAAd,OACbC,EAAAvC,EAAAC,cAAA,OACEuC,UAAWC,IACT,SACAH,EAAc,wBAA0B,qBAE1CI,KAAK,cAELH,EAAAvC,EAAAC,cAAA,OAAKuC,UAAU,aACbD,EAAAvC,EAAAC,cAAA,OAAKuC,UAAU,iBACbD,EAAAvC,EAAAC,cAAA,UACE0C,KAAK,SACLH,UAAU,gBACVI,cAAY,WACZC,cAAY,eAEZN,EAAAvC,EAAAC,cAAA,QAAMuC,UAAU,WAAhB,qBACAD,EAAAvC,EAAAC,cAAA,QAAMuC,UAAU,aAChBD,EAAAvC,EAAAC,cAAA,QAAMuC,UAAU,aAChBD,EAAAvC,EAAAC,cAAA,QAAMuC,UAAU,cAElBD,EAAAvC,EAAAC,cAAC6C,EAAA,EAAD,CAAMC,GAAG,IAAIP,UAAU,gBACpBH,IAGLE,EAAAvC,EAAAC,cAAA,OAAKuC,UAAU,2BAA2BQ,GAAG,cAC3CT,EAAAvC,EAAAC,cAAA,MAAIuC,UAAU,+BACZD,EAAAvC,EAAAC,cAAA,UACEsC,EAAAvC,EAAAC,cAAC6C,EAAA,EAAD,CAAMC,GAAG,SAAT,SAEFR,EAAAvC,EAAAC,cAAA,UACEsC,EAAAvC,EAAAC,cAAC6C,EAAA,EAAD,CAAMC,GAAG,UAAT,UAEFR,EAAAvC,EAAAC,cAAA,UACEsC,EAAAvC,EAAAC,cAAC6C,EAAA,EAAD,CAAMC,GAAG,gBAAT,qBAaZX,EAAOD,aAAe,CACpBE,UAAS,GACTC,aAAa,GAGAF,ICvDAA,EDuDAA,uWElDf,IAAMa,EAAS,SAAAjC,GAAA,IAAGqB,EAAHrB,EAAGqB,UAAWC,EAAdtB,EAAcsB,YAAaY,EAA3BlC,EAA2BkC,YAAaC,EAAxCnC,EAAwCmC,SAAxC,OACbZ,EAAAvC,EAAAC,cAAAsC,EAAAvC,EAAAoD,SAAA,KACEb,EAAAvC,EAAAC,cAACoD,EAAD,CAAQhB,UAAWA,EAAWC,YAAaA,IAC1CY,GAAeA,EAAYI,QAC1Bf,EAAAvC,EAAAC,cAACsD,EAAA,EAAD,CAAaC,MAAK,CAAG,CAAEtD,MAAOmC,EAAWoB,KAAM,MAA7BvB,OAAAwB,EAAuCR,MAE3DX,EAAAvC,EAAAC,cAAA,OAAKuC,UAAU,WAAWW,KAW9BF,EAAOd,aAAe,CACpBE,UAAW,GACXa,YAAa,GACbZ,aAAa,GAGAW,QCvBAU,IAFG,SAAAC,GAAK,OAAIrB,EAAAvC,EAAAC,cAAC4D,EAADC,OAAAC,OAAA,GAAYH,EAAZ,CAAmBvB,UCF5C2B,EAAA1C,KAQGF,KAAKI,aAAatB,+ECPjB+D,EAAiB,SAAAjD,GAAA,IAAGd,EAAHc,EAAGd,MAAOuD,EAAVzC,EAAUyC,KAAV,OACrBlB,EAAAvC,EAAAC,cAAA,UACEsC,EAAAvC,EAAAC,cAAC6C,EAAA,EAAD,CAAMC,GAAIU,GAAOvD,KASrB+D,EAAe9B,aAAe,CAC5BjC,MAAO,GACPuD,KAAM,IAGOQ,QCGAV,EAlBK,SAAAvC,GAAA,IAAGwC,EAAHxC,EAAGwC,MAAH,OAClBjB,EAAAvC,EAAAC,cAAA,OAAKuC,UAAU,eACbD,EAAAvC,EAAAC,cAAA,MAAIuC,UAAU,aAAa0B,MAAO,CAAEC,OAAQ,IACzCX,EAAMY,IAAI,SAAAC,GAAI,OACb9B,EAAAvC,EAAAC,cAACqE,EAADR,OAAAC,OAAA,CAAgBQ,IAAKF,EAAKZ,MAAUY,SCP7Bd,+JCoBAiB,UAjBU,SAAAxD,GAAiC,IAA9ByD,EAA8BzD,EAA9ByD,SAAUC,EAAoB1D,EAApB0D,cACpC,OAAKA,EAGElE,IAAMP,cAAc0E,IAApBb,OAAAC,OAAA,CACLU,WACAC,iBACGA,EAAcE,OALV","file":"component---src-pages-404-js-7d9215ba925f3b11b936.js","sourcesContent":["import React from 'react';\n\nimport Layout from '../components/Layout';\nimport SEO from '../components/SEO';\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n);\n\nexport default NotFoundPage;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`${site.siteMetadata.title} | %s`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author.twitter,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Link } from 'gatsby';\n\nconst Navbar = ({ siteTitle, transparent }) => (\n  <nav\n    className={classNames(\n      'navbar',\n      transparent ? 'navbar-ct-transparent' : 'navbar-ct-primary'\n    )}\n    role=\"navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-header\">\n        <button\n          type=\"button\"\n          className=\"navbar-toggle\"\n          data-toggle=\"collapse\"\n          data-target=\"#navigation\"\n        >\n          <span className=\"sr-only\">Toggle navigation</span>\n          <span className=\"icon-bar\" />\n          <span className=\"icon-bar\" />\n          <span className=\"icon-bar\" />\n        </button>\n        <Link to=\"/\" className=\"navbar-brand\">\n          {siteTitle}\n        </Link>\n      </div>\n      <div className=\"collapse navbar-collapse\" id=\"navigation\">\n        <ul className=\"nav navbar-nav navbar-right\">\n          <li>\n            <Link to=\"/blog\">Blog</Link>\n          </li>\n          <li>\n            <Link to=\"/about\">About</Link>\n          </li>\n          <li>\n            <Link to=\"/open-source\">Open Source</Link>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </nav>\n);\n\nNavbar.propTypes = {\n  siteTitle: PropTypes.string,\n  transparent: PropTypes.bool,\n};\n\nNavbar.defaultProps = {\n  siteTitle: ``,\n  transparent: false,\n};\n\nexport default Navbar;\n","import Navbar from './Navbar';\n\nexport default Navbar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Navbar from './Navbar';\nimport Breadcrumbs from './Breadcrumbs';\nimport '../../stylesheet/main.scss';\n\nconst Layout = ({ siteTitle, transparent, breadcrumbs, children }) => (\n  <>\n    <Navbar siteTitle={siteTitle} transparent={transparent} />\n    {breadcrumbs && breadcrumbs.length && (\n      <Breadcrumbs items={[{ title: siteTitle, path: '/' }, ...breadcrumbs]} />\n    )}\n    <div className=\"wrapper\">{children}</div>\n  </>\n);\n\nLayout.propTypes = {\n  transparent: PropTypes.bool,\n  siteTitle: PropTypes.string,\n  breadcrumbs: Breadcrumbs.propTypes.items,\n  children: PropTypes.node.isRequired,\n};\n\nLayout.defaultProps = {\n  siteTitle: '',\n  breadcrumbs: [],\n  transparent: false,\n};\n\nexport default Layout;\n","import React from 'react';\n\nimport { getSiteTitle } from './LayoutData';\nimport Layout from './Layout';\n\nconst Component = props => <Layout {...props} siteTitle={getSiteTitle()} />;\n\nexport default Component;\n","import { useStaticQuery, graphql } from 'gatsby';\n\nexport const getSiteTitle = () =>\n  useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `).site.siteMetadata.title;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\n\nconst BreadcrumbItem = ({ title, path }) => (\n  <li>\n    <Link to={path}>{title}</Link>\n  </li>\n);\n\nBreadcrumbItem.propTypes = {\n  title: PropTypes.string,\n  path: PropTypes.string,\n};\n\nBreadcrumbItem.defaultProps = {\n  title: '',\n  path: '',\n};\n\nexport default BreadcrumbItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport BreadcrumbItem from './BreadcrumbItem';\n\nconst Breadcrumbs = ({ items }) => (\n  <nav className=\"breadcrumbs\">\n    <ol className=\"breadcrumb\" style={{ margin: 0 }}>\n      {items.map(item => (\n        <BreadcrumbItem key={item.path} {...item} />\n      ))}\n    </ol>\n  </nav>\n);\n\nBreadcrumbs.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      ...Breadcrumbs.propTypes,\n    })\n  ).isRequired,\n};\n\nexport default Breadcrumbs;\n","import Breadcrumbs from './Breadcrumbs';\n\nexport default Breadcrumbs;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}