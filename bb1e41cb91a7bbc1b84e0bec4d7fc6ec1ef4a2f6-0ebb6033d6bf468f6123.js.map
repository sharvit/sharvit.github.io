{"version":3,"file":"bb1e41cb91a7bbc1b84e0bec4d7fc6ec1ef4a2f6-0ebb6033d6bf468f6123.js","mappings":"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","sources":["webpack://avi-sharvit/./node_modules/classnames/index.js","webpack://avi-sharvit/../src/image-utils.ts","webpack://avi-sharvit/../src/components/hooks.ts","webpack://avi-sharvit/../src/components/picture.tsx","webpack://avi-sharvit/../src/components/layout-wrapper.tsx","webpack://avi-sharvit/../src/components/placeholder.tsx","webpack://avi-sharvit/../src/components/main-image.tsx","webpack://avi-sharvit/../src/components/gatsby-image.browser.tsx","webpack://avi-sharvit/../src/components/gatsby-image.server.tsx","webpack://avi-sharvit/../src/components/static-image.server.tsx","webpack://avi-sharvit/../src/components/static-image.tsx","webpack://avi-sharvit/./node_modules/gatsby-plugin-image/node_modules/camelcase/index.js","webpack://avi-sharvit/./src/components/Layout/components/CoverImage/CoverImage.tsx","webpack://avi-sharvit/./src/components/Layout/components/CoverImage/CoverImage.module.css","webpack://avi-sharvit/./src/components/Layout/LayoutContext.ts","webpack://avi-sharvit/./node_modules/react-feather/dist/icons/menu.js","webpack://avi-sharvit/./src/theme/ThemeHooks.ts","webpack://avi-sharvit/./src/theme/ThemeToggler/ThemeToggler.tsx","webpack://avi-sharvit/./src/theme/ThemeToggler/ThemeToggler.module.css","webpack://avi-sharvit/./src/components/Icons.tsx","webpack://avi-sharvit/./src/components/Layout/components/Navbar/Navbar.tsx","webpack://avi-sharvit/./src/components/Layout/components/Navbar/Navbar.module.css","webpack://avi-sharvit/./src/components/Layout/components/Breadcrumbs/BreadcrumbItem.tsx","webpack://avi-sharvit/./src/components/Layout/components/Breadcrumbs/Breadcrumbs.tsx","webpack://avi-sharvit/./src/components/Layout/components/Breadcrumbs/Breadcrumbs.module.css","webpack://avi-sharvit/./src/components/Layout/Layout.tsx","webpack://avi-sharvit/./src/components/Layout/Layout.module.css","webpack://avi-sharvit/./src/components/Section/Section.tsx","webpack://avi-sharvit/./src/components/Section/Section.module.css","webpack://avi-sharvit/./src/components/Seo.tsx","webpack://avi-sharvit/./src/profile/hooks/useHomeCoverImage.ts","webpack://avi-sharvit/./src/profile/hooks/useAboutCoverImage.ts","webpack://avi-sharvit/./src/profile/hooks/useShortAboutHTML.ts","webpack://avi-sharvit/./src/profile/hooks/useAuthorProfile.ts","webpack://avi-sharvit/./src/profile/hooks/useSocialLinks.ts","webpack://avi-sharvit/./src/profile/hooks/useAuthorCV.tsx","webpack://avi-sharvit/./node_modules/react-feather/dist/icons/twitter.js","webpack://avi-sharvit/./node_modules/react-feather/dist/icons/mail.js","webpack://avi-sharvit/./src/profile/components/SocialLinks/SocialLinkItem.tsx","webpack://avi-sharvit/./src/profile/components/SocialLinks/hooks.ts","webpack://avi-sharvit/./src/profile/components/SocialLinks/SocialLinks.module.css","webpack://avi-sharvit/./src/profile/components/SocialLinks/SocialLinks.tsx","webpack://avi-sharvit/./src/profile/components/ProfileSection/ProfileSection.tsx","webpack://avi-sharvit/./src/profile/components/ProfileSection/ProfileSection.module.css","webpack://avi-sharvit/./src/profile/components/BioSection/BioSection.tsx","webpack://avi-sharvit/./src/profile/components/BioSection/BioSection.module.css","webpack://avi-sharvit/./src/pages/page.module.css"],"sourcesContent":["/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n  'use strict';\n\n  var hasOwn = {}.hasOwnProperty;\n  var nativeCodeString = '[native code]';\n  function classNames() {\n    var classes = [];\n    for (var i = 0; i < arguments.length; i++) {\n      var arg = arguments[i];\n      if (!arg) continue;\n      var argType = typeof arg;\n      if (argType === 'string' || argType === 'number') {\n        classes.push(arg);\n      } else if (Array.isArray(arg)) {\n        if (arg.length) {\n          var inner = classNames.apply(null, arg);\n          if (inner) {\n            classes.push(inner);\n          }\n        }\n      } else if (argType === 'object') {\n        if (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n          classes.push(arg.toString());\n          continue;\n        }\n        for (var key in arg) {\n          if (hasOwn.call(arg, key) && arg[key]) {\n            classes.push(key);\n          }\n        }\n      }\n    }\n    return classes.join(' ');\n  }\n  if (typeof module !== 'undefined' && module.exports) {\n    classNames.default = classNames;\n    module.exports = classNames;\n  } else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n    // register as 'classnames', consistent with npm package name\n    define('classnames', [], function () {\n      return classNames;\n    });\n  } else {\n    window.classNames = classNames;\n  }\n})();","import camelCase from \"camelcase\"\nimport type { IGatsbyImageData } from \"./index\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  outputPixelDensities?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.slice(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(`\nThe requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* global GATSBY___IMAGE */\nimport { generateImageData, EVERY_BREAKPOINT } from \"../image-utils\"\nimport type { CSSProperties, HTMLAttributes, ImgHTMLAttributes } from \"react\"\nimport type { Node } from \"gatsby\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport type {\n  IGatsbyImageHelperArgs,\n  Layout,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type IGatsbyImageParent<T = never> = T & {\n  gatsbyImage: IGatsbyImageData\n}\nexport type FileNode = Partial<Node> & {\n  childImageSharp?: IGatsbyImageDataParent<Partial<Node>>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nconst isGatsbyImageParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageParent<T> | any\n): node is IGatsbyImageParent<T> => Boolean(node?.gatsbyImage)\n\nexport type ImageDataLike =\n  | FileNode\n  | IGatsbyImageDataParent\n  | IGatsbyImageParent\n  | IGatsbyImageData\n\nexport const getImage = (\n  node: ImageDataLike | null\n): IGatsbyImageData | undefined => {\n  // This checks both for gatsbyImageData and gatsbyImage\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  // gatsbyImageData GraphQL field\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  // gatsbyImage GraphQL field for Gatsby's Image CDN service\n  if (isGatsbyImageParent(node)) {\n    return node.gatsbyImage\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n    />\n  )\n}\n\nexport const Picture: React.FC<PictureProps> = function Picture({\n  fallback,\n  sources = [],\n  shouldLoad = true,\n  ...props\n}) {\n  const sizes = props.sizes || fallback?.sizes\n  const fallbackImage = (\n    <Image {...props} {...fallback} sizes={sizes} shouldLoad={shouldLoad} />\n  )\n\n  if (!sources.length) {\n    return fallbackImage\n  }\n\n  return (\n    <picture>\n      {sources.map(({ media, srcSet, type }) => (\n        <source\n          key={`${media}-${type}-${srcSet}`}\n          type={type}\n          media={media}\n          srcSet={shouldLoad ? srcSet : undefined}\n          data-srcset={!shouldLoad ? srcSet : undefined}\n          sizes={sizes}\n        />\n      ))}\n      {fallbackImage}\n    </picture>\n  )\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React, { Fragment, FunctionComponent } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n\n      // also hide the placeholder\n      mainImage.parentNode.parentNode.querySelector('[data-placeholder-image]').style.opacity = 0;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer = ``\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg height='${height}' width='${width}' xmlns='http://www.w3.org/2000/svg' version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg height='${height}' width='${width}' xmlns='http://www.w3.org/2000/svg' version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<ILayoutWrapperProps> =\n  function LayoutWrapper({ children, ...props }) {\n    return (\n      <Fragment>\n        <Sizer {...props} />\n        {children}\n\n        {SERVER ? <NativeScriptLoading /> : null}\n      </Fragment>\n    )\n  }\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage: React.FC<PictureProps> = function MainImage(props) {\n  return (\n    <>\n      <Picture {...props} />\n      <noscript>\n        <Picture {...props} shouldLoad={true} />\n      </noscript>\n    </>\n  )\n}\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import {\n  createElement,\n  memo,\n  useMemo,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n} from \"react\"\nimport {\n  getWrapperProps,\n  gatsbyImageIsInstalled,\n  hasNativeLazyLoadSupport,\n} from \"./hooks\"\nimport { getSizer } from \"./layout-wrapper\"\nimport { propTypes } from \"./gatsby-image.server\"\nimport type {\n  FC,\n  ElementType,\n  FunctionComponent,\n  ImgHTMLAttributes,\n  CSSProperties,\n  ReactEventHandler,\n} from \"react\"\nimport type { renderImageToString } from \"./lazy-hydrate\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { Layout } from \"../image-utils\"\n\nconst imageCache = new Set<string>()\nlet renderImageToStringPromise\nlet renderImage: typeof renderImageToString | undefined\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface GatsbyImageProps\n  extends Omit<\n    ImgHTMLAttributes<HTMLImageElement>,\n    \"placeholder\" | \"onLoad\" | \"src\" | \"srcSet\" | \"width\" | \"height\"\n  > {\n  alt: string\n  as?: ElementType\n  className?: string\n  class?: string\n  imgClassName?: string\n  image: IGatsbyImageData\n  imgStyle?: CSSProperties\n  backgroundColor?: string\n  objectFit?: CSSProperties[\"objectFit\"]\n  objectPosition?: CSSProperties[\"objectPosition\"]\n  onLoad?: (props: { wasCached: boolean }) => void\n  onError?: ReactEventHandler<HTMLImageElement>\n  onStartLoad?: (props: { wasCached: boolean }) => void\n}\n\nexport interface IGatsbyImageData {\n  layout: Layout\n  width: number\n  height: number\n  backgroundColor?: string\n  images: Pick<MainImageProps, \"sources\" | \"fallback\">\n  placeholder?: Pick<PlaceholderProps, \"sources\" | \"fallback\">\n}\n\nconst GatsbyImageHydrator: FC<GatsbyImageProps> = function GatsbyImageHydrator({\n  as = `div`,\n  image,\n  style,\n  backgroundColor,\n  className,\n  class: preactClass,\n  onStartLoad,\n  onLoad,\n  onError,\n  ...props\n}) {\n  const { width, height, layout } = image\n  const {\n    style: wStyle,\n    className: wClass,\n    ...wrapperProps\n  } = getWrapperProps(width, height, layout)\n  const root = useRef<HTMLElement>()\n  const cacheKey = useMemo(() => JSON.stringify(image.images), [image.images])\n\n  // Preact uses class instead of className so we need to check for both\n  if (preactClass) {\n    className = preactClass\n  }\n\n  const sizer = getSizer(layout, width, height)\n\n  useEffect(() => {\n    if (!renderImageToStringPromise) {\n      renderImageToStringPromise = import(`./lazy-hydrate`).then(\n        ({ renderImageToString, swapPlaceholderImage }) => {\n          renderImage = renderImageToString\n\n          return {\n            renderImageToString,\n            swapPlaceholderImage,\n          }\n        }\n      )\n    }\n\n    // The plugin image component is a bit special where if it's server-side rendered, we add extra script tags to support lazy-loading without\n    // In this case we stop hydration but fire the correct events.\n    const ssrImage = root.current.querySelector(\n      `[data-gatsby-image-ssr]`\n    ) as HTMLImageElement\n    if (ssrImage && hasNativeLazyLoadSupport()) {\n      if (ssrImage.complete) {\n        // Trigger onStartload and onLoad events\n        onStartLoad?.({\n          wasCached: true,\n        })\n        onLoad?.({\n          wasCached: true,\n        })\n\n        // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n        setTimeout(() => {\n          ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n        }, 0)\n      } else {\n        onStartLoad?.({\n          wasCached: true,\n        })\n\n        ssrImage.addEventListener(`load`, function onLoadListener() {\n          ssrImage.removeEventListener(`load`, onLoadListener)\n\n          onLoad?.({\n            wasCached: true,\n          })\n          // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n          setTimeout(() => {\n            ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n          }, 0)\n        })\n      }\n\n      imageCache.add(cacheKey)\n\n      return\n    }\n\n    if (renderImage && imageCache.has(cacheKey)) {\n      return\n    }\n\n    let animationFrame\n    let cleanupCallback\n    renderImageToStringPromise.then(\n      ({ renderImageToString, swapPlaceholderImage }) => {\n        if (!root.current) {\n          return\n        }\n\n        root.current.innerHTML = renderImageToString({\n          isLoading: true,\n          isLoaded: imageCache.has(cacheKey),\n          image,\n          ...props,\n        })\n\n        if (!imageCache.has(cacheKey)) {\n          animationFrame = requestAnimationFrame(() => {\n            if (root.current) {\n              cleanupCallback = swapPlaceholderImage(\n                root.current,\n                cacheKey,\n                imageCache,\n                style,\n                onStartLoad,\n                onLoad,\n                onError\n              )\n            }\n          })\n        }\n      }\n    )\n\n    // eslint-disable-next-line consistent-return\n    return (): void => {\n      if (animationFrame) {\n        cancelAnimationFrame(animationFrame)\n      }\n      if (cleanupCallback) {\n        cleanupCallback()\n      }\n    }\n  }, [image])\n\n  // useLayoutEffect is ran before React commits to the DOM. This allows us to make sure our HTML is using our cached image version\n  useLayoutEffect(() => {\n    if (imageCache.has(cacheKey) && renderImage) {\n      root.current.innerHTML = renderImage({\n        isLoading: imageCache.has(cacheKey),\n        isLoaded: imageCache.has(cacheKey),\n        image,\n        ...props,\n      })\n\n      // Trigger onStartload and onLoad events\n      onStartLoad?.({\n        wasCached: true,\n      })\n      onLoad?.({\n        wasCached: true,\n      })\n    }\n  }, [image])\n\n  // By keeping all props equal React will keep the component in the DOM\n  return createElement(as, {\n    ...wrapperProps,\n    style: {\n      ...wStyle,\n      ...style,\n      backgroundColor,\n    },\n    className: `${wClass}${className ? ` ${className}` : ``}`,\n    ref: root,\n    dangerouslySetInnerHTML: {\n      __html: sizer,\n    },\n    suppressHydrationWarning: true,\n  })\n}\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> = memo(\n  function GatsbyImage(props) {\n    if (!props.image) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(`[gatsby-plugin-image] Missing image prop`)\n      }\n\n      return null\n    }\n\n    if (!gatsbyImageIsInstalled() && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `[gatsby-plugin-image] You're missing out on some cool performance features. Please add \"gatsby-plugin-image\" to your gatsby-config.js`\n      )\n    }\n\n    return createElement(GatsbyImageHydrator, props)\n  }\n)\n\nGatsbyImage.propTypes = propTypes\nGatsbyImage.displayName = `GatsbyImage`\n","import React from \"react\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\nimport type { FunctionComponent, WeakValidationMap } from \"react\"\nimport type { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as = `div`,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n\n    if (preactClass) {\n      className = preactClass\n    }\n\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return React.createElement(\n      as,\n      {\n        ...wrapperProps,\n        style: {\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        },\n        className: `${wClass}${className ? ` ${className}` : ``}`,\n      },\n      <LayoutWrapper layout={layout} width={width} height={height}>\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            false,\n            layout,\n            width,\n            height,\n            placeholderBackgroundColor,\n            objectFit,\n            objectPosition\n          )}\n        />\n\n        <MainImage\n          data-gatsby-image-ssr=\"\"\n          className={imgClassName}\n          {...(props as Omit<\n            MainImageProps,\n            \"images\" | \"fallback\" | \"onError\" | \"onLoad\"\n          >)}\n          // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n          {...getMainProps(\n            loading === `eager`,\n            false,\n            cleanedImages,\n            loading,\n            imgStyle\n          )}\n        />\n      </LayoutWrapper>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\n\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    breakpoints,\n    outputPixelDensities,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import {\n  GatsbyImage as GatsbyImageBrowser,\n  IGatsbyImageData,\n} from \"./gatsby-image.browser\"\nimport React from \"react\"\nimport {\n  _getStaticImage,\n  propTypes,\n  IStaticImageProps,\n} from \"./static-image.server\"\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageBrowser)\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","'use strict';\n\nconst preserveCamelCase = string => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && /[a-zA-Z]/.test(character) && character.toUpperCase() === character) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && /[a-zA-Z]/.test(character) && character.toLowerCase() === character) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = character.toLowerCase() === character && character.toUpperCase() !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = character.toUpperCase() === character && character.toLowerCase() !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = Object.assign({\n\t\tpascalCase: false\n\t}, options);\n\n\tconst postProcess = x => options.pascalCase ? x.charAt(0).toUpperCase() + x.slice(1) : x;\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? input.toUpperCase() : input.toLowerCase();\n\t}\n\n\tconst hasUpperCase = input !== input.toLowerCase();\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input);\n\t}\n\n\tinput = input\n\t\t.replace(/^[_.\\- ]+/, '')\n\t\t.toLowerCase()\n\t\t.replace(/[_.\\- ]+(\\w|$)/g, (_, p1) => p1.toUpperCase())\n\t\t.replace(/\\d+(\\w|$)/g, m => m.toUpperCase());\n\n\treturn postProcess(input);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { graphql } from 'gatsby';\nimport { getImage, GatsbyImage, IGatsbyImageData } from 'gatsby-plugin-image';\n\nimport * as styles from './CoverImage.module.css';\n\n// eslint-disable-next-line no-undef\nexport type CoverImageSharp = Queries.CoverImageSharpFragment;\n\nexport interface CoverImageProps {\n  alt: string;\n  image: CoverImageSharp;\n  className?: string;\n}\n\nexport const query = graphql`\n  fragment CoverImageSharp on ImageSharp {\n    gatsbyImageData(layout: FULL_WIDTH)\n  }\n`;\n\nexport const CoverImage = ({ alt, image, className }: CoverImageProps) => {\n  return (\n    <GatsbyImage\n      className={classNames(styles.coverImage, className)}\n      image={getImage(image) as IGatsbyImageData}\n      alt={alt}\n    />\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport var coverImage = \"CoverImage-module--coverImage--48126\";","import { createContext } from 'react';\n\nexport interface ILayoutContext {\n  navigation: {\n    displayNavigation: boolean;\n    toggleNavigation: () => void;\n  };\n}\n\nexport const DEFAULT_LAYOUT_CONTEXT: ILayoutContext = {\n  navigation: {\n    displayNavigation: false,\n    toggleNavigation: () => undefined,\n  },\n};\n\nexport const LayoutContext = createContext<ILayoutContext>(\n  DEFAULT_LAYOUT_CONTEXT\n);\n","function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport React, { forwardRef } from 'react';\nvar Menu = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n    color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n    _ref$size = _ref.size,\n    size = _ref$size === void 0 ? 24 : _ref$size,\n    rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"3\",\n    y1: \"12\",\n    x2: \"21\",\n    y2: \"12\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"3\",\n    y1: \"6\",\n    x2: \"21\",\n    y2: \"6\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"3\",\n    y1: \"18\",\n    x2: \"21\",\n    y2: \"18\"\n  }));\n});\nMenu.displayName = 'Menu';\nexport default Menu;","import { useCallback, useContext } from 'react';\nimport { ThemeContext } from './ThemeContext';\n\nexport const useThemeContext = () => useContext(ThemeContext);\n\nexport const useColorScheme = () => useThemeContext().colorScheme;\n\nexport const useColorSchemeToggler = () => {\n  const { colorScheme, setColorScheme } = useThemeContext();\n\n  return useCallback(() => {\n    setColorScheme(colorScheme === 'dark' ? 'light' : 'dark');\n  }, [colorScheme, setColorScheme]);\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { useColorSchemeToggler } from '../ThemeHooks';\n\nimport * as styles from './ThemeToggler.module.css';\n\nexport interface IThemeToggler {\n  className?: string;\n}\n\nexport const ThemeToggler = ({ className }: IThemeToggler) => {\n  const toggleColorScheme = useColorSchemeToggler();\n\n  return (\n    <button\n      className={classNames(styles.themeToggler, className)}\n      title=\"Toggles light & dark\"\n      onClick={toggleColorScheme}\n    >\n      <svg aria-hidden=\"true\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        {/* moon */}\n        <mask id=\"moon\" className={styles.moon}>\n          <rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" fill=\"white\" />\n          <circle cx=\"40\" cy=\"8\" r=\"11\" fill=\"black\" />\n        </mask>\n        {/* sun */}\n        <circle\n          className={styles.sun}\n          cx=\"12\"\n          cy=\"12\"\n          r=\"11\"\n          mask=\"url(#moon)\"\n        />\n        {/* sun beams */}\n        <g className={styles.sunBeams}>\n          <line x1=\"12\" y1=\"1\" x2=\"12\" y2=\"3\" />\n          <line x1=\"12\" y1=\"21\" x2=\"12\" y2=\"23\" />\n          <line x1=\"4.22\" y1=\"4.22\" x2=\"5.64\" y2=\"5.64\" />\n          <line x1=\"18.36\" y1=\"18.36\" x2=\"19.78\" y2=\"19.78\" />\n          <line x1=\"1\" y1=\"12\" x2=\"3\" y2=\"12\" />\n          <line x1=\"21\" y1=\"12\" x2=\"23\" y2=\"12\" />\n          <line x1=\"4.22\" y1=\"19.78\" x2=\"5.64\" y2=\"18.36\" />\n          <line x1=\"18.36\" y1=\"5.64\" x2=\"19.78\" y2=\"4.22\" />\n        </g>\n      </svg>\n    </button>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport var moon = \"ThemeToggler-module--moon--30db8\";\nexport var sun = \"ThemeToggler-module--sun--3041b\";\nexport var sunBeams = \"ThemeToggler-module--sun-beams--98fde\";\nexport var themeToggler = \"ThemeToggler-module--theme-toggler--596ca\";","import React from 'react';\n\nexport const GithubIcon = () => (\n  <svg fill=\"currentColor\" viewBox=\"0 0 16 16\" aria-hidden=\"true\">\n    <path d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z\" />\n  </svg>\n);\n\nexport const StackOverflowIcon = () => (\n  <svg fill=\"currentColor\" viewBox=\"0 0 19 22\" aria-hidden=\"true\">\n    <path d=\"M16 20v-6h2v8H0v-8h2v6h14Z\" />\n    <path d=\"m12.72 0-1.57 1.17L17 9.05l1.57-1.18L12.72 0ZM4 18h10v-2H4v2Zm11.4-7.08L7.86 4.64l1.25-1.5 7.54 6.28-1.25 1.5Zm-10-1.91 8.9 4.14.82-1.78-8.9-4.14L5.4 9Zm8.63 6.27-9.9-1.67.4-1.92 9.63 1.92-.13 1.67Z\" />\n  </svg>\n);\n","import React, { useContext } from 'react';\nimport classNames from 'classnames';\nimport { Link } from 'gatsby';\nimport { Menu } from 'react-feather';\n\nimport { ThemeToggler } from '../../../../theme/ThemeToggler';\nimport { GithubIcon } from '../../../Icons';\nimport { LayoutContext } from '../../LayoutContext';\n\nimport * as styles from './Navbar.module.css';\n\nexport interface NavbarProps {\n  transparent?: boolean;\n}\n\nexport const Navbar = ({ transparent }: NavbarProps) => {\n  const {\n    navigation: { displayNavigation, toggleNavigation },\n  } = useContext(LayoutContext);\n\n  return (\n    <nav\n      role=\"navigation\"\n      className={classNames(styles.navbar, {\n        [styles.transparent]: transparent === true,\n        [styles.displayNavigation]: displayNavigation === true,\n      })}\n    >\n      <button\n        type=\"button\"\n        className={styles.toggler}\n        onClick={() => toggleNavigation()}\n      >\n        <Menu />\n      </button>\n\n      <ul className={styles.linkList}>\n        <li>\n          <Link to=\"/\">Home</Link>\n        </li>\n        <li>\n          <Link to=\"/blog\">Blog</Link>\n        </li>\n        <li>\n          <Link to=\"/open-source\">Open Source</Link>\n        </li>\n        <li>\n          <Link to=\"/about\">About</Link>\n        </li>\n      </ul>\n\n      <ul className={styles.iconLists}>\n        <li>\n          <ThemeToggler />\n        </li>\n        <li>\n          <a href=\"https://github.com/sharvit\">\n            <GithubIcon />\n          </a>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport var displayNavigation = \"Navbar-module--display-navigation--22afc\";\nexport var iconLists = \"Navbar-module--icon-lists--76927\";\nexport var linkList = \"Navbar-module--link-list--faed9\";\nexport var navbar = \"Navbar-module--navbar--fddbe\";\nexport var titleLink = \"Navbar-module--title-link--4e628\";\nexport var toggler = \"Navbar-module--toggler--74c57\";\nexport var transparent = \"Navbar-module--transparent--f7747\";","import React from 'react';\nimport { Link } from 'gatsby';\n\nexport interface IBreadcrumbItem {\n  title: string;\n  path: string;\n}\n\nexport const BreadcrumbItem = ({ title, path }: IBreadcrumbItem) => (\n  <li itemScope itemType=\"http://data-vocabulary.org/Breadcrumb\">\n    <Link to={path} itemProp=\"url\">\n      <span itemProp=\"title\">{title}</span>\n    </Link>\n  </li>\n);\n","import React from 'react';\n\nimport { IBreadcrumbItem, BreadcrumbItem } from './BreadcrumbItem';\nimport * as styles from './Breadcrumbs.module.css';\n\nexport interface IBreadcrumbs {\n  items: IBreadcrumbItem[];\n}\n\nexport const Breadcrumbs = ({ items }: IBreadcrumbs) => (\n  <nav className={styles.breadcrumbs}>\n    <ol style={{ margin: 0 }}>\n      {items.map((item) => (\n        <BreadcrumbItem key={item.path} {...item} />\n      ))}\n    </ol>\n  </nav>\n);\n","// extracted by mini-css-extract-plugin\nexport var breadcrumbs = \"Breadcrumbs-module--breadcrumbs--0d70e\";","import React, { useState, ReactNode, useCallback } from 'react';\nimport classNames from 'classnames';\n\nimport { LayoutContext, DEFAULT_LAYOUT_CONTEXT } from './LayoutContext';\nimport {\n  Navbar,\n  Breadcrumbs,\n  IBreadcrumbItem,\n  CoverImage,\n  CoverImageProps,\n} from './components';\nimport { useAuthorProfile } from '../../profile';\n\nimport * as styles from './Layout.module.css';\n\nexport interface ILayout {\n  coverImage?: CoverImageProps;\n  breadcrumbs?: IBreadcrumbItem[];\n  transparent?: boolean;\n  className?: string;\n  children?: ReactNode;\n}\n\nexport const Layout = ({\n  coverImage,\n  breadcrumbs,\n  transparent,\n  className,\n  children,\n}: ILayout) => {\n  const author = useAuthorProfile();\n\n  // display/hide navigation menu\n  const [displayNavigation, setDisplayNavigation] = useState(\n    DEFAULT_LAYOUT_CONTEXT.navigation.displayNavigation\n  );\n\n  // toggle navigation menu\n  const toggleNavigation = useCallback(\n    () => setDisplayNavigation(!displayNavigation),\n    [setDisplayNavigation, displayNavigation]\n  );\n\n  return (\n    <LayoutContext.Provider\n      value={{ navigation: { displayNavigation, toggleNavigation } }}\n    >\n      <header\n        className={classNames(styles.layoutHeader, {\n          [styles.transparent]: transparent,\n        })}\n      >\n        <Navbar transparent={transparent} />\n        {coverImage && (\n          <CoverImage\n            {...coverImage}\n            className={classNames(styles.coverImage, coverImage.className)}\n          />\n        )}\n        {breadcrumbs && breadcrumbs.length > 0 && (\n          <Breadcrumbs\n            items={[{ title: author.name, path: '/' }, ...breadcrumbs]}\n          />\n        )}\n      </header>\n      <main className={className}>{children}</main>\n    </LayoutContext.Provider>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport var coverImage = \"Layout-module--cover-image--e8402\";\nexport var layoutHeader = \"Layout-module--layout-header--34fb2\";\nexport var transparent = \"Layout-module--transparent--e694b\";","import React from 'react';\nimport classNames from 'classnames';\nimport { Link } from 'gatsby';\n\nimport * as styles from './Section.module.css';\n\nexport interface ISectionProps {\n  className?: string;\n  title?: string;\n  link?: string;\n  linkExternal?: boolean;\n  footer?: string;\n  children?: React.ReactNode;\n}\n\nexport const Section = ({\n  className,\n  title,\n  link,\n  linkExternal,\n  footer,\n  children,\n}: ISectionProps) => {\n  return (\n    <section className={classNames(styles.section, className)}>\n      {title && (\n        <header className={styles.sectionHeader}>\n          {link ? (\n            <Link to={link}>\n              <h2>{title}</h2>\n            </Link>\n          ) : (\n            <h2>{title}</h2>\n          )}\n        </header>\n      )}\n      {children}\n      {footer && (\n        <footer className={styles.sectionFooter}>\n          {link ? (\n            linkExternal ? (\n              <a href={link} target=\"_blank\" rel=\"noopener noreferrer\">\n                {footer}\n              </a>\n            ) : (\n              <Link to={link}>{footer}</Link>\n            )\n          ) : (\n            footer\n          )}\n        </footer>\n      )}\n    </section>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport var section = \"Section-module--section--2dbfa\";\nexport var sectionFooter = \"Section-module--section-footer--1d388\";\nexport var sectionHeader = \"Section-module--section-header--b1c0b\";","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport { useAuthorProfile } from '../profile/hooks';\n\n// eslint-disable-next-line no-undef\nexport type RawShortBioQuery = Queries.RawShortBioQuery;\n\nexport interface SeoMeta {\n  name?: string;\n  property?: string;\n  content: string;\n}\n\nexport interface SeoProps {\n  title?: string;\n  description?: string;\n  meta?: SeoMeta[];\n}\n\nexport const Seo = ({ title, description, meta = [] }: SeoProps) => {\n  const { file } = useStaticQuery<RawShortBioQuery>(graphql`\n    query RawShortBio {\n      file(sourceInstanceName: { eq: \"bio\" }, name: { eq: \"short-bio\" }) {\n        childMarkdownRemark {\n          rawMarkdownBody\n        }\n      }\n    }\n  `);\n\n  const profile = useAuthorProfile();\n\n  const metaTitle = title\n    ? `${profile.name} | ${title}`\n    : `${profile.name} | ${profile.title}`;\n\n  const metaDescription =\n    description || (file?.childMarkdownRemark?.rawMarkdownBody as string);\n\n  const metaElements: SeoMeta[] = [\n    {\n      name: `description`,\n      content: metaDescription,\n    },\n    {\n      property: `og:title`,\n      content: metaTitle,\n    },\n    {\n      property: `og:description`,\n      content: metaDescription,\n    },\n    {\n      property: 'og:image',\n      content: profile.avatar,\n    },\n    {\n      property: `og:type`,\n      content: `website`,\n    },\n    {\n      name: `twitter:card`,\n      content: `summary`,\n    },\n    {\n      name: `twitter:site`,\n      content: profile.twitter,\n    },\n    {\n      name: `twitter:creator`,\n      content: profile.twitter,\n    },\n    ...meta,\n  ];\n\n  return (\n    <>\n      <title>{metaTitle}</title>\n      {metaElements.map(({ name, property, content }) => (\n        <meta\n          key={name || property}\n          name={name}\n          property={property}\n          content={content}\n        />\n      ))}\n    </>\n  );\n};\n","import { useStaticQuery, graphql } from 'gatsby';\n\nimport { CoverImageSharp } from '../../components/Layout/components/CoverImage';\n\n// eslint-disable-next-line no-undef\nexport type HomeCoverImageQuery = Queries.HomeCoverImageQuery;\n\nexport const useHomeCoverImage = (): CoverImageSharp | undefined =>\n  useStaticQuery<HomeCoverImageQuery>(graphql`\n    query HomeCoverImage {\n      file(\n        sourceInstanceName: { eq: \"images\" }\n        name: { eq: \"home-cover-background\" }\n      ) {\n        childImageSharp {\n          ...CoverImageSharp\n        }\n      }\n    }\n  `).file?.childImageSharp || undefined;\n","import { useStaticQuery, graphql } from 'gatsby';\n\nimport { CoverImageSharp } from '../../components/Layout/components/CoverImage';\n\n// eslint-disable-next-line no-undef\nexport type AboutCoverImageQuery = Queries.AboutCoverImageQuery;\n\nexport const useAboutCoverImage = (): CoverImageSharp | undefined =>\n  useStaticQuery<AboutCoverImageQuery>(graphql`\n    query AboutCoverImage {\n      file(\n        sourceInstanceName: { eq: \"images\" }\n        name: { eq: \"about-page-cover-background\" }\n      ) {\n        childImageSharp {\n          ...CoverImageSharp\n        }\n      }\n    }\n  `).file?.childImageSharp || undefined;\n","import { useStaticQuery, graphql } from 'gatsby';\n\n// eslint-disable-next-line no-undef\nexport type ShortAboutMarkdownQuery = Queries.ShortAboutMarkdownQuery;\n\nexport const useShortAboutHTML = (): string =>\n  useStaticQuery<ShortAboutMarkdownQuery>(graphql`\n    query ShortAboutMarkdown {\n      file(sourceInstanceName: { eq: \"bio\" }, name: { eq: \"short-bio\" }) {\n        childMarkdownRemark {\n          html\n        }\n      }\n    }\n  `).file?.childMarkdownRemark?.html || '';\n","import { useStaticQuery, graphql } from 'gatsby';\nimport { IAuthorProfile } from '../../../content/bio/types';\n\n// eslint-disable-next-line no-undef\nexport type AuthorProfileQuery = Queries.AuthorProfileQuery;\n\nexport const mapAuthorProfileQuery = (\n  data: AuthorProfileQuery\n): IAuthorProfile => {\n  const { profile } = data.file?.childYaml || {};\n\n  return {\n    name: profile?.name || '',\n    nickname: profile?.nickname || '',\n    title: profile?.title || '',\n    website: profile?.website || '',\n    phone: profile?.phone || '',\n    email: profile?.email || '',\n    github: profile?.github || '',\n    twitter: profile?.twitter || '',\n    stackoverflow: profile?.stackoverflow?.toString() || '',\n    disqus: profile?.disqus || '',\n    avatar: profile?.avatar || '',\n  };\n};\n\nexport const useAuthorProfile = (): IAuthorProfile => {\n  const data = useStaticQuery<AuthorProfileQuery>(graphql`\n    query AuthorProfile {\n      file(sourceInstanceName: { eq: \"bio\" }, name: { eq: \"author\" }) {\n        childYaml {\n          profile {\n            name\n            nickname\n            title\n            website\n            email\n            phone\n            github\n            twitter\n            stackoverflow\n            disqus\n            avatar\n          }\n        }\n      }\n    }\n  `);\n\n  return mapAuthorProfileQuery(data);\n};\n","import { useMemo } from 'react';\n\nimport { ISocialLink } from '../components/SocialLinks/types';\nimport { useAuthorProfile } from './useAuthorProfile';\n\nexport const useSocialLinks = (): ISocialLink[] => {\n  const profile = useAuthorProfile();\n\n  return useMemo(\n    () => [\n      {\n        type: 'github',\n        href: `https://github.com/${profile.github}`,\n        label: profile.github,\n      },\n      {\n        type: 'twitter',\n        href: `https://www.twitter.com/${profile.twitter}`,\n        label: profile.twitter,\n      },\n      {\n        type: 'stackoverflow',\n        href: `https://stackoverflow.com/users/${profile.stackoverflow}`,\n        label: profile.nickname,\n      },\n      {\n        type: 'email',\n        href: `mailto:${profile.email}`,\n        label: profile.email,\n      },\n    ],\n    [profile]\n  );\n};\n","import { useStaticQuery, graphql } from 'gatsby';\n\n// eslint-disable-next-line no-undef\nexport type AuthorCVQuery = Queries.AuthorCVQuery;\n\nexport interface IAuthorExperience {\n  company: string;\n  position: string;\n  years: string;\n  tags: string[];\n  bulletPoints: string[];\n}\n\nexport interface IAuthorCV {\n  skills: string[];\n  experiences: IAuthorExperience[];\n}\n\nexport const mapAuthorCVQuery = (data: AuthorCVQuery): IAuthorCV => {\n  const { cv } = data.file?.childYaml || {};\n\n  return {\n    skills: cv?.skills?.trim().split(', ') || [],\n    experiences:\n      cv?.experiences?.map((e) => ({\n        company: e?.company || '',\n        position: e?.position || '',\n        years: e?.years || '',\n        tags: e?.tags?.trim().split(', ') || [],\n        bulletPoints: e?.bullet_points?.map((bp) => bp?.trim() || '') || [],\n      })) || [],\n  };\n};\n\nexport const useAuthorCV = (): IAuthorCV => {\n  const data = useStaticQuery<AuthorCVQuery>(graphql`\n    query AuthorCV {\n      file(sourceInstanceName: { eq: \"bio\" }, name: { eq: \"author\" }) {\n        childYaml {\n          cv {\n            skills\n            experiences {\n              company\n              position\n              years\n              tags\n              bullet_points\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  return mapAuthorCVQuery(data);\n};\n","function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport React, { forwardRef } from 'react';\nvar Twitter = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n    color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n    _ref$size = _ref.size,\n    size = _ref$size === void 0 ? 24 : _ref$size,\n    rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M23 3a10.9 10.9 0 0 1-3.14 1.53 4.48 4.48 0 0 0-7.86 3v1A10.66 10.66 0 0 1 3 4s-4 9 5 13a11.64 11.64 0 0 1-7 2c9 5 20 0 20-11.5a4.5 4.5 0 0 0-.08-.83A7.72 7.72 0 0 0 23 3z\"\n  }));\n});\nTwitter.displayName = 'Twitter';\nexport default Twitter;","function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport React, { forwardRef } from 'react';\nvar Mail = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n    color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n    _ref$size = _ref.size,\n    size = _ref$size === void 0 ? 24 : _ref$size,\n    rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z\"\n  }), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"22,6 12,13 2,6\"\n  }));\n});\nMail.displayName = 'Mail';\nexport default Mail;","import React from 'react';\nimport classNames from 'classnames';\n\nimport { ISocialLink } from './types';\nimport { useSocialLinkIcon, useSocialLinkClassName } from './hooks';\n\nimport * as styles from './SocialLinks.module.css';\n\nexport const SocialLinkItem = ({ type, href, label }: ISocialLink) => {\n  const Icon = useSocialLinkIcon(type);\n  const className = useSocialLinkClassName(type);\n\n  return (\n    <a href={href} className={classNames(styles.socialLink, className)}>\n      <Icon /> {label}\n    </a>\n  );\n};\n","import { useMemo } from 'react';\nimport { Twitter as TwitterIcon, Mail as MailIcon } from 'react-feather';\n\nimport { GithubIcon, StackOverflowIcon } from '../../../components';\nimport { SocialLinkType } from './types';\n\nimport * as styles from './SocialLinks.module.css';\n\nexport const useSocialLinkIcon = (type: SocialLinkType) => {\n  return useMemo(() => {\n    switch (type) {\n      case 'github':\n        return GithubIcon;\n      case 'twitter':\n        return TwitterIcon;\n      case 'stackoverflow':\n        return StackOverflowIcon;\n      case 'email':\n        return MailIcon;\n    }\n  }, [type]);\n};\n\nexport const useSocialLinkClassName = (type: SocialLinkType) => {\n  return useMemo(() => {\n    switch (type) {\n      case 'github':\n        return styles.githubLink;\n      case 'twitter':\n        return styles.twitterLink;\n      case 'stackoverflow':\n        return styles.stackOverflowLink;\n      case 'email':\n        return styles.emailLink;\n    }\n  }, [type]);\n};\n","// extracted by mini-css-extract-plugin\nexport var emailLink = \"SocialLinks-module--email-link--5b25e\";\nexport var githubLink = \"SocialLinks-module--github-link--a91f6\";\nexport var socialLink = \"SocialLinks-module--social-link--b709b\";\nexport var socialLinks = \"SocialLinks-module--social-links--a9b23\";\nexport var stackOverflowLink = \"SocialLinks-module--stack-overflow-link--21656\";\nexport var twitterLink = \"SocialLinks-module--twitter-link--50496\";","import React from 'react';\n\nimport { useSocialLinks } from '../../hooks';\nimport { SocialLinkItem } from './SocialLinkItem';\n\nimport * as styles from './SocialLinks.module.css';\n\nexport const SocialLinks = () => {\n  const socialLinks = useSocialLinks();\n\n  return (\n    <div className={styles.socialLinks}>\n      {socialLinks.map((link) => (\n        <SocialLinkItem key={link.type} {...link} />\n      ))}\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { Section } from '../../../components';\nimport { SocialLinks } from '../SocialLinks';\nimport { useAuthorProfile, useShortAboutHTML } from '../../hooks';\n\nimport * as styles from './ProfileSection.module.css';\n\nexport interface IPorfileSectionProps {\n  link?: string;\n  linkExternal?: boolean;\n  footer?: string;\n}\n\nexport const ProfileSection = ({\n  link = '/about',\n  linkExternal = false,\n  footer = '#full_bio',\n}: IPorfileSectionProps) => {\n  const profile = useAuthorProfile();\n  const aboutHTML = useShortAboutHTML();\n\n  const [firstName, lastName] = profile.name.split(' ');\n\n  return (\n    <Section\n      className={styles.profileSection}\n      link={link}\n      linkExternal={linkExternal}\n      footer={footer}\n    >\n      <img className={styles.avatar} src={profile.avatar} alt={profile.name} />\n      <h1>\n        {firstName}\n        <br />\n        {lastName}\n      </h1>\n      <h2>{profile.title}</h2>\n      <SocialLinks />\n      <div\n        className={styles.shortBio}\n        dangerouslySetInnerHTML={{ __html: aboutHTML }}\n      />\n    </Section>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport var avatar = \"ProfileSection-module--avatar--48194\";\nexport var fullBioLink = \"ProfileSection-module--full-bio-link--12621\";\nexport var profileSection = \"ProfileSection-module--profile-section--b4927\";\nexport var shortBio = \"ProfileSection-module--short-bio--8b50c\";","import React from 'react';\n\nimport { Section } from '../../../components';\nimport { useAuthorCV } from '../../hooks';\n\nimport * as styles from './BioSection.module.css';\n\nconst SkillsList = ({ skills }: { skills: string[] }) => (\n  <p className={styles.skills}>\n    {skills.map((skill) => (\n      <span key={skill} className={styles.skill}>\n        {skill}\n      </span>\n    ))}\n  </p>\n);\n\nexport const BioSection = () => {\n  const authorCV = useAuthorCV();\n\n  return (\n    <Section className={styles.bioSection}>\n      <div className={styles.skillsSection}>\n        <h3>Main Skills</h3>\n        <SkillsList skills={authorCV.skills} />\n      </div>\n      <hr />\n      {authorCV.experiences.map((e) => (\n        <div key={e.company} className={styles.experience}>\n          <h3>{e.position}</h3>\n          <h4>{e.company}</h4>\n          <p className={styles.years}>{e.years}</p>\n          <ul>\n            {e.bulletPoints.map((bp) => (\n              <li key={bp}>{bp}</li>\n            ))}\n          </ul>\n          <SkillsList skills={e.tags} />\n          <hr />\n        </div>\n      ))}\n    </Section>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport var bioSection = \"BioSection-module--bio-section--ecdd9\";\nexport var experience = \"BioSection-module--experience--9bebd\";\nexport var skill = \"BioSection-module--skill--bc8f1\";\nexport var skills = \"BioSection-module--skills--7ca8c\";\nexport var skillsSection = \"BioSection-module--skills-section--c0604\";\nexport var years = \"BioSection-module--years--8a73f\";","// extracted by mini-css-extract-plugin\nexport var fluidSection = \"page-module--fluid-section--99a21\";\nexport var page = \"page-module--page--77e66\";\nexport var pageAbout = \"page-module--page-about--a903a\";\nexport var pageFluid = \"page-module--page-fluid--1ab44\";\nexport var pageTitle = \"page-module--page-title--af1e9\";\nexport var pageTitleCentered = \"page-module--page-title-centered--0d998\";"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","includes","key","call","join","module","exports","default","height","node","images","_node$images","fallback","_node$images$fallback","src","Boolean","gatsbyImageData","gatsbyImage","childImageSharp","_node$childImageSharp","format","isLoading","isLoaded","loading","style","shouldLoad","opacity","placeholder","layout","width","backgroundColor","objectFit","objectPosition","wrapperStyle","position","top","left","bottom","right","transition","sources","fallbackImage","paddingTop","maxWidth","display","React","alt","role","a","children","props","Fragment","Sizer","t","srcSet","decoding","undefined","sizes","Image","map","media","type","propTypes","PropTypes","Picture","displayName","isRequired","Placeholder","_Picture$propTypes","propName","componentName","MainImage","rest","image","altValidator","Set","e","onError","as","className","preactClass","class","onStartLoad","onLoad","overflow","wStyle","wClass","wrapperProps","useRef","useMemo","JSON","stringify","sizer","useEffect","renderImageToStringPromise","import","then","renderImageToString","swapPlaceholderImage","renderImage","root","current","querySelector","ssrImage","hasNativeLazyLoadSupport","complete","wasCached","setTimeout","removeAttribute","addEventListener","removeEventListener","onLoadListener","imageCache","add","cacheKey","has","innerHTML","animationFrame","requestAnimationFrame","cleanupCallback","cancelAnimationFrame","useLayoutEffect","ref","dangerouslySetInnerHTML","__html","suppressHydrationWarning","memo","warn","GatsbyImageHydrator","GatsbyImage","checkDimensionProps","validLayouts","Error","GatsbyImageBrowser","__error","imageData","__imageData","console","StaticImage","camelCase","input","options","TypeError","assign","pascalCase","x","trim","filter","toUpperCase","toLowerCase","string","isLastCharLower","isLastCharUpper","isLastLastCharUpper","character","test","slice","preserveCamelCase","replace","_","p1","m","charAt","CoverImage","getImage","DEFAULT_LAYOUT_CONTEXT","navigation","displayNavigation","toggleNavigation","LayoutContext","createContext","_extends","target","source","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","Menu","forwardRef","_ref","_ref$color","color","_ref$size","size","xmlns","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","x1","y1","x2","y2","useThemeContext","useContext","ThemeContext","ThemeToggler","colorScheme","setColorScheme","toggleColorScheme","useCallback","title","onClick","id","y","cx","cy","r","mask","GithubIcon","d","StackOverflowIcon","Navbar","transparent","Link","to","href","BreadcrumbItem","path","itemScope","itemType","itemProp","Breadcrumbs","items","margin","item","Layout","coverImage","breadcrumbs","author","useAuthorProfile","useState","setDisplayNavigation","Provider","value","name","Section","link","linkExternal","footer","rel","Seo","description","meta","file","useStaticQuery","profile","metaTitle","metaDescription","childMarkdownRemark","_file$childMarkdownRe","rawMarkdownBody","metaElements","content","property","avatar","twitter","useHomeCoverImage","_useStaticQuery$file","useAboutCoverImage","useShortAboutHTML","_useStaticQuery$file$","html","data","_data$file","childYaml","nickname","website","phone","email","github","stackoverflow","_profile$stackoverflo","disqus","mapAuthorProfileQuery","useSocialLinks","label","useAuthorCV","cv","skills","_cv$skills","split","experiences","_cv$experiences","company","years","tags","_e$tags","bulletPoints","bullet_points","_e$bullet_points","bp","mapAuthorCVQuery","Twitter","Mail","points","SocialLinkItem","Icon","TwitterIcon","MailIcon","useSocialLinkIcon","useSocialLinkClassName","SocialLinks","socialLinks","ProfileSection","aboutHTML","firstName","lastName","SkillsList","skill","BioSection","authorCV","fluidSection","page","pageAbout","pageFluid","pageTitleCentered"],"sourceRoot":""}