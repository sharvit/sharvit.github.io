{"version":3,"sources":["webpack:///./src/components/Blog/BlogPostList/BlogPostListItem.module.scss","webpack:///./src/components/Blog/BlogPostList/BlogPostListItem.js","webpack:///./src/components/Blog/BlogData.js","webpack:///./src/components/Blog/BlogPostList/BlogPostListData.js","webpack:///./src/components/Blog/BlogPostList/BlogPostList.js","webpack:///./src/components/Blog/BlogPostList/index.js"],"names":["module","exports","BlogPostListItem","title","coverImage","path","date","excerpt","className","styles","article","to","fluid","objectFit","objectPosition","alt","dateTime","toJSON","toDateString","articleContent","classNames","readMoreButton","defaultProps","Date","fileToBlogPost","node","name","childMarkdownRemark","frontmatter","coverImageFile","formatBlogPost","split","year","month","day","childImageSharp","getBlogPostsList","limit","allFile","edges","map","slice","BlogPostList","post","key"],"mappings":"0opBACAA,EAAOC,QAAU,CAAC,QAAU,0CAA0C,MAAQ,wCAAwC,eAAiB,kDAAkD,eAAiB,qD,gJCOpMC,EAAmB,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,WAAYC,EAAtB,EAAsBA,KAAMC,EAA5B,EAA4BA,KAAMC,EAAlC,EAAkCA,QAAlC,OACvB,6BAASC,UAAWC,IAAOC,SACzB,yBAAKF,UAAU,OACb,yBAAKA,UAAU,6BACb,yBAAKA,UAAU,eACb,kBAAC,OAAD,CAAMG,GAAIN,GACPD,GACC,kBAAC,IAAD,CACEQ,MAAOR,EACPS,UAAU,QACVC,eAAe,UACfC,IAAKZ,IAGT,wBAAIK,UAAWC,IAAON,OAAQA,IAEhC,yBAAKK,UAAU,mBACb,0BAAMQ,SAAUV,EAAKW,UAAWX,EAAKY,oBAK7C,yBAAKV,UAAU,OACb,yBAAKA,UAAU,4BACb,yBAAKA,UAAWC,IAAOU,gBACrB,2BAAIZ,GACJ,kBAAC,OAAD,CACEI,GAAIN,EACJG,UAAWY,IACT,6BACAX,IAAOY,iBAJX,kBAuBVnB,EAAiBoB,aAAe,CAC9BnB,MAAO,GACPC,WAAY,KACZC,KAAM,GACNC,KAAM,IAAIiB,KACVhB,QAAS,IAGIL,Q,kCCpBFsB,EAAiB,SAAC,GAAD,QAC5BC,KACEC,EAF0B,EAE1BA,KAF0B,IAG1BC,oBACEpB,EAJwB,EAIxBA,QAJwB,IAKxBqB,YAAezB,EALS,EAKTA,MAAmB0B,EALV,EAKFzB,WALE,OAQxB0B,EAAe,CAAEJ,OAAMvB,QAAOI,UAASsB,oBAEhCC,EAAiB,SAAC,GAA8C,IAA5CJ,EAA2C,EAA3CA,KAAMvB,EAAqC,EAArCA,MAAOI,EAA8B,EAA9BA,QAASsB,EAAqB,EAArBA,eAAqB,EAC/CH,EAAKK,MAAM,KAA/BC,EADmE,KAC7DC,EAD6D,KACtDC,EADsD,KAM1E,MAAO,CACL/B,QACAG,KANW,IAAIiB,KAAQS,EAAZ,IAAoBC,EAApB,IAA6BC,GAOxC3B,UACAH,WANiByB,GAAkBA,EAAeM,gBAAgBvB,MAOlEP,KAAK,SAAUqB,IChENU,EAAmB,SAAAC,GAAK,ODCnC,OAwCEC,QAAQC,MAAMC,IAAIhB,GCzCkCiB,MAAM,EAAGJ,ICM3DK,EAAe,SAAC,GAAD,IAAGL,EAAH,EAAGA,MAAH,OACnB,yBAAK7B,UAAU,YACZ4B,EAAiBC,GAAOG,KAAI,SAAAG,GAAI,OAC/B,kBAAC,EAAD,eAAkBC,IAAKD,EAAKtC,MAAUsC,SAS5CD,EAAapB,aAAe,CAC1Be,MAAO,KAGMK,QCtBAA","file":"463c400049cbfdd14f898fba69d967c9e731d23c-672a22d7d815de11e464.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"article\":\"BlogPostListItem-module--article--3wCBE\",\"title\":\"BlogPostListItem-module--title--2Z99V\",\"articleContent\":\"BlogPostListItem-module--article-content--3DMTr\",\"readMoreButton\":\"BlogPostListItem-module--read-more-button--JuA0_\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Link } from 'gatsby';\nimport Image from 'gatsby-image';\n\nimport styles from './BlogPostListItem.module.scss';\n\nconst BlogPostListItem = ({ title, coverImage, path, date, excerpt }) => (\n  <article className={styles.article}>\n    <div className=\"row\">\n      <div className=\"col-md-10 col-md-offset-1\">\n        <div className=\"text-center\">\n          <Link to={path}>\n            {coverImage && (\n              <Image\n                fluid={coverImage}\n                objectFit=\"cover\"\n                objectPosition=\"50% 50%\"\n                alt={title}\n              />\n            )}\n            <h2 className={styles.title}>{title}</h2>\n          </Link>\n          <div className=\"title-uppercase\">\n            <time dateTime={date.toJSON()}>{date.toDateString()}</time>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div className=\"row\">\n      <div className=\"col-md-8 col-md-offset-2\">\n        <div className={styles.articleContent}>\n          <p>{excerpt}</p>\n          <Link\n            to={path}\n            className={classNames(\n              'btn btn-simple btn-primary',\n              styles.readMoreButton\n            )}\n          >\n            READ MORE\n          </Link>\n        </div>\n      </div>\n    </div>\n  </article>\n);\n\nBlogPostListItem.propTypes = {\n  title: PropTypes.string,\n  coverImage: PropTypes.object,\n  path: PropTypes.string,\n  date: PropTypes.instanceOf(Date),\n  excerpt: PropTypes.string,\n};\n\nBlogPostListItem.defaultProps = {\n  title: '',\n  coverImage: null,\n  path: '',\n  date: new Date(),\n  excerpt: '',\n};\n\nexport default BlogPostListItem;\n","import { useStaticQuery, graphql } from 'gatsby';\n\nexport const getBlogPosts = () =>\n  useStaticQuery(\n    graphql`\n      {\n        allFile(\n          filter: { sourceInstanceName: { eq: \"posts\" } }\n          sort: { order: DESC, fields: name }\n          limit: 1000\n        ) {\n          edges {\n            node {\n              name\n              childMarkdownRemark {\n                excerpt\n                frontmatter {\n                  title\n                  coverImage {\n                    childImageSharp {\n                      fluid(maxHeight: 500, maxWidth: 1200) {\n                        base64\n                        tracedSVG\n                        aspectRatio\n                        src\n                        srcSet\n                        srcWebp\n                        srcSetWebp\n                        sizes\n                        originalImg\n                        originalName\n                        presentationWidth\n                        presentationHeight\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    `\n  ).allFile.edges.map(fileToBlogPost);\n\nexport const fileToBlogPost = ({\n  node: {\n    name,\n    childMarkdownRemark: {\n      excerpt,\n      frontmatter: { title, coverImage: coverImageFile },\n    },\n  },\n}) => formatBlogPost({ name, title, excerpt, coverImageFile });\n\nexport const formatBlogPost = ({ name, title, excerpt, coverImageFile }) => {\n  const [year, month, day] = name.split('-');\n  const date = new Date(`${year}-${month}-${day}`);\n\n  const coverImage = coverImageFile && coverImageFile.childImageSharp.fluid;\n\n  return {\n    title,\n    date,\n    excerpt,\n    coverImage,\n    path: `/blog/${name}`,\n  };\n};\n","import { getBlogPosts } from '../BlogData';\n\nexport const getBlogPostsList = limit => getBlogPosts().slice(0, limit);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// import classNames from 'classnames';\n\nimport BlogPostListItem from './BlogPostListItem';\nimport { getBlogPostsList } from './BlogPostListData';\n// import styles from './LatestBlogPostsSection.module.scss';\n\nconst BlogPostList = ({ limit }) => (\n  <div className=\"articles\">\n    {getBlogPostsList(limit).map(post => (\n      <BlogPostListItem key={post.path} {...post} />\n    ))}\n  </div>\n);\n\nBlogPostList.propTypes = {\n  limit: PropTypes.number,\n};\n\nBlogPostList.defaultProps = {\n  limit: 1000,\n};\n\nexport default BlogPostList;\n","import BlogPostList from './BlogPostList';\n\nexport default BlogPostList;\n"],"sourceRoot":""}