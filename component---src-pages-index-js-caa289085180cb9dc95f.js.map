{"version":3,"sources":["webpack:///./src/components/Profile/ProfileSection/ProfileSection.module.scss","webpack:///./src/components/Blog/LatestBlogPostsSection.module.scss","webpack:///./src/components/Blog/BlogPostList/BlogPostListItem.module.scss","webpack:///./src/components/OpenSource/LatestOpenSourceSection/LatestOpenSourceData.js","webpack:///./src/components/OpenSource/LatestOpenSourceSection/LatestOpenSourceSection.js","webpack:///./src/components/OpenSource/LatestOpenSourceSection/index.js","webpack:///./src/components/Blog/LatestBlogPostsSection.js","webpack:///./src/pages/index.js","webpack:///./src/components/Profile/ProfileSection/ProfileBackground/ProfileBackground.js","webpack:///./src/components/Profile/ProfileSection/ProfileBackground/index.js","webpack:///./src/components/Profile/ProfileSection/ProfileIconLinks/ProfileIconLinks.js","webpack:///./src/components/Profile/ProfileSection/ProfileIconLinks/index.js","webpack:///./src/components/Profile/ProfileSection/ProfileIconLinks/ProfileIconLinksData.js","webpack:///./src/components/Profile/ProfileSection/ProfileSection.js","webpack:///./src/components/Profile/ProfileSection/index.js","webpack:///./src/components/Profile/ProfileSection/ProfileSectionData.js","webpack:///./src/components/Profile/ProfileSection/ProfileIconLinks/ProfileIconLinks.module.scss","webpack:///./src/components/Profile/ProfileSection/ProfileBackground/ProfileBackground.module.scss","webpack:///./src/components/Blog/BlogPostList/BlogPostListItem.js","webpack:///./src/components/Blog/BlogData.js","webpack:///./src/components/Blog/BlogPostList/BlogPostListData.js","webpack:///./src/components/Blog/BlogPostList/BlogPostList.js","webpack:///./src/components/Blog/BlogPostList/index.js","webpack:///./src/components/OpenSource/LatestOpenSourceSection/LatestOpenSourceSection.module.scss"],"names":["module","exports","getLatestOpenSourceProjects","a","getUserRepositories","repositories","filter","fork","sort","b","stargazersCount","reverse","slice","console","error","LatestOpenSourceSection","className","classNames","styles","container","map","repository","key","name","OpenSourceCard","to","defaultProps","Component","useState","setRepositories","loadRepositories","useEffect","LatestBlogPostsSection","BlogPostList","limit","morePostsRow","IndexPage","Layout","transparent","SEO","ProfileSection","ProfileBackground","navbarCollapsed","props","collapse","useContext","LayoutContext","navigation","ProfileIconLinks","socialLinks","id","label","link","pdfLink","buttonClassName","iconClassName","Fragment","button","href","data-pdf-link","target","rel","icon","useStaticQuery","site","siteMetadata","description","avatar","bio","profileSection","ownerAvatar","src","alt","owner","ownerContact","ownerAbout","dangerouslySetInnerHTML","__html","resumeButton","title","author","file","childMarkdownRemark","html","BlogPostListItem","coverImage","path","date","excerpt","article","fluid","objectFit","objectPosition","dateTime","toJSON","toDateString","articleContent","readMoreButton","Date","fileToBlogPost","node","frontmatter","coverImageFile","formatBlogPost","split","year","month","day","childImageSharp","useBlogPostsList","allFile","edges","post"],"mappings":"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","file":"component---src-pages-index-js-caa289085180cb9dc95f.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileSection\":\"ProfileSection-module--profile-section--2skfJ\",\"ownerAvatar\":\"ProfileSection-module--owner-avatar--34asy\",\"avatar\":\"ProfileSection-module--avatar--2ruGm\",\"owner\":\"ProfileSection-module--owner--3QRsL\",\"name\":\"ProfileSection-module--name--vU92U\",\"ownerContact\":\"ProfileSection-module--owner-contact--2lN93\",\"ownerAbout\":\"ProfileSection-module--owner-about--3XxYB\",\"resumeButton\":\"ProfileSection-module--resume-button--uzLu2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"LatestBlogPostsSection-module--container--IIh_6\",\"morePostsRow\":\"LatestBlogPostsSection-module--more-posts-row--1xQ8x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"article\":\"BlogPostListItem-module--article--3wCBE\",\"title\":\"BlogPostListItem-module--title--2Z99V\",\"articleContent\":\"BlogPostListItem-module--article-content--3DMTr\",\"readMoreButton\":\"BlogPostListItem-module--read-more-button--JuA0_\"};","import { getUserRepositories } from '../OpenSourceData';\n\nexport const getLatestOpenSourceProjects = async () => {\n  try {\n    const repositories = await getUserRepositories('sharvit');\n\n    return repositories\n      .filter(({ fork }) => !fork)\n      .sort((a, b) => a.stargazersCount - b.stargazersCount)\n      .reverse()\n      .slice(0, 3);\n  } catch (error) {\n    console.error(error); // eslint-disable-line no-console\n  }\n\n  return [];\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Link } from 'gatsby';\n\nimport OpenSourceCard from '../OpenSourceCard';\n\nimport styles from './LatestOpenSourceSection.module.scss';\n\nconst LatestOpenSourceSection = ({ repositories }) => (\n  <section\n    className={classNames(\n      'section posts-section section-light-brown',\n      styles.container\n    )}\n  >\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-md-10 col-md-offset-1\">\n          <div className=\"text-center\">\n            <h2>Latest Open Source Projects</h2>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"row open-source open-source-section\">\n        {repositories.map((repository) => (\n          <div className=\"col-md-4\" key={repository.name}>\n            <OpenSourceCard {...repository} />\n          </div>\n        ))}\n      </div>\n\n      <div className=\"row\">\n        <div className=\"col-md-10 col-md-offset-1\">\n          <div className=\"text-center\">\n            <Link to=\"/open-source\" className=\"btn btn-default btn-fill btn-lg\">\n              All Open Source Projects\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n);\n\nLatestOpenSourceSection.propTypes = {\n  repositories: PropTypes.arrayOf(\n    PropTypes.shape({\n      ...OpenSourceCard.propTypes,\n    })\n  ),\n};\n\nLatestOpenSourceSection.defaultProps = {\n  repositories: [],\n};\n\nexport default LatestOpenSourceSection;\n","import React, { useState, useEffect } from 'react';\n\nimport { getLatestOpenSourceProjects } from './LatestOpenSourceData';\nimport LatestOpenSourceSection from './LatestOpenSourceSection';\n\nconst Component = () => {\n  const [repositories, setRepositories] = useState([]);\n\n  const loadRepositories = async () => {\n    setRepositories(await getLatestOpenSourceProjects());\n  };\n\n  useEffect(() => {\n    loadRepositories();\n  }, []);\n\n  return <LatestOpenSourceSection repositories={repositories} />;\n};\n\nexport default Component;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Link } from 'gatsby';\n\nimport BlogPostList from './BlogPostList';\nimport styles from './LatestBlogPostsSection.module.scss';\n\nconst LatestBlogPostsSection = () => (\n  <section className={classNames('section section-white', styles.container)}>\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-md-10 col-md-offset-1\">\n          <div className=\"text-center\">\n            <h2>Latest Blog Posts</h2>\n          </div>\n        </div>\n      </div>\n\n      <BlogPostList limit={5} />\n\n      <div className={classNames('row', styles.morePostsRow)}>\n        <div className=\"col-md-10 col-md-offset-1\">\n          <div className=\"text-center\">\n            <Link to=\"/blog\" className=\"btn btn-fill btn-primary btn-lg\">\n              All Blog Posts\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n);\n\nexport default LatestBlogPostsSection;\n","import React from 'react';\n\nimport Layout from '../components/Layout';\nimport SEO from '../components/SEO';\nimport ProfileSection from '../components/Profile/ProfileSection';\nimport LatestOpenSourceSection from '../components/OpenSource/LatestOpenSourceSection';\nimport LatestBlogPostsSection from '../components/Blog/LatestBlogPostsSection';\n\nconst IndexPage = () => (\n  <Layout transparent>\n    <SEO />\n    <ProfileSection />\n    <LatestOpenSourceSection />\n    <LatestBlogPostsSection />\n  </Layout>\n);\n\nexport default IndexPage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport styles from './ProfileBackground.module.scss';\n\nconst ProfileBackground = ({ navbarCollapsed }) => (\n  <div\n    className={classNames(styles.container, {\n      [styles.navbarCollapsed]: navbarCollapsed,\n    })}\n  >\n    <div className={styles.filter} />\n  </div>\n);\n\nProfileBackground.propTypes = {\n  navbarCollapsed: PropTypes.bool,\n};\n\nProfileBackground.defaultProps = {\n  navbarCollapsed: false,\n};\n\nexport default ProfileBackground;\n","import React, { useContext } from 'react';\nimport LayoutContext from '../../../Layout/LayoutContext';\nimport ProfileBackground from './ProfileBackground';\n\nconst Component = (props) => {\n  const {\n    navigation: { collapse },\n  } = useContext(LayoutContext);\n\n  return <ProfileBackground navbarCollapsed={collapse} {...props} />;\n};\n\nexport default Component;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { OutboundLink } from 'gatsby-plugin-google-analytics';\n\nimport styles from './ProfileIconLinks.module.scss';\n\nconst ProfileIconLinks = ({ socialLinks }) => (\n  <p className={styles.container}>\n    {socialLinks.map(\n      ({ id, label, link, pdfLink, buttonClassName, iconClassName }) => (\n        <React.Fragment key={id}>\n          <OutboundLink\n            className={classNames(buttonClassName, styles.button)}\n            href={link}\n            data-pdf-link={pdfLink || link}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <i className={classNames(iconClassName, styles.icon)} />\n            <span className={styles.label}>{label}:</span>{' '}\n          </OutboundLink>{' '}\n        </React.Fragment>\n      )\n    )}\n  </p>\n);\n\nProfileIconLinks.propTypes = {\n  socialLinks: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      label: PropTypes.string,\n      link: PropTypes.string,\n      pdfLink: PropTypes.string,\n      buttonClassName: PropTypes.string,\n      iconClassName: PropTypes.string,\n    })\n  ),\n};\n\nProfileIconLinks.defaultProps = {\n  socialLinks: [],\n};\n\nexport default ProfileIconLinks;\n","import React from 'react';\n\nimport { useSocialLinks } from './ProfileIconLinksData';\nimport ProfileIconLinks from './ProfileIconLinks';\n\nexport default () => {\n  const socialLinks = useSocialLinks();\n\n  return <ProfileIconLinks socialLinks={socialLinks} />;\n};\n","import { useStaticQuery, graphql } from 'gatsby';\n\nexport const useSocialLinks = () =>\n  useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            socialLinks {\n              id\n              label\n              link\n              pdfLink\n              buttonClassName\n              iconClassName\n            }\n          }\n        }\n      }\n    `\n  ).site.siteMetadata.socialLinks;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { OutboundLink } from 'gatsby-plugin-google-analytics';\n\nimport ProfileBackground from './ProfileBackground';\nimport ProfileIconLinks from './ProfileIconLinks';\n\nimport styles from './ProfileSection.module.scss';\n\nconst ProfileSection = ({ name, description, avatar, bio }) => (\n  <>\n    <ProfileBackground />\n    <header className={`${styles.profileSection} section-nude`}>\n      <div className=\"container\">\n        <div className={`row ${styles.ownerAvatar}`}>\n          <div className=\"col-md-2 col-md-offset-5 col-sm-4 col-sm-offset-4 col-xs-6 col-xs-offset-3 text-center\">\n            <div className={styles.avatar}>\n              <img\n                src={avatar}\n                alt=\"Avi Sharvit Avatar\"\n                className=\"img-circle img-no-padding img-responsive\"\n              />\n            </div>\n          </div>\n        </div>\n        <div className={`row ${styles.owner}`}>\n          <div className=\"col-md-6 col-md-offset-3 text-center\">\n            <h1 className={styles.name}>\n              {name}\n              <br />\n              <small>{description}</small>\n            </h1>\n          </div>\n        </div>\n        <div className={`row ${styles.ownerContact}`}>\n          <div className=\"col-md-6 col-md-offset-3 text-center\">\n            <ProfileIconLinks />\n          </div>\n        </div>\n        <div className={`row ${styles.ownerAbout}`}>\n          <div className=\"col-md-6 col-md-offset-3 text-center\">\n            <div dangerouslySetInnerHTML={{ __html: bio }} />\n            <div className={styles.resumeButton}>\n              <OutboundLink\n                href=\"/avi-sharvit-resume.pdf\"\n                className=\"btn btn-danger btn-fill\"\n              >\n                DOWNLOAD RESUME PDF\n              </OutboundLink>\n            </div>\n          </div>\n        </div>\n      </div>\n    </header>\n  </>\n);\n\nProfileSection.propTypes = {\n  name: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  bio: PropTypes.string.isRequired,\n};\n\nProfileSection.defaultProps = {};\n\nexport default ProfileSection;\n","import React from 'react';\nimport { useProfileData } from './ProfileSectionData';\nimport ProfileSection from './ProfileSection';\n\nconst Component = () => {\n  const { title, description, avatar, bio } = useProfileData();\n\n  return (\n    <ProfileSection\n      name={title}\n      description={description}\n      avatar={avatar}\n      bio={bio}\n    />\n  );\n};\n\nexport default Component;\n","import { useStaticQuery, graphql } from 'gatsby';\n\nexport const useProfileData = () => {\n  const {\n    site: {\n      siteMetadata: {\n        title,\n        description,\n        author: { avatar },\n      },\n    },\n    file: {\n      childMarkdownRemark: { html: bio },\n    },\n  } = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n          description\n          author {\n            avatar\n          }\n        }\n      }\n      file(sourceInstanceName: { eq: \"bio\" }, name: { eq: \"short-bio\" }) {\n        childMarkdownRemark {\n          html\n        }\n      }\n    }\n  `);\n\n  return { title, description, avatar, bio };\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ProfileIconLinks-module--container--GPA_A\",\"button\":\"ProfileIconLinks-module--button--1gLrk\",\"icon\":\"ProfileIconLinks-module--icon--3EE7x\",\"label\":\"ProfileIconLinks-module--label--1mIUL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ProfileBackground-module--container--38AFp\",\"navbarCollapsed\":\"ProfileBackground-module--navbarCollapsed--1RmC4\",\"filter\":\"ProfileBackground-module--filter--3m7yw\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Link } from 'gatsby';\nimport Image from 'gatsby-image';\n\nimport styles from './BlogPostListItem.module.scss';\n\nconst BlogPostListItem = ({ title, coverImage, path, date, excerpt }) => (\n  <article className={styles.article}>\n    <div className=\"row\">\n      <div className=\"col-md-10 col-md-offset-1\">\n        <div className=\"text-center\">\n          <Link to={path}>\n            {coverImage && (\n              <Image\n                fluid={coverImage}\n                objectFit=\"cover\"\n                objectPosition=\"50% 50%\"\n                alt={title}\n              />\n            )}\n            <h2 className={styles.title}>{title}</h2>\n          </Link>\n          <div className=\"title-uppercase\">\n            <time dateTime={date.toJSON()}>{date.toDateString()}</time>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div className=\"row\">\n      <div className=\"col-md-8 col-md-offset-2\">\n        <div className={styles.articleContent}>\n          <p>{excerpt}</p>\n          <Link\n            to={path}\n            className={classNames(\n              'btn btn-simple btn-primary',\n              styles.readMoreButton\n            )}\n          >\n            READ MORE\n          </Link>\n        </div>\n      </div>\n    </div>\n  </article>\n);\n\nBlogPostListItem.propTypes = {\n  title: PropTypes.string,\n  coverImage: PropTypes.object,\n  path: PropTypes.string,\n  date: PropTypes.instanceOf(Date),\n  excerpt: PropTypes.string,\n};\n\nBlogPostListItem.defaultProps = {\n  title: '',\n  coverImage: null,\n  path: '',\n  date: new Date(),\n  excerpt: '',\n};\n\nexport default BlogPostListItem;\n","import { useStaticQuery, graphql } from 'gatsby';\n\nexport const useBlogPosts = () =>\n  useStaticQuery(\n    graphql`\n      {\n        allFile(\n          filter: { sourceInstanceName: { eq: \"posts\" } }\n          sort: { order: DESC, fields: name }\n          limit: 1000\n        ) {\n          edges {\n            node {\n              name\n              childMarkdownRemark {\n                excerpt\n                frontmatter {\n                  title\n                  coverImage {\n                    childImageSharp {\n                      fluid(maxHeight: 500, maxWidth: 1200) {\n                        base64\n                        tracedSVG\n                        aspectRatio\n                        src\n                        srcSet\n                        srcWebp\n                        srcSetWebp\n                        sizes\n                        originalImg\n                        originalName\n                        presentationWidth\n                        presentationHeight\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    `\n  ).allFile.edges.map(fileToBlogPost);\n\nexport const fileToBlogPost = ({\n  node: {\n    name,\n    childMarkdownRemark: {\n      excerpt,\n      frontmatter: { title, coverImage: coverImageFile },\n    },\n  },\n}) => formatBlogPost({ name, title, excerpt, coverImageFile });\n\nexport const formatBlogPost = ({ name, title, excerpt, coverImageFile }) => {\n  const [year, month, day] = name.split('-');\n  const date = new Date(`${year}-${month}-${day}`);\n\n  const coverImage = coverImageFile && coverImageFile.childImageSharp.fluid;\n\n  return {\n    title,\n    date,\n    excerpt,\n    coverImage,\n    path: `/blog/${name}`,\n  };\n};\n","import { useBlogPosts } from '../BlogData';\n\nexport const useBlogPostsList = (limit) => useBlogPosts().slice(0, limit);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport BlogPostListItem from './BlogPostListItem';\nimport { useBlogPostsList } from './BlogPostListData';\n\nconst BlogPostList = ({ limit }) => (\n  <div className=\"articles\">\n    {useBlogPostsList(limit).map((post) => (\n      <BlogPostListItem key={post.path} {...post} />\n    ))}\n  </div>\n);\n\nBlogPostList.propTypes = {\n  limit: PropTypes.number,\n};\n\nBlogPostList.defaultProps = {\n  limit: 1000,\n};\n\nexport default BlogPostList;\n","import BlogPostList from './BlogPostList';\n\nexport default BlogPostList;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"LatestOpenSourceSection-module--container--3Zpy9\"};"],"sourceRoot":""}