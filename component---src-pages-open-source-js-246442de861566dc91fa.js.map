{"version":3,"sources":["webpack:///./src/components/OpenSource/AllOpenSourceSection/AllOpenSourceSectionData.js","webpack:///./src/components/OpenSource/AllOpenSourceSection/AllOpenSourceSection.js","webpack:///./src/components/OpenSource/AllOpenSourceSection/index.js","webpack:///./src/pages/open-source.js"],"names":["getAllOpenSourceProjects","_ref","regenerator_default","a","mark","_callee","repositories","wrap","_context","prev","next","getUserRepositories","sent","abrupt","filter","_ref2","fork","sort","b","stargazersCount","reverse","t0","console","error","stop","apply","this","arguments","AllOpenSourceSection","react_default","createElement","className","classNames","styles","container","map","repository","key","name","OpenSourceCard","defaultProps","Component","_useState","useState","setRepositories","loadRepositories","t1","useEffect","OpenSource_AllOpenSourceSection_AllOpenSourceSection","OpenSourcePage","Layout","breadcrumbs","title","path","SEO","OpenSource_AllOpenSourceSection"],"mappings":"yTAEO,IAAMA,EAAwB,iBAAAC,KAAAC,EAAAC,EAAAC,KAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAETC,YAAoB,WAFX,cAE9BL,EAF8BE,EAAAI,KAAAJ,EAAAK,OAAA,SAI7BP,EACJQ,OAAO,SAAAC,GAAA,OAAAA,EAAGC,OACVC,KAAK,SAACd,EAAGe,GAAJ,OAAUf,EAAEgB,gBAAkBD,EAAEC,kBACrCC,WAPiC,OAAAZ,EAAAC,KAAA,EAAAD,EAAAa,GAAAb,EAAA,SASpCc,QAAQC,MAARf,EAAAa,IAToC,eAAAb,EAAAK,OAAA,SAY/B,IAZ+B,yBAAAL,EAAAgB,SAAAnB,EAAA,6LAAH,yBAAAJ,EAAAwB,MAAAC,KAAAC,YAAA,wDCM/BC,EAAuB,SAAA3B,GAAA,IAAGK,EAAHL,EAAGK,aAAH,OAC3BuB,EAAA1B,EAAA2B,cAAA,QAAMC,UAAWC,IAAW,uBAAwBC,IAAOC,YACzDL,EAAA1B,EAAA2B,cAAA,OAAKC,UAAU,aACbF,EAAA1B,EAAA2B,cAAA,yCAEAD,EAAA1B,EAAA2B,cAAA,OAAKC,UAAU,mBACZzB,EAAa6B,IAAI,SAAAC,GAAU,OAC1BP,EAAA1B,EAAA2B,cAAA,OAAKC,UAAU,WAAWM,IAAKD,EAAWE,MACxCT,EAAA1B,EAAA2B,cAACS,EAAA,EAAmBH,UAgBhCR,EAAqBY,aAAe,CAClClC,aAAc,IAGDsB,iIC/Bf,IAcea,EAdG,WAAM,IAAAC,EACkBC,mBAAS,IAA1CrC,EADeoC,EAAA,GACDE,EADCF,EAAA,GAGhBG,KAAgB3C,EAAAC,EAAAC,KAAG,SAAAC,IAAA,OAAAH,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAa,GACvBuB,EADuBpC,EAAAE,KAAA,EACDV,IADC,OAAAQ,EAAAsC,GAAAtC,EAAAI,MAAA,EAAAJ,EAAAa,IAAAb,EAAAsC,IAAA,wBAAAtC,EAAAgB,SAAAnB,KAAHJ,8KAAA,kBAAAA,EAAAwB,MAAAC,KAAAC,aAAA,MAAA1B,EAQtB,OAJA8C,oBAAU,WACRF,KACC,IAEIhB,EAAA1B,EAAA2B,cAACkB,EAAD,CAAsB1C,aAAcA,KCD9B2C,UATQ,kBACrBpB,EAAA1B,EAAA2B,cAACoB,EAAA,EAAD,CACEC,YAAa,CAAC,CAAEC,MAAO,uBAAwBC,KAAM,kBAErDxB,EAAA1B,EAAA2B,cAACwB,EAAA,EAAD,CAAKF,MAAM,yBACXvB,EAAA1B,EAAA2B,cAACyB,EAAD","file":"component---src-pages-open-source-js-246442de861566dc91fa.js","sourcesContent":["import { getUserRepositories } from '../OpenSourceData';\n\nexport const getAllOpenSourceProjects = async () => {\n  try {\n    const repositories = await getUserRepositories('sharvit');\n\n    return repositories\n      .filter(({ fork }) => !fork)\n      .sort((a, b) => a.stargazersCount - b.stargazersCount)\n      .reverse();\n  } catch (error) {\n    console.error(error); // eslint-disable-line no-console\n  }\n\n  return [];\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport OpenSourceCard from '../OpenSourceCard';\n\nimport styles from './AllOpenSourceSection.module.scss';\n\nconst AllOpenSourceSection = ({ repositories }) => (\n  <main className={classNames('section section-nude', styles.container)}>\n    <div className=\"container\">\n      <h1>Latest Open Source Projects</h1>\n\n      <div className=\"row open-source\">\n        {repositories.map(repository => (\n          <div className=\"col-md-4\" key={repository.name}>\n            <OpenSourceCard {...repository} />\n          </div>\n        ))}\n      </div>\n    </div>\n  </main>\n);\n\nAllOpenSourceSection.propTypes = {\n  repositories: PropTypes.arrayOf(\n    PropTypes.shape({\n      ...OpenSourceCard.propTypes,\n    })\n  ),\n};\n\nAllOpenSourceSection.defaultProps = {\n  repositories: [],\n};\n\nexport default AllOpenSourceSection;\n","import React, { useState, useEffect } from 'react';\n\nimport { getAllOpenSourceProjects } from './AllOpenSourceSectionData';\nimport AllOpenSourceSection from './AllOpenSourceSection';\n\nconst Component = () => {\n  const [repositories, setRepositories] = useState([]);\n\n  const loadRepositories = async () => {\n    setRepositories(await getAllOpenSourceProjects());\n  };\n\n  useEffect(() => {\n    loadRepositories();\n  }, []);\n\n  return <AllOpenSourceSection repositories={repositories} />;\n};\n\nexport default Component;\n","import React from 'react';\n\nimport Layout from '../components/Layout';\nimport SEO from '../components/SEO';\nimport AllOpenSourceSection from '../components/OpenSource/AllOpenSourceSection';\n\nconst OpenSourcePage = () => (\n  <Layout\n    breadcrumbs={[{ title: 'Open Source Projects', path: '/open-source' }]}\n  >\n    <SEO title=\"Open Source Projects\" />\n    <AllOpenSourceSection />\n  </Layout>\n);\n\nexport default OpenSourcePage;\n"],"sourceRoot":""}