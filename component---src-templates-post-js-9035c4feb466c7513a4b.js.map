{"version":3,"sources":["webpack:///./src/components/Blog/BlogPost/ShareButtons.js","webpack:///./src/components/Blog/BlogPost/BlogPost.js","webpack:///./src/components/Blog/BlogPost/index.js","webpack:///./src/templates/post.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/Layout/LayoutContext.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/SEO.js","webpack:///./src/components/Layout/Navbar/Navbar.js","webpack:///./src/components/Layout/Navbar/index.js","webpack:///./src/components/Layout/Layout.js","webpack:///./src/components/Layout/index.js","webpack:///./src/components/Layout/LayoutData.js","webpack:///./src/components/Layout/Breadcrumbs/BreadcrumbItem.js","webpack:///./src/components/Layout/Breadcrumbs/Breadcrumbs.js","webpack:///./src/components/Layout/Breadcrumbs/index.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["ShareButtons","_ref","url","react_default","a","createElement","Twitter","Facebook","Mail","Whatsapp","Telegram","map","ShareButton","link","solid","big","defaultProps","BlogPost","id","title","date","html","disqusConfig","identifier","className","dateTime","toJSON","toDateString","dangerouslySetInnerHTML","__html","BlogPost_ShareButtons","gatsby_plugin_disqus","config","Date","PostTemplate","_ref$pageContext","pageContext","name","postPath","postUrl","_ref$data$file$childM","data","file","childMarkdownRemark","excerpt","frontmatter","Layout","breadcrumbs","path","SEO","description","Blog_BlogPost","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","d","__webpack_exports__","loader","enqueue","React","createContext","LayoutProvider","LayoutContext","navigation","collapse","Provider","m","module","exports","require","default","lang","meta","_staticQueryData$data","_public_static_d_3921925534_json__WEBPACK_IMPORTED_MODULE_0__","siteMetadata","site","titleTemplate","metaTitle","metaDescription","rawMarkdownBody","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","content","property","author","avatar","twitter","concat","Navbar","siteTitle","transparent","toggleNavigation","classNames","styles","container","role","type","navbarToggle","onClick","iconBar","gatsby_browser_entry","to","Component","props","_useContext$navigatio","useContext","Layout_Navbar_Navbar","Object","assign","children","Fragment","Layout_Navbar","length","Breadcrumbs","items","_toConsumableArray","_useState","useState","setCollapse","value","components_Layout_Layout","_856328897","BreadcrumbItem","itemScope","itemType","itemProp","style","margin","item","Breadcrumbs_BreadcrumbItem","key","ProdPageRenderer","location","pageResources","InternalPageRenderer","json"],"mappings":"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","file":"component---src-templates-post-js-9035c4feb466c7513a4b.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Twitter,\n  Facebook,\n  Mail,\n  Whatsapp,\n  Telegram,\n} from 'react-social-sharing';\n\nconst ShareButtons = ({ url }) => (\n  <div>\n    {[Twitter, Facebook, Mail, Whatsapp, Telegram].map(ShareButton => (\n      <ShareButton link={url} solid big />\n    ))}\n  </div>\n);\n\nShareButtons.propTypes = {\n  url: PropTypes.string,\n};\n\nShareButtons.defaultProps = {\n  url: '',\n};\n\nexport default ShareButtons;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Disqus } from 'gatsby-plugin-disqus';\n\nimport ShareButtons from './ShareButtons';\n\nconst BlogPost = ({ id, title, date, url, html }) => {\n  const disqusConfig = {\n    identifier: id,\n    url,\n    title,\n  };\n  return (\n    <div className=\"section section-nude\">\n      <div className=\"container\">\n        <article className=\"post\">\n          <h1>{title}</h1>\n          <div className=\"date\">\n            Written on{' '}\n            <time dateTime={date.toJSON()}>{date.toDateString()}</time>\n          </div>\n          <br />\n          <br />\n          <p className=\"entry\" dangerouslySetInnerHTML={{ __html: html }} />\n          <br />\n          <br />\n          <ShareButtons url={url} />\n          <br />\n          <br />\n          <br />\n          <br />\n          <Disqus config={disqusConfig} />\n        </article>\n      </div>\n    </div>\n  );\n};\n\nBlogPost.propTypes = {\n  id: PropTypes.string,\n  title: PropTypes.string,\n  date: PropTypes.instanceOf(Date),\n  url: PropTypes.string,\n  html: PropTypes.string,\n};\n\nBlogPost.defaultProps = {\n  id: '',\n  title: '',\n  date: new Date(),\n  url: '',\n  html: '',\n};\n\nexport default BlogPost;\n","import BlogPost from './BlogPost';\n\nexport default BlogPost;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql } from 'gatsby';\n\nimport Layout from '../components/Layout';\nimport SEO from '../components/SEO';\nimport BlogPost from '../components/Blog/BlogPost';\n\nconst PostTemplate = ({\n  pageContext: { name, date, postPath, postUrl },\n  data: {\n    file: {\n      childMarkdownRemark: {\n        html,\n        excerpt,\n        frontmatter: { title },\n      },\n    },\n  },\n}) => (\n  <Layout\n    breadcrumbs={[{ title: 'Blog', path: '/blog' }, { title, path: postPath }]}\n  >\n    <SEO title={title} description={excerpt} />\n    <BlogPost\n      id={name}\n      title={title}\n      date={new Date(date)}\n      url={postUrl}\n      html={html}\n    />\n  </Layout>\n);\n\nPostTemplate.propTypes = {\n  pageContext: PropTypes.shape({\n    name: PropTypes.string,\n    date: PropTypes.string,\n    postPath: PropTypes.string,\n    postUrl: PropTypes.string,\n  }).isRequired,\n  data: PropTypes.shape({\n    file: PropTypes.shape({\n      childMarkdownRemark: PropTypes.shape({\n        html: PropTypes.string,\n        excerpt: PropTypes.string,\n        frontmatter: PropTypes.shape({\n          title: PropTypes.string,\n        }),\n      }),\n    }),\n  }).isRequired,\n};\n\nexport default PostTemplate;\n\nexport const pageQuery = graphql`\n  query($name: String!) {\n    file(sourceInstanceName: { eq: \"posts\" }, name: { eq: $name }) {\n      childMarkdownRemark {\n        html\n        excerpt\n        frontmatter {\n          title\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from 'react';\n\nconst LayoutContext = React.createContext({\n  navigation: {\n    collapse: true,\n  },\n});\n\nexport const LayoutProvider = LayoutContext.Provider;\n\nexport default LayoutContext;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nfunction SEO({ description, lang, meta, title }) {\n  const {\n    site: { siteMetadata },\n    file,\n  } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author {\n              twitter\n              avatar\n            }\n          }\n        }\n        file(sourceInstanceName: { eq: \"bio\" }, name: { eq: \"short-bio\" }) {\n          childMarkdownRemark {\n            rawMarkdownBody\n          }\n        }\n      }\n    `\n  );\n\n  const titleTemplate = title ? `${siteMetadata.title} | %s` : '%s';\n\n  const metaTitle =\n    title || `${siteMetadata.title} | ${siteMetadata.description}`;\n\n  const metaDescription =\n    description || file.childMarkdownRemark.rawMarkdownBody;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={metaTitle}\n      titleTemplate={titleTemplate}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: metaTitle,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: 'og:image',\n          content: siteMetadata.author.avatar,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:site`,\n          content: `@${siteMetadata.author.twitter}`,\n        },\n        {\n          name: `twitter:creator`,\n          content: `@${siteMetadata.author.twitter}`,\n        },\n      ].concat(meta)}\n    />\n  );\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string,\n};\n\nSEO.defaultProps = {\n  lang: 'en',\n  meta: [],\n  description: '',\n  title: '',\n};\n\nexport default SEO;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Link } from 'gatsby';\n\nimport styles from './Navbar.module.scss';\n\nconst Navbar = ({ siteTitle, transparent, collapse, toggleNavigation }) => (\n  <nav\n    className={classNames(\n      'navbar',\n      styles.container,\n      transparent ? 'navbar-ct-transparent' : 'navbar-ct-primary'\n    )}\n    role=\"navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-header\">\n        <button\n          type=\"button\"\n          className={classNames('navbar-toggle', styles.navbarToggle)}\n          onClick={() => toggleNavigation()}\n        >\n          <span className=\"sr-only\">Toggle navigation</span>\n          <span className={classNames('icon-bar', styles.iconBar)} />\n          <span className={classNames('icon-bar', styles.iconBar)} />\n          <span className={classNames('icon-bar', styles.iconBar)} />\n        </button>\n        <Link to=\"/\" className=\"navbar-brand\">\n          {siteTitle}\n        </Link>\n      </div>\n      <div className={classNames({ collapse }, 'navbar-collapse')}>\n        <ul className=\"nav navbar-nav navbar-right\">\n          <li>\n            <Link to=\"/blog\">Blog</Link>\n          </li>\n          <li>\n            <Link to=\"/open-source\">Open Source</Link>\n          </li>\n          <li>\n            <Link to=\"/about\">About</Link>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </nav>\n);\n\nNavbar.propTypes = {\n  siteTitle: PropTypes.string,\n  transparent: PropTypes.bool,\n  collapse: PropTypes.bool,\n  toggleNavigation: PropTypes.func,\n};\n\nNavbar.defaultProps = {\n  siteTitle: ``,\n  transparent: false,\n  collapse: false,\n  toggleNavigation: () => null,\n};\n\nexport default Navbar;\n","import React, { useContext } from 'react';\nimport LayoutContext from '../LayoutContext';\nimport Navbar from './Navbar';\n\nconst Component = props => {\n  const {\n    navigation: { collapse, toggleNavigation },\n  } = useContext(LayoutContext);\n\n  return (\n    <Navbar\n      collapse={collapse}\n      toggleNavigation={toggleNavigation}\n      {...props}\n    />\n  );\n};\n\nexport default Component;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Navbar from './Navbar';\nimport Breadcrumbs from './Breadcrumbs';\nimport '../../stylesheet/main.scss';\n\nconst Layout = ({ siteTitle, transparent, breadcrumbs, children }) => (\n  <>\n    <Navbar siteTitle={siteTitle} transparent={transparent} />\n    {breadcrumbs && breadcrumbs.length > 0 && (\n      <Breadcrumbs items={[{ title: siteTitle, path: '/' }, ...breadcrumbs]} />\n    )}\n    <div className=\"wrapper\">{children}</div>\n  </>\n);\n\nLayout.propTypes = {\n  transparent: PropTypes.bool,\n  siteTitle: PropTypes.string,\n  breadcrumbs: Breadcrumbs.propTypes.items,\n  children: PropTypes.node.isRequired,\n};\n\nLayout.defaultProps = {\n  siteTitle: '',\n  breadcrumbs: [],\n  transparent: false,\n};\n\nexport default Layout;\n","import React, { useState } from 'react';\n\nimport { LayoutProvider } from './LayoutContext';\nimport { getSiteTitle } from './LayoutData';\nimport Layout from './Layout';\n\nconst Component = props => {\n  const [collapse, setCollapse] = useState(true);\n  const toggleNavigation = () => setCollapse(!collapse);\n\n  return (\n    <LayoutProvider value={{ navigation: { collapse, toggleNavigation } }}>\n      <Layout {...props} siteTitle={getSiteTitle()} />\n    </LayoutProvider>\n  );\n};\n\nexport default Component;\n","import { useStaticQuery, graphql } from 'gatsby';\n\nexport const getSiteTitle = () =>\n  useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `).site.siteMetadata.title;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\n\nconst BreadcrumbItem = ({ title, path }) => (\n  <li itemScope itemType=\"http://data-vocabulary.org/Breadcrumb\">\n    <Link to={path} itemProp=\"url\">\n      <span itemProp=\"title\">{title}</span>\n    </Link>\n  </li>\n);\n\nBreadcrumbItem.propTypes = {\n  title: PropTypes.string,\n  path: PropTypes.string,\n};\n\nBreadcrumbItem.defaultProps = {\n  title: '',\n  path: '',\n};\n\nexport default BreadcrumbItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport BreadcrumbItem from './BreadcrumbItem';\n\nconst Breadcrumbs = ({ items }) => (\n  <nav className=\"breadcrumbs\">\n    <ol className=\"breadcrumb\" style={{ margin: 0 }}>\n      {items.map(item => (\n        <BreadcrumbItem key={item.path} {...item} />\n      ))}\n    </ol>\n  </nav>\n);\n\nBreadcrumbs.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      ...Breadcrumbs.propTypes,\n    })\n  ).isRequired,\n};\n\nexport default Breadcrumbs;\n","import Breadcrumbs from './Breadcrumbs';\n\nexport default Breadcrumbs;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}