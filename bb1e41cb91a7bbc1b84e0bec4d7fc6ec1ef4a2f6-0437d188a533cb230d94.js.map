{"version":3,"file":"bb1e41cb91a7bbc1b84e0bec4d7fc6ec1ef4a2f6-0437d188a533cb230d94.js","mappings":"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","sources":["webpack://avi-sharvit/./node_modules/camelcase/index.js","webpack://avi-sharvit/../src/image-utils.ts","webpack://avi-sharvit/../src/components/hooks.ts","webpack://avi-sharvit/../src/components/layout-wrapper.tsx","webpack://avi-sharvit/../src/components/picture.tsx","webpack://avi-sharvit/../src/components/placeholder.tsx","webpack://avi-sharvit/../src/components/main-image.tsx","webpack://avi-sharvit/../src/components/gatsby-image.server.tsx","webpack://avi-sharvit/../src/components/gatsby-image.browser.tsx","webpack://avi-sharvit/../src/components/static-image.server.tsx","webpack://avi-sharvit/../src/components/static-image.tsx","webpack://avi-sharvit/./src/components/Layout/components/CoverImage/CoverImage.tsx","webpack://avi-sharvit/./src/components/Layout/components/CoverImage/CoverImage.module.css","webpack://avi-sharvit/./src/components/Layout/LayoutContext.ts","webpack://avi-sharvit/./node_modules/react-feather/dist/icons/menu.js","webpack://avi-sharvit/./src/theme/ThemeHooks.ts","webpack://avi-sharvit/./src/theme/ThemeToggler/ThemeToggler.tsx","webpack://avi-sharvit/./src/theme/ThemeToggler/ThemeToggler.module.css","webpack://avi-sharvit/./src/components/Icons.tsx","webpack://avi-sharvit/./src/components/Layout/components/Navbar/Navbar.tsx","webpack://avi-sharvit/./src/components/Layout/components/Navbar/Navbar.module.css","webpack://avi-sharvit/./src/components/Layout/components/Breadcrumbs/BreadcrumbItem.tsx","webpack://avi-sharvit/./src/components/Layout/components/Breadcrumbs/Breadcrumbs.tsx","webpack://avi-sharvit/./src/components/Layout/components/Breadcrumbs/Breadcrumbs.module.css","webpack://avi-sharvit/./src/components/Layout/Layout.tsx","webpack://avi-sharvit/./src/components/Layout/Layout.module.css","webpack://avi-sharvit/./src/components/Section/Section.tsx","webpack://avi-sharvit/./src/components/Section/Section.module.css","webpack://avi-sharvit/./src/components/Seo.tsx","webpack://avi-sharvit/./src/profile/hooks/useAboutHTML.ts","webpack://avi-sharvit/./src/profile/hooks/useHomeCoverImage.ts","webpack://avi-sharvit/./src/profile/hooks/useAboutCoverImage.ts","webpack://avi-sharvit/./src/profile/hooks/useShortAboutHTML.ts","webpack://avi-sharvit/./src/profile/hooks/useAuthorProfile.ts","webpack://avi-sharvit/./src/profile/hooks/useSocialLinks.ts","webpack://avi-sharvit/./src/profile/hooks/useAuthorCV.tsx","webpack://avi-sharvit/./node_modules/react-feather/dist/icons/twitter.js","webpack://avi-sharvit/./node_modules/react-feather/dist/icons/mail.js","webpack://avi-sharvit/./src/profile/components/SocialLinks/hooks.ts","webpack://avi-sharvit/./src/profile/components/SocialLinks/SocialLinkItem.tsx","webpack://avi-sharvit/./src/profile/components/SocialLinks/SocialLinks.module.css","webpack://avi-sharvit/./src/profile/components/SocialLinks/SocialLinks.tsx","webpack://avi-sharvit/./src/profile/components/ProfileSection/ProfileSection.tsx","webpack://avi-sharvit/./src/profile/components/ProfileSection/ProfileSection.module.css","webpack://avi-sharvit/./src/profile/components/BioSection/BioSection.tsx","webpack://avi-sharvit/./src/profile/components/BioSection/BioSection.module.css","webpack://avi-sharvit/./src/pages/page.module.css","webpack://avi-sharvit/./node_modules/classnames/index.js"],"sourcesContent":["'use strict';\n\nconst UPPERCASE = /[\\p{Lu}]/u;\nconst LOWERCASE = /[\\p{Ll}]/u;\nconst LEADING_CAPITAL = /^[\\p{Lu}](?![\\p{Lu}])/gu;\nconst IDENTIFIER = /([\\p{Alpha}\\p{N}_]|$)/u;\nconst SEPARATORS = /[_.\\- ]+/;\n\nconst LEADING_SEPARATORS = new RegExp('^' + SEPARATORS.source);\nconst SEPARATORS_AND_IDENTIFIER = new RegExp(SEPARATORS.source + IDENTIFIER.source, 'gu');\nconst NUMBERS_AND_IDENTIFIER = new RegExp('\\\\d+' + IDENTIFIER.source, 'gu');\n\nconst preserveCamelCase = (string, toLowerCase, toUpperCase) => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && UPPERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && LOWERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = toLowerCase(character) === character && toUpperCase(character) !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = toUpperCase(character) === character && toLowerCase(character) !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst preserveConsecutiveUppercase = (input, toLowerCase) => {\n\tLEADING_CAPITAL.lastIndex = 0;\n\n\treturn input.replace(LEADING_CAPITAL, m1 => toLowerCase(m1));\n};\n\nconst postProcess = (input, toUpperCase) => {\n\tSEPARATORS_AND_IDENTIFIER.lastIndex = 0;\n\tNUMBERS_AND_IDENTIFIER.lastIndex = 0;\n\n\treturn input.replace(SEPARATORS_AND_IDENTIFIER, (_, identifier) => toUpperCase(identifier))\n\t\t.replace(NUMBERS_AND_IDENTIFIER, m => toUpperCase(m));\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\tpascalCase: false,\n\t\tpreserveConsecutiveUppercase: false,\n\t\t...options\n\t};\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tconst toLowerCase = options.locale === false ?\n\t\tstring => string.toLowerCase() :\n\t\tstring => string.toLocaleLowerCase(options.locale);\n\tconst toUpperCase = options.locale === false ?\n\t\tstring => string.toUpperCase() :\n\t\tstring => string.toLocaleUpperCase(options.locale);\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? toUpperCase(input) : toLowerCase(input);\n\t}\n\n\tconst hasUpperCase = input !== toLowerCase(input);\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input, toLowerCase, toUpperCase);\n\t}\n\n\tinput = input.replace(LEADING_SEPARATORS, '');\n\n\tif (options.preserveConsecutiveUppercase) {\n\t\tinput = preserveConsecutiveUppercase(input, toLowerCase);\n\t} else {\n\t\tinput = toLowerCase(input);\n\t}\n\n\tif (options.pascalCase) {\n\t\tinput = toUpperCase(input.charAt(0)) + input.slice(1);\n\t}\n\n\treturn postProcess(input, toUpperCase);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","import camelCase from \"camelcase\"\nimport type { IGatsbyImageData } from \"./index\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  outputPixelDensities?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.slice(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(`\nThe requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* global GATSBY___IMAGE */\nimport { generateImageData, EVERY_BREAKPOINT } from \"../image-utils\"\nimport type { CSSProperties, HTMLAttributes, ImgHTMLAttributes } from \"react\"\nimport type { Node } from \"gatsby\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport type {\n  IGatsbyImageHelperArgs,\n  Layout,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type IGatsbyImageParent<T = never> = T & {\n  gatsbyImage: IGatsbyImageData\n}\nexport type FileNode = Partial<Node> & {\n  childImageSharp?: IGatsbyImageDataParent<Partial<Node>>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nconst isGatsbyImageParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageParent<T> | any\n): node is IGatsbyImageParent<T> => Boolean(node?.gatsbyImage)\n\nexport type ImageDataLike =\n  | FileNode\n  | IGatsbyImageDataParent\n  | IGatsbyImageParent\n  | IGatsbyImageData\n\nexport const getImage = (\n  node: ImageDataLike | null\n): IGatsbyImageData | undefined => {\n  // This checks both for gatsbyImageData and gatsbyImage\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  // gatsbyImageData GraphQL field\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  // gatsbyImage GraphQL field for Gatsby's Image CDN service\n  if (isGatsbyImageParent(node)) {\n    return node.gatsbyImage\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","import React, { Fragment, FunctionComponent, PropsWithChildren } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n\n      // also hide the placeholder\n      mainImage.parentNode.parentNode.querySelector('[data-placeholder-image]').style.opacity = 0;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer = ``\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<\n  PropsWithChildren<ILayoutWrapperProps>\n> = function LayoutWrapper({ children, ...props }) {\n  return (\n    <Fragment>\n      <Sizer {...props} />\n      {children}\n\n      {SERVER ? <NativeScriptLoading /> : null}\n    </Fragment>\n  )\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n    />\n  )\n}\n\nexport const Picture: React.FC<PictureProps> = function Picture({\n  fallback,\n  sources = [],\n  shouldLoad = true,\n  ...props\n}) {\n  const sizes = props.sizes || fallback?.sizes\n  const fallbackImage = (\n    <Image {...props} {...fallback} sizes={sizes} shouldLoad={shouldLoad} />\n  )\n\n  if (!sources.length) {\n    return fallbackImage\n  }\n\n  return (\n    <picture>\n      {sources.map(({ media, srcSet, type }) => (\n        <source\n          key={`${media}-${type}-${srcSet}`}\n          type={type}\n          media={media}\n          srcSet={shouldLoad ? srcSet : undefined}\n          data-srcset={!shouldLoad ? srcSet : undefined}\n          sizes={sizes}\n        />\n      ))}\n      {fallbackImage}\n    </picture>\n  )\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage: React.FC<PictureProps> = function MainImage(props) {\n  return (\n    <>\n      <Picture {...props} />\n      <noscript>\n        <Picture {...props} shouldLoad={true} />\n      </noscript>\n    </>\n  )\n}\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import React from \"react\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\nimport type { FunctionComponent, WeakValidationMap } from \"react\"\nimport type { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as = `div`,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n\n    if (preactClass) {\n      className = preactClass\n    }\n\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return React.createElement(\n      as,\n      {\n        ...wrapperProps,\n        style: {\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        },\n        className: `${wClass}${className ? ` ${className}` : ``}`,\n      },\n      <LayoutWrapper layout={layout} width={width} height={height}>\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            false,\n            layout,\n            width,\n            height,\n            placeholderBackgroundColor,\n            objectFit,\n            objectPosition\n          )}\n        />\n\n        <MainImage\n          data-gatsby-image-ssr=\"\"\n          className={imgClassName}\n          {...(props as Omit<\n            MainImageProps,\n            \"images\" | \"fallback\" | \"onError\" | \"onLoad\"\n          >)}\n          // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n          {...getMainProps(\n            loading === `eager`,\n            false,\n            cleanedImages,\n            loading,\n            imgStyle\n          )}\n        />\n      </LayoutWrapper>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\n\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import {\n  createElement,\n  memo,\n  useMemo,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n} from \"react\"\nimport {\n  getWrapperProps,\n  gatsbyImageIsInstalled,\n  hasNativeLazyLoadSupport,\n} from \"./hooks\"\nimport { getSizer } from \"./layout-wrapper\"\nimport { propTypes } from \"./gatsby-image.server\"\nimport type {\n  FC,\n  ElementType,\n  FunctionComponent,\n  ImgHTMLAttributes,\n  CSSProperties,\n  ReactEventHandler,\n} from \"react\"\nimport type { renderImageToString } from \"./lazy-hydrate\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { Layout } from \"../image-utils\"\n\nconst imageCache = new Set<string>()\nlet renderImageToStringPromise\nlet renderImage: typeof renderImageToString | undefined\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface GatsbyImageProps\n  extends Omit<\n    ImgHTMLAttributes<HTMLImageElement>,\n    \"placeholder\" | \"onLoad\" | \"src\" | \"srcSet\" | \"width\" | \"height\"\n  > {\n  alt: string\n  as?: ElementType\n  className?: string\n  class?: string\n  imgClassName?: string\n  image: IGatsbyImageData\n  imgStyle?: CSSProperties\n  backgroundColor?: string\n  objectFit?: CSSProperties[\"objectFit\"]\n  objectPosition?: CSSProperties[\"objectPosition\"]\n  onLoad?: (props: { wasCached: boolean }) => void\n  onError?: ReactEventHandler<HTMLImageElement>\n  onStartLoad?: (props: { wasCached: boolean }) => void\n}\n\nexport interface IGatsbyImageData {\n  layout: Layout\n  width: number\n  height: number\n  backgroundColor?: string\n  images: Pick<MainImageProps, \"sources\" | \"fallback\">\n  placeholder?: Pick<PlaceholderProps, \"sources\" | \"fallback\">\n}\n\nconst GatsbyImageHydrator: FC<GatsbyImageProps> = function GatsbyImageHydrator({\n  as = `div`,\n  image,\n  style,\n  backgroundColor,\n  className,\n  class: preactClass,\n  onStartLoad,\n  onLoad,\n  onError,\n  ...props\n}) {\n  const { width, height, layout } = image\n  const {\n    style: wStyle,\n    className: wClass,\n    ...wrapperProps\n  } = getWrapperProps(width, height, layout)\n  const root = useRef<HTMLElement>()\n  const cacheKey = useMemo(() => JSON.stringify(image.images), [image.images])\n\n  // Preact uses class instead of className so we need to check for both\n  if (preactClass) {\n    className = preactClass\n  }\n\n  const sizer = getSizer(layout, width, height)\n\n  useEffect(() => {\n    if (!renderImageToStringPromise) {\n      renderImageToStringPromise = import(`./lazy-hydrate`).then(\n        ({ renderImageToString, swapPlaceholderImage }) => {\n          renderImage = renderImageToString\n\n          return {\n            renderImageToString,\n            swapPlaceholderImage,\n          }\n        }\n      )\n    }\n\n    // The plugin image component is a bit special where if it's server-side rendered, we add extra script tags to support lazy-loading without\n    // In this case we stop hydration but fire the correct events.\n    const ssrImage = root.current.querySelector(\n      `[data-gatsby-image-ssr]`\n    ) as HTMLImageElement\n    if (ssrImage && hasNativeLazyLoadSupport()) {\n      if (ssrImage.complete) {\n        // Trigger onStartload and onLoad events\n        onStartLoad?.({\n          wasCached: true,\n        })\n        onLoad?.({\n          wasCached: true,\n        })\n\n        // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n        setTimeout(() => {\n          ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n        }, 0)\n      } else {\n        onStartLoad?.({\n          wasCached: true,\n        })\n\n        ssrImage.addEventListener(`load`, function onLoadListener() {\n          ssrImage.removeEventListener(`load`, onLoadListener)\n\n          onLoad?.({\n            wasCached: true,\n          })\n          // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n          setTimeout(() => {\n            ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n          }, 0)\n        })\n      }\n\n      imageCache.add(cacheKey)\n\n      return\n    }\n\n    if (renderImage && imageCache.has(cacheKey)) {\n      return\n    }\n\n    let animationFrame\n    let cleanupCallback\n    renderImageToStringPromise.then(\n      ({ renderImageToString, swapPlaceholderImage }) => {\n        if (!root.current) {\n          return\n        }\n\n        root.current.innerHTML = renderImageToString({\n          isLoading: true,\n          isLoaded: imageCache.has(cacheKey),\n          image,\n          ...props,\n        })\n\n        if (!imageCache.has(cacheKey)) {\n          animationFrame = requestAnimationFrame(() => {\n            if (root.current) {\n              cleanupCallback = swapPlaceholderImage(\n                root.current,\n                cacheKey,\n                imageCache,\n                style,\n                onStartLoad,\n                onLoad,\n                onError\n              )\n            }\n          })\n        }\n      }\n    )\n\n    // eslint-disable-next-line consistent-return\n    return (): void => {\n      if (animationFrame) {\n        cancelAnimationFrame(animationFrame)\n      }\n      if (cleanupCallback) {\n        cleanupCallback()\n      }\n    }\n  }, [image])\n\n  // useLayoutEffect is ran before React commits to the DOM. This allows us to make sure our HTML is using our cached image version\n  useLayoutEffect(() => {\n    if (imageCache.has(cacheKey) && renderImage) {\n      root.current.innerHTML = renderImage({\n        isLoading: imageCache.has(cacheKey),\n        isLoaded: imageCache.has(cacheKey),\n        image,\n        ...props,\n      })\n\n      // Trigger onStartload and onLoad events\n      onStartLoad?.({\n        wasCached: true,\n      })\n      onLoad?.({\n        wasCached: true,\n      })\n    }\n  }, [image])\n\n  // By keeping all props equal React will keep the component in the DOM\n  return createElement(as, {\n    ...wrapperProps,\n    style: {\n      ...wStyle,\n      ...style,\n      backgroundColor,\n    },\n    className: `${wClass}${className ? ` ${className}` : ``}`,\n    ref: root,\n    dangerouslySetInnerHTML: {\n      __html: sizer,\n    },\n    suppressHydrationWarning: true,\n  })\n}\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> = memo(\n  function GatsbyImage(props) {\n    if (!props.image) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(`[gatsby-plugin-image] Missing image prop`)\n      }\n\n      return null\n    }\n\n    if (!gatsbyImageIsInstalled() && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `[gatsby-plugin-image] You're missing out on some cool performance features. Please add \"gatsby-plugin-image\" to your gatsby-config.js`\n      )\n    }\n\n    return createElement(GatsbyImageHydrator, props)\n  }\n)\n\nGatsbyImage.propTypes = propTypes\nGatsbyImage.displayName = `GatsbyImage`\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n  filename?: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    breakpoints,\n    outputPixelDensities,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import {\n  GatsbyImage as GatsbyImageBrowser,\n  IGatsbyImageData,\n} from \"./gatsby-image.browser\"\nimport React from \"react\"\nimport {\n  _getStaticImage,\n  propTypes,\n  IStaticImageProps,\n} from \"./static-image.server\"\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageBrowser)\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport { graphql } from \"gatsby\";\nimport { getImage, GatsbyImage, IGatsbyImageData } from \"gatsby-plugin-image\";\n\nimport * as styles from \"./CoverImage.module.css\";\n\n// eslint-disable-next-line no-undef\nexport type CoverImageSharp = Queries.CoverImageSharpFragment;\n\nexport interface CoverImageProps {\n  alt: string;\n  image: CoverImageSharp;\n  className?: string;\n}\n\nexport const query = graphql`\n  fragment CoverImageSharp on ImageSharp {\n    gatsbyImageData(layout: FULL_WIDTH)\n  }\n`;\n\nexport const CoverImage = ({ alt, image, className }: CoverImageProps) => {\n  return (\n    <GatsbyImage\n      className={classNames(styles.coverImage, className)}\n      image={getImage(image) as IGatsbyImageData}\n      alt={alt}\n    />\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport var coverImage = \"CoverImage-module--coverImage--48126\";","import { createContext } from \"react\";\n\nexport interface ILayoutContext {\n  navigation: {\n    displayNavigation: boolean;\n    toggleNavigation: () => void;\n  };\n}\n\nexport const DEFAULT_LAYOUT_CONTEXT: ILayoutContext = {\n  navigation: {\n    displayNavigation: false,\n    toggleNavigation: () => undefined,\n  },\n};\n\nexport const LayoutContext = createContext<ILayoutContext>(\n  DEFAULT_LAYOUT_CONTEXT,\n);\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Menu = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"3\",\n    y1: \"12\",\n    x2: \"21\",\n    y2: \"12\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"3\",\n    y1: \"6\",\n    x2: \"21\",\n    y2: \"6\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"3\",\n    y1: \"18\",\n    x2: \"21\",\n    y2: \"18\"\n  }));\n});\nMenu.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nMenu.displayName = 'Menu';\nexport default Menu;","import { useCallback, useContext } from \"react\";\nimport { ThemeContext } from \"./ThemeContext\";\n\nexport const useThemeContext = () => useContext(ThemeContext);\n\nexport const useColorScheme = () => useThemeContext().colorScheme;\n\nexport const useColorSchemeToggler = () => {\n  const { colorScheme, setColorScheme } = useThemeContext();\n\n  return useCallback(() => {\n    setColorScheme(colorScheme === \"dark\" ? \"light\" : \"dark\");\n  }, [colorScheme, setColorScheme]);\n};\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport { useColorSchemeToggler } from \"../ThemeHooks\";\n\nimport * as styles from \"./ThemeToggler.module.css\";\n\nexport interface IThemeToggler {\n  className?: string;\n}\n\nexport const ThemeToggler = ({ className }: IThemeToggler) => {\n  const toggleColorScheme = useColorSchemeToggler();\n\n  return (\n    <button\n      className={classNames(styles.themeToggler, className)}\n      title=\"Toggles light & dark\"\n      onClick={toggleColorScheme}\n    >\n      <svg aria-hidden=\"true\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        {/* moon */}\n        <mask id=\"moon\" className={styles.moon}>\n          <rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" fill=\"white\" />\n          <circle cx=\"40\" cy=\"8\" r=\"11\" fill=\"black\" />\n        </mask>\n        {/* sun */}\n        <circle\n          className={styles.sun}\n          cx=\"12\"\n          cy=\"12\"\n          r=\"11\"\n          mask=\"url(#moon)\"\n        />\n        {/* sun beams */}\n        <g className={styles.sunBeams}>\n          <line x1=\"12\" y1=\"1\" x2=\"12\" y2=\"3\" />\n          <line x1=\"12\" y1=\"21\" x2=\"12\" y2=\"23\" />\n          <line x1=\"4.22\" y1=\"4.22\" x2=\"5.64\" y2=\"5.64\" />\n          <line x1=\"18.36\" y1=\"18.36\" x2=\"19.78\" y2=\"19.78\" />\n          <line x1=\"1\" y1=\"12\" x2=\"3\" y2=\"12\" />\n          <line x1=\"21\" y1=\"12\" x2=\"23\" y2=\"12\" />\n          <line x1=\"4.22\" y1=\"19.78\" x2=\"5.64\" y2=\"18.36\" />\n          <line x1=\"18.36\" y1=\"5.64\" x2=\"19.78\" y2=\"4.22\" />\n        </g>\n      </svg>\n    </button>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport var moon = \"ThemeToggler-module--moon--30db8\";\nexport var sun = \"ThemeToggler-module--sun--3041b\";\nexport var sunBeams = \"ThemeToggler-module--sun-beams--98fde\";\nexport var themeToggler = \"ThemeToggler-module--theme-toggler--596ca\";","import React from \"react\";\n\nexport const GithubIcon = () => (\n  <svg fill=\"currentColor\" viewBox=\"0 0 16 16\" aria-hidden=\"true\">\n    <path d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z\" />\n  </svg>\n);\n\nexport const StackOverflowIcon = () => (\n  <svg fill=\"currentColor\" viewBox=\"0 0 19 22\" aria-hidden=\"true\">\n    <path d=\"M16 20v-6h2v8H0v-8h2v6h14Z\" />\n    <path d=\"m12.72 0-1.57 1.17L17 9.05l1.57-1.18L12.72 0ZM4 18h10v-2H4v2Zm11.4-7.08L7.86 4.64l1.25-1.5 7.54 6.28-1.25 1.5Zm-10-1.91 8.9 4.14.82-1.78-8.9-4.14L5.4 9Zm8.63 6.27-9.9-1.67.4-1.92 9.63 1.92-.13 1.67Z\" />\n  </svg>\n);\n","import React, { useContext } from \"react\";\nimport classNames from \"classnames\";\nimport { Link } from \"gatsby\";\nimport { Menu } from \"react-feather\";\n\nimport { ThemeToggler } from \"../../../../theme/ThemeToggler\";\nimport { GithubIcon } from \"../../../Icons\";\nimport { LayoutContext } from \"../../LayoutContext\";\n\nimport * as styles from \"./Navbar.module.css\";\n\nexport interface NavbarProps {\n  transparent?: boolean;\n}\n\nexport const Navbar = ({ transparent }: NavbarProps) => {\n  const {\n    navigation: { displayNavigation, toggleNavigation },\n  } = useContext(LayoutContext);\n\n  return (\n    <nav\n      role=\"navigation\"\n      className={classNames(styles.navbar, {\n        [styles.transparent]: transparent === true,\n        [styles.displayNavigation]: displayNavigation === true,\n      })}\n    >\n      <button\n        type=\"button\"\n        className={styles.toggler}\n        onClick={() => toggleNavigation()}\n      >\n        <Menu />\n      </button>\n\n      <ul className={styles.linkList}>\n        <li>\n          <Link to=\"/\">Home</Link>\n        </li>\n        <li>\n          <Link to=\"/blog\">Blog</Link>\n        </li>\n        <li>\n          <Link to=\"/open-source\">Open Source</Link>\n        </li>\n        <li>\n          <Link to=\"/about\">About</Link>\n        </li>\n      </ul>\n\n      <ul className={styles.iconLists}>\n        <li>\n          <ThemeToggler />\n        </li>\n        <li>\n          <a href=\"https://github.com/sharvit\">\n            <GithubIcon />\n          </a>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport var displayNavigation = \"Navbar-module--display-navigation--22afc\";\nexport var iconLists = \"Navbar-module--icon-lists--76927\";\nexport var linkList = \"Navbar-module--link-list--faed9\";\nexport var navbar = \"Navbar-module--navbar--fddbe\";\nexport var titleLink = \"Navbar-module--title-link--4e628\";\nexport var toggler = \"Navbar-module--toggler--74c57\";\nexport var transparent = \"Navbar-module--transparent--f7747\";","import React from \"react\";\nimport { Link } from \"gatsby\";\n\nexport interface IBreadcrumbItem {\n  title: string;\n  path: string;\n}\n\nexport const BreadcrumbItem = ({ title, path }: IBreadcrumbItem) => (\n  <li itemScope itemType=\"http://data-vocabulary.org/Breadcrumb\">\n    <Link to={path} itemProp=\"url\">\n      <span itemProp=\"title\">{title}</span>\n    </Link>\n  </li>\n);\n","import React from \"react\";\n\nimport { IBreadcrumbItem, BreadcrumbItem } from \"./BreadcrumbItem\";\nimport * as styles from \"./Breadcrumbs.module.css\";\n\nexport interface IBreadcrumbs {\n  items: IBreadcrumbItem[];\n}\n\nexport const Breadcrumbs = ({ items }: IBreadcrumbs) => (\n  <nav className={styles.breadcrumbs}>\n    <ol style={{ margin: 0 }}>\n      {items.map((item) => (\n        <BreadcrumbItem key={item.path} {...item} />\n      ))}\n    </ol>\n  </nav>\n);\n","// extracted by mini-css-extract-plugin\nexport var breadcrumbs = \"Breadcrumbs-module--breadcrumbs--0d70e\";","import React, { useState, ReactNode, useCallback } from \"react\";\nimport classNames from \"classnames\";\n\nimport { LayoutContext, DEFAULT_LAYOUT_CONTEXT } from \"./LayoutContext\";\nimport {\n  Navbar,\n  Breadcrumbs,\n  IBreadcrumbItem,\n  CoverImage,\n  CoverImageProps,\n} from \"./components\";\nimport { useAuthorProfile } from \"../../profile\";\n\nimport * as styles from \"./Layout.module.css\";\n\nexport interface ILayout {\n  coverImage?: CoverImageProps;\n  breadcrumbs?: IBreadcrumbItem[];\n  transparent?: boolean;\n  className?: string;\n  children?: ReactNode;\n}\n\nexport const Layout = ({\n  coverImage,\n  breadcrumbs,\n  transparent,\n  className,\n  children,\n}: ILayout) => {\n  const author = useAuthorProfile();\n\n  // display/hide navigation menu\n  const [displayNavigation, setDisplayNavigation] = useState(\n    DEFAULT_LAYOUT_CONTEXT.navigation.displayNavigation,\n  );\n\n  // toggle navigation menu\n  const toggleNavigation = useCallback(\n    () => setDisplayNavigation(!displayNavigation),\n    [setDisplayNavigation, displayNavigation],\n  );\n\n  return (\n    <LayoutContext.Provider\n      value={{ navigation: { displayNavigation, toggleNavigation } }}\n    >\n      <header\n        className={classNames(styles.layoutHeader, {\n          [styles.transparent]: transparent,\n        })}\n      >\n        <Navbar transparent={transparent} />\n        {coverImage && (\n          <CoverImage\n            {...coverImage}\n            className={classNames(styles.coverImage, coverImage.className)}\n          />\n        )}\n        {breadcrumbs && breadcrumbs.length > 0 && (\n          <Breadcrumbs\n            items={[{ title: author.name, path: \"/\" }, ...breadcrumbs]}\n          />\n        )}\n      </header>\n      <main className={className}>{children}</main>\n    </LayoutContext.Provider>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport var coverImage = \"Layout-module--cover-image--e8402\";\nexport var layoutHeader = \"Layout-module--layout-header--34fb2\";\nexport var transparent = \"Layout-module--transparent--e694b\";","import React from \"react\";\nimport classNames from \"classnames\";\nimport { Link } from \"gatsby\";\n\nimport * as styles from \"./Section.module.css\";\n\nexport interface ISectionProps {\n  className?: string;\n  title?: string;\n  link?: string;\n  linkExternal?: boolean;\n  footer?: string;\n  children?: React.ReactNode;\n}\n\nexport const Section = ({\n  className,\n  title,\n  link,\n  linkExternal,\n  footer,\n  children,\n}: ISectionProps) => {\n  return (\n    <section className={classNames(styles.section, className)}>\n      {title && (\n        <header className={styles.sectionHeader}>\n          {link ? (\n            <Link to={link}>\n              <h2>{title}</h2>\n            </Link>\n          ) : (\n            <h2>{title}</h2>\n          )}\n        </header>\n      )}\n      {children}\n      {footer && (\n        <footer className={styles.sectionFooter}>\n          {link ? (\n            linkExternal ? (\n              <a href={link} target=\"_blank\" rel=\"noopener noreferrer\">\n                {footer}\n              </a>\n            ) : (\n              <Link to={link}>{footer}</Link>\n            )\n          ) : (\n            footer\n          )}\n        </footer>\n      )}\n    </section>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport var section = \"Section-module--section--2dbfa\";\nexport var sectionFooter = \"Section-module--section-footer--1d388\";\nexport var sectionHeader = \"Section-module--section-header--b1c0b\";","import React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\nimport { useAuthorProfile } from \"../profile/hooks\";\n\n// eslint-disable-next-line no-undef\nexport type RawShortBioQuery = Queries.RawShortBioQuery;\n\nexport interface SeoMeta {\n  name?: string;\n  property?: string;\n  content: string;\n}\n\nexport interface SeoProps {\n  title?: string;\n  description?: string;\n  meta?: SeoMeta[];\n}\n\nexport const Seo = ({ title, description, meta = [] }: SeoProps) => {\n  const { file } = useStaticQuery<RawShortBioQuery>(graphql`\n    query RawShortBio {\n      file(sourceInstanceName: { eq: \"bio\" }, name: { eq: \"short-bio\" }) {\n        childMarkdownRemark {\n          rawMarkdownBody\n        }\n      }\n    }\n  `);\n\n  const profile = useAuthorProfile();\n\n  const metaTitle = title\n    ? `${profile.name} | ${title}`\n    : `${profile.name} | ${profile.title}`;\n\n  const metaDescription =\n    description || (file?.childMarkdownRemark?.rawMarkdownBody as string);\n\n  const metaElements: SeoMeta[] = [\n    {\n      name: `description`,\n      content: metaDescription,\n    },\n    {\n      property: `og:title`,\n      content: metaTitle,\n    },\n    {\n      property: `og:description`,\n      content: metaDescription,\n    },\n    {\n      property: \"og:image\",\n      content: profile.avatar,\n    },\n    {\n      property: `og:type`,\n      content: `website`,\n    },\n    {\n      name: `twitter:card`,\n      content: `summary`,\n    },\n    {\n      name: `twitter:site`,\n      content: profile.twitter,\n    },\n    {\n      name: `twitter:creator`,\n      content: profile.twitter,\n    },\n    ...meta,\n  ];\n\n  return (\n    <>\n      <title>{metaTitle}</title>\n      {metaElements.map(({ name, property, content }) => (\n        <meta\n          key={name || property}\n          name={name}\n          property={property}\n          content={content}\n        />\n      ))}\n    </>\n  );\n};\n","import { useStaticQuery, graphql } from \"gatsby\";\n\n// eslint-disable-next-line no-undef\nexport type AboutMarkdownQuery = Queries.AboutMarkdownQuery;\n\nexport const useAboutHTML = (): string =>\n  useStaticQuery<AboutMarkdownQuery>(graphql`\n    query AboutMarkdown {\n      file(sourceInstanceName: { eq: \"bio\" }, name: { eq: \"about\" }) {\n        childMarkdownRemark {\n          html\n        }\n      }\n    }\n  `).file?.childMarkdownRemark?.html || \"\";\n","import { useStaticQuery, graphql } from \"gatsby\";\n\nimport { CoverImageSharp } from \"../../components/Layout/components/CoverImage\";\n\n// eslint-disable-next-line no-undef\nexport type HomeCoverImageQuery = Queries.HomeCoverImageQuery;\n\nexport const useHomeCoverImage = (): CoverImageSharp | undefined =>\n  useStaticQuery<HomeCoverImageQuery>(graphql`\n    query HomeCoverImage {\n      file(\n        sourceInstanceName: { eq: \"images\" }\n        name: { eq: \"home-cover-background\" }\n      ) {\n        childImageSharp {\n          ...CoverImageSharp\n        }\n      }\n    }\n  `).file?.childImageSharp || undefined;\n","import { useStaticQuery, graphql } from \"gatsby\";\n\nimport { CoverImageSharp } from \"../../components/Layout/components/CoverImage\";\n\n// eslint-disable-next-line no-undef\nexport type AboutCoverImageQuery = Queries.AboutCoverImageQuery;\n\nexport const useAboutCoverImage = (): CoverImageSharp | undefined =>\n  useStaticQuery<AboutCoverImageQuery>(graphql`\n    query AboutCoverImage {\n      file(\n        sourceInstanceName: { eq: \"images\" }\n        name: { eq: \"about-page-cover-background\" }\n      ) {\n        childImageSharp {\n          ...CoverImageSharp\n        }\n      }\n    }\n  `).file?.childImageSharp || undefined;\n","import { useStaticQuery, graphql } from \"gatsby\";\n\n// eslint-disable-next-line no-undef\nexport type ShortAboutMarkdownQuery = Queries.ShortAboutMarkdownQuery;\n\nexport const useShortAboutHTML = (): string =>\n  useStaticQuery<ShortAboutMarkdownQuery>(graphql`\n    query ShortAboutMarkdown {\n      file(sourceInstanceName: { eq: \"bio\" }, name: { eq: \"short-bio\" }) {\n        childMarkdownRemark {\n          html\n        }\n      }\n    }\n  `).file?.childMarkdownRemark?.html || \"\";\n","import { useStaticQuery, graphql } from \"gatsby\";\nimport { IAuthorProfile } from \"../../../content/bio/types\";\n\n// eslint-disable-next-line no-undef\nexport type AuthorProfileQuery = Queries.AuthorProfileQuery;\n\nexport const mapAuthorProfileQuery = (\n  data: AuthorProfileQuery,\n): IAuthorProfile => {\n  const { profile } = data.file?.childYaml || {};\n\n  return {\n    name: profile?.name || \"\",\n    nickname: profile?.nickname || \"\",\n    title: profile?.title || \"\",\n    website: profile?.website || \"\",\n    phone: profile?.phone || \"\",\n    email: profile?.email || \"\",\n    github: profile?.github || \"\",\n    twitter: profile?.twitter || \"\",\n    stackoverflow: profile?.stackoverflow?.toString() || \"\",\n    disqus: profile?.disqus || \"\",\n    avatar: profile?.avatar || \"\",\n  };\n};\n\nexport const useAuthorProfile = (): IAuthorProfile => {\n  const data = useStaticQuery<AuthorProfileQuery>(graphql`\n    query AuthorProfile {\n      file(sourceInstanceName: { eq: \"bio\" }, name: { eq: \"author\" }) {\n        childYaml {\n          profile {\n            name\n            nickname\n            title\n            website\n            email\n            phone\n            github\n            twitter\n            stackoverflow\n            disqus\n            avatar\n          }\n        }\n      }\n    }\n  `);\n\n  return mapAuthorProfileQuery(data);\n};\n","import { useMemo } from \"react\";\n\nimport { ISocialLink } from \"../components/SocialLinks/types\";\nimport { useAuthorProfile } from \"./useAuthorProfile\";\n\nexport const useSocialLinks = (): ISocialLink[] => {\n  const profile = useAuthorProfile();\n\n  return useMemo(\n    () => [\n      {\n        type: \"github\",\n        href: `https://github.com/${profile.github}`,\n        label: profile.github,\n      },\n      {\n        type: \"twitter\",\n        href: `https://www.twitter.com/${profile.twitter}`,\n        label: profile.twitter,\n      },\n      {\n        type: \"stackoverflow\",\n        href: `https://stackoverflow.com/users/${profile.stackoverflow}`,\n        label: profile.nickname,\n      },\n      {\n        type: \"email\",\n        href: `mailto:${profile.email}`,\n        label: profile.email,\n      },\n    ],\n    [profile],\n  );\n};\n","import { useStaticQuery, graphql } from \"gatsby\";\n\n// eslint-disable-next-line no-undef\nexport type AuthorCVQuery = Queries.AuthorCVQuery;\n\nexport interface IAuthorExperience {\n  company: string;\n  position: string;\n  years: string;\n  tags: string[];\n  bulletPoints: string[];\n}\n\nexport interface IAuthorCV {\n  skills: string[];\n  experiences: IAuthorExperience[];\n}\n\nexport const mapAuthorCVQuery = (data: AuthorCVQuery): IAuthorCV => {\n  const { cv } = data.file?.childYaml || {};\n\n  return {\n    skills: cv?.skills?.trim().split(\", \") || [],\n    experiences:\n      cv?.experiences?.map((e) => ({\n        company: e?.company || \"\",\n        position: e?.position || \"\",\n        years: e?.years || \"\",\n        tags: e?.tags?.trim().split(\", \") || [],\n        bulletPoints: e?.bullet_points?.map((bp) => bp?.trim() || \"\") || [],\n      })) || [],\n  };\n};\n\nexport const useAuthorCV = (): IAuthorCV => {\n  const data = useStaticQuery<AuthorCVQuery>(graphql`\n    query AuthorCV {\n      file(sourceInstanceName: { eq: \"bio\" }, name: { eq: \"author\" }) {\n        childYaml {\n          cv {\n            skills\n            experiences {\n              company\n              position\n              years\n              tags\n              bullet_points\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  return mapAuthorCVQuery(data);\n};\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Twitter = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M23 3a10.9 10.9 0 0 1-3.14 1.53 4.48 4.48 0 0 0-7.86 3v1A10.66 10.66 0 0 1 3 4s-4 9 5 13a11.64 11.64 0 0 1-7 2c9 5 20 0 20-11.5a4.5 4.5 0 0 0-.08-.83A7.72 7.72 0 0 0 23 3z\"\n  }));\n});\nTwitter.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nTwitter.displayName = 'Twitter';\nexport default Twitter;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Mail = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z\"\n  }), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"22,6 12,13 2,6\"\n  }));\n});\nMail.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nMail.displayName = 'Mail';\nexport default Mail;","import { useMemo } from \"react\";\nimport { Twitter as TwitterIcon, Mail as MailIcon } from \"react-feather\";\n\nimport { GithubIcon, StackOverflowIcon } from \"../../../components\";\nimport { SocialLinkType } from \"./types\";\n\nimport * as styles from \"./SocialLinks.module.css\";\n\nexport const useSocialLinkIcon = (type: SocialLinkType) => {\n  return useMemo(() => {\n    switch (type) {\n      case \"github\":\n        return GithubIcon;\n      case \"twitter\":\n        return TwitterIcon;\n      case \"stackoverflow\":\n        return StackOverflowIcon;\n      case \"email\":\n        return MailIcon;\n    }\n  }, [type]);\n};\n\nexport const useSocialLinkClassName = (type: SocialLinkType) => {\n  return useMemo(() => {\n    switch (type) {\n      case \"github\":\n        return styles.githubLink;\n      case \"twitter\":\n        return styles.twitterLink;\n      case \"stackoverflow\":\n        return styles.stackOverflowLink;\n      case \"email\":\n        return styles.emailLink;\n    }\n  }, [type]);\n};\n","import React from \"react\";\nimport classNames from \"classnames\";\n\nimport { ISocialLink } from \"./types\";\nimport { useSocialLinkIcon, useSocialLinkClassName } from \"./hooks\";\n\nimport * as styles from \"./SocialLinks.module.css\";\n\nexport const SocialLinkItem = ({ type, href, label }: ISocialLink) => {\n  const Icon = useSocialLinkIcon(type);\n  const className = useSocialLinkClassName(type);\n\n  return (\n    <a href={href} className={classNames(styles.socialLink, className)}>\n      <Icon /> {label}\n    </a>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport var emailLink = \"SocialLinks-module--email-link--5b25e\";\nexport var githubLink = \"SocialLinks-module--github-link--a91f6\";\nexport var socialLink = \"SocialLinks-module--social-link--b709b\";\nexport var socialLinks = \"SocialLinks-module--social-links--a9b23\";\nexport var stackOverflowLink = \"SocialLinks-module--stack-overflow-link--21656\";\nexport var twitterLink = \"SocialLinks-module--twitter-link--50496\";","import React from \"react\";\n\nimport { useSocialLinks } from \"../../hooks\";\nimport { SocialLinkItem } from \"./SocialLinkItem\";\n\nimport * as styles from \"./SocialLinks.module.css\";\n\nexport const SocialLinks = () => {\n  const socialLinks = useSocialLinks();\n\n  return (\n    <div className={styles.socialLinks}>\n      {socialLinks.map((link) => (\n        <SocialLinkItem key={link.type} {...link} />\n      ))}\n    </div>\n  );\n};\n","import React from \"react\";\n\nimport { Section } from \"../../../components\";\nimport { SocialLinks } from \"../SocialLinks\";\nimport { useAuthorProfile, useShortAboutHTML } from \"../../hooks\";\n\nimport * as styles from \"./ProfileSection.module.css\";\n\nexport interface IPorfileSectionProps {\n  link?: string;\n  linkExternal?: boolean;\n  footer?: string;\n}\n\nexport const ProfileSection = ({\n  link = \"/about\",\n  linkExternal = false,\n  footer = \"#full_bio\",\n}: IPorfileSectionProps) => {\n  const profile = useAuthorProfile();\n  const aboutHTML = useShortAboutHTML();\n\n  const [firstName, lastName] = profile.name.split(\" \");\n\n  return (\n    <Section\n      className={styles.profileSection}\n      link={link}\n      linkExternal={linkExternal}\n      footer={footer}\n    >\n      <img className={styles.avatar} src={profile.avatar} alt={profile.name} />\n\n      <h1>\n        {firstName}\n        <br />\n        {lastName}\n      </h1>\n\n      <h2>{profile.title}</h2>\n\n      <SocialLinks />\n      <div\n        className={styles.shortBio}\n        dangerouslySetInnerHTML={{ __html: aboutHTML }}\n      />\n    </Section>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport var avatar = \"ProfileSection-module--avatar--48194\";\nexport var fullBioLink = \"ProfileSection-module--full-bio-link--12621\";\nexport var profileSection = \"ProfileSection-module--profile-section--b4927\";\nexport var shortBio = \"ProfileSection-module--short-bio--8b50c\";","import React from \"react\";\n\nimport { Section } from \"../../../components\";\nimport { useAuthorCV } from \"../../hooks\";\n\nimport * as styles from \"./BioSection.module.css\";\n\nconst SkillsList = ({ skills }: { skills: string[] }) => (\n  <p className={styles.skills}>\n    {skills.map((skill) => (\n      <span key={skill} className={styles.skill}>\n        {skill}\n      </span>\n    ))}\n  </p>\n);\n\nexport const BioSection = () => {\n  const authorCV = useAuthorCV();\n\n  return (\n    <Section className={styles.bioSection}>\n      <div className={styles.skillsSection}>\n        <h3>Main Skills</h3>\n        <SkillsList skills={authorCV.skills} />\n      </div>\n      <hr />\n      {authorCV.experiences.map((e) => (\n        <div key={e.company} className={styles.experience}>\n          <h3>{e.position}</h3>\n          <h4>{e.company}</h4>\n          <p className={styles.years}>{e.years}</p>\n          <ul>\n            {e.bulletPoints.map((bp) => (\n              <li key={bp}>{bp}</li>\n            ))}\n          </ul>\n          <SkillsList skills={e.tags} />\n          <hr />\n        </div>\n      ))}\n    </Section>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport var bioSection = \"BioSection-module--bio-section--ecdd9\";\nexport var experience = \"BioSection-module--experience--9bebd\";\nexport var skill = \"BioSection-module--skill--bc8f1\";\nexport var skills = \"BioSection-module--skills--7ca8c\";\nexport var skillsSection = \"BioSection-module--skills-section--c0604\";\nexport var years = \"BioSection-module--years--8a73f\";","// extracted by mini-css-extract-plugin\nexport var fluidSection = \"page-module--fluid-section--99a21\";\nexport var page = \"page-module--page--77e66\";\nexport var pageAbout = \"page-module--page-about--a903a\";\nexport var pageFluid = \"page-module--page-fluid--1ab44\";\nexport var pageTitle = \"page-module--page-title--af1e9\";\nexport var pageTitleCentered = \"page-module--page-title-centered--0d998\";","/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = '';\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (arg) {\n\t\t\t\tclasses = appendClass(classes, parseValue(arg));\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction parseValue (arg) {\n\t\tif (typeof arg === 'string' || typeof arg === 'number') {\n\t\t\treturn arg;\n\t\t}\n\n\t\tif (typeof arg !== 'object') {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn classNames.apply(null, arg);\n\t\t}\n\n\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\treturn arg.toString();\n\t\t}\n\n\t\tvar classes = '';\n\n\t\tfor (var key in arg) {\n\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\tclasses = appendClass(classes, key);\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction appendClass (value, newClass) {\n\t\tif (!newClass) {\n\t\t\treturn value;\n\t\t}\n\t\n\t\tif (value) {\n\t\t\treturn value + ' ' + newClass;\n\t\t}\n\t\n\t\treturn value + newClass;\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n"],"names":["UPPERCASE","LOWERCASE","LEADING_CAPITAL","IDENTIFIER","SEPARATORS","LEADING_SEPARATORS","RegExp","source","SEPARATORS_AND_IDENTIFIER","NUMBERS_AND_IDENTIFIER","camelCase","input","options","Array","isArray","TypeError","pascalCase","preserveConsecutiveUppercase","map","x","trim","filter","length","join","toLowerCase","locale","string","toLocaleLowerCase","toUpperCase","toLocaleUpperCase","isLastCharLower","isLastCharUpper","isLastLastCharUpper","i","character","test","slice","preserveCamelCase","replace","lastIndex","m1","charAt","_","identifier","m","postProcess","module","exports","W","hasNativeLazyLoadSupport","HTMLImageElement","prototype","e","t","a","Boolean","images","fallback","src","gatsbyImageData","gatsbyImage","childImageSharp","z","s","width","height","className","style","P","h","loading","shouldLoad","opacity","A","r","n","o","l","backgroundColor","position","top","left","bottom","right","objectFit","objectPosition","d","transition","H","F","_ref5","layout","paddingTop","maxWidth","display","alt","role","G","children","u","V","B","U","srcSet","decoding","Y","sources","sizes","_ref6","media","type","key","X","propTypes","isRequired","displayName","J","Z","Error","K","Q","ee","te","ae","_len","arguments","_key","c","apply","concat","ie","image","se","re","ne","Set","oe","le","de","as","class","g","onStartLoad","p","onLoad","onError","f","w","y","b","v","E","k","S","M","N","$","JSON","stringify","I","then","_ref7","renderImageToString","swapPlaceholderImage","current","querySelector","complete","wasCached","setTimeout","removeAttribute","addEventListener","removeEventListener","add","has","_ref8","innerHTML","isLoading","isLoaded","requestAnimationFrame","cancelAnimationFrame","ref","dangerouslySetInnerHTML","__html","suppressHydrationWarning","ce","he","ue","__imageData","__error","console","warn","ge","imgClassName","imgStyle","placeholder","pe","_len2","_key2","me","fe","we","CoverImage","_ref","React","GatsbyImage","classNames","getImage","DEFAULT_LAYOUT_CONTEXT","navigation","displayNavigation","toggleNavigation","LayoutContext","createContext","_extends","Object","assign","target","hasOwnProperty","call","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","Menu","forwardRef","_ref$color","color","_ref$size","size","rest","xmlns","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","x1","y1","x2","y2","useThemeContext","useContext","ThemeContext","ThemeToggler","toggleColorScheme","useColorSchemeToggler","colorScheme","setColorScheme","useCallback","title","onClick","id","cx","cy","mask","GithubIcon","StackOverflowIcon","Navbar","transparent","Link","to","href","BreadcrumbItem","path","itemScope","itemType","itemProp","Breadcrumbs","items","margin","item","Layout","coverImage","breadcrumbs","author","useAuthorProfile","setDisplayNavigation","useState","Provider","value","name","_toConsumableArray","Section","link","linkExternal","footer","rel","Seo","_file$childMarkdownRe","description","meta","file","useStaticQuery","profile","metaTitle","metaDescription","childMarkdownRemark","rawMarkdownBody","metaElements","content","property","avatar","twitter","_ref2","useHomeCoverImage","_useStaticQuery$file","undefined","useAboutCoverImage","useShortAboutHTML","_useStaticQuery$file$","html","data","_data$file","_profile$stackoverflo","childYaml","nickname","website","phone","email","github","stackoverflow","toString","disqus","mapAuthorProfileQuery","useSocialLinks","useMemo","label","useAuthorCV","_cv$skills","_cv$experiences","cv","skills","split","experiences","_e$tags","_e$bullet_points","company","years","tags","bulletPoints","bullet_points","bp","mapAuthorCVQuery","Twitter","Mail","points","SocialLinkItem","Icon","TwitterIcon","MailIcon","useSocialLinkIcon","useSocialLinkClassName","SocialLinks","socialLinks","ProfileSection","aboutHTML","firstName","lastName","SkillsList","skill","BioSection","authorCV","fluidSection","page","pageAbout","pageFluid","pageTitleCentered","hasOwn","classes","arg","appendClass","parseValue","includes","newClass","default"],"sourceRoot":""}