{"version":3,"sources":["webpack:///./src/components/Profile/AboutSection/AboutSection.js","webpack:///./src/components/Profile/AboutSection/index.js","webpack:///./src/components/Profile/AboutSection/AboutSectionData.js","webpack:///./src/pages/about.js","webpack:///./src/components/Profile/ProfileSection/ProfileBackground/ProfileBackground.js","webpack:///./src/components/Profile/ProfileSection/ProfileBackground/index.js","webpack:///./src/components/Profile/ProfileSection/ProfileIconLinks/ProfileIconLinks.js","webpack:///./src/components/Profile/ProfileSection/ProfileIconLinks/index.js","webpack:///./src/components/Profile/ProfileSection/ProfileIconLinks/ProfileIconLinksData.js","webpack:///./src/components/Profile/ProfileSection/ProfileSection.js","webpack:///./src/components/Profile/ProfileSection/index.js","webpack:///./src/components/Profile/ProfileSection/ProfileSectionData.js"],"names":["AboutSection","aboutHtml","className","dangerouslySetInnerHTML","__html","defaultProps","Component","file","childMarkdownRemark","html","AboutPage","Layout","transparent","SEO","title","ProfileSection","Breadcrumbs","items","path","ProfileBackground","navbarCollapsed","classNames","styles","container","filter","props","collapse","useContext","LayoutContext","navigation","ProfileIconLinks","socialLinks","map","id","label","link","pdfLink","buttonClassName","iconClassName","Fragment","key","button","href","data-pdf-link","target","rel","icon","site","siteMetadata","name","description","avatar","bio","profileSection","ownerAvatar","src","alt","owner","ownerContact","ownerAbout","resumeButton","author"],"mappings":"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","file":"component---src-pages-about-js-39987538f87ad254e76e.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst AboutSection = ({ aboutHtml }) => (\n  <main className=\"about-section section-white\">\n    <div className=\"container\">\n      <div className=\"row\">\n        <div\n          className=\"col-md-10 col-md-offset-1\"\n          dangerouslySetInnerHTML={{ __html: aboutHtml }}\n        />\n      </div>\n    </div>\n  </main>\n);\n\nAboutSection.propTypes = {\n  aboutHtml: PropTypes.string,\n};\n\nAboutSection.defaultProps = {\n  aboutHtml: '',\n};\n\nAboutSection.defaultProps = {};\n\nexport default AboutSection;\n","import React from 'react';\nimport { getAboutHTML } from './AboutSectionData';\nimport AboutSection from './AboutSection';\n\nconst Component = () => <AboutSection aboutHtml={getAboutHTML()} />;\n\nexport default Component;\n","import { useStaticQuery, graphql } from 'gatsby';\n\nexport const getAboutHTML = () =>\n  useStaticQuery(graphql`\n    query AboutMarkdown {\n      file(sourceInstanceName: { eq: \"bio\" }, name: { eq: \"about\" }) {\n        childMarkdownRemark {\n          html\n        }\n      }\n    }\n  `).file.childMarkdownRemark.html;\n","import React from 'react';\nimport Layout from '../components/Layout';\nimport Breadcrumbs from '../components/Layout/Breadcrumbs';\nimport SEO from '../components/SEO';\nimport ProfileSection from '../components/Profile/ProfileSection';\nimport AboutSection from '../components/Profile/AboutSection';\n\nconst AboutPage = () => (\n  <Layout transparent>\n    <SEO title=\"About\" />\n    <ProfileSection />\n    <Breadcrumbs\n      items={[\n        { title: 'Avi Sharvit', path: '/' },\n        { title: 'About', path: '/about' },\n      ]}\n    />\n    <AboutSection />\n  </Layout>\n);\n\nexport default AboutPage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport styles from './ProfileBackground.module.scss';\n\nconst ProfileBackground = ({ navbarCollapsed }) => (\n  <div\n    className={classNames(styles.container, {\n      [styles.navbarCollapsed]: navbarCollapsed,\n    })}\n  >\n    <div className={styles.filter} />\n  </div>\n);\n\nProfileBackground.propTypes = {\n  navbarCollapsed: PropTypes.bool,\n};\n\nProfileBackground.defaultProps = {\n  navbarCollapsed: false,\n};\n\nexport default ProfileBackground;\n","import React, { useContext } from 'react';\nimport LayoutContext from '../../../Layout/LayoutContext';\nimport ProfileBackground from './ProfileBackground';\n\nconst Component = props => {\n  const {\n    navigation: { collapse },\n  } = useContext(LayoutContext);\n\n  return <ProfileBackground navbarCollapsed={collapse} {...props} />;\n};\n\nexport default Component;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { OutboundLink } from 'gatsby-plugin-google-analytics';\n\nimport styles from './ProfileIconLinks.module.scss';\n\nconst ProfileIconLinks = ({ socialLinks }) => (\n  <p className={styles.container}>\n    {socialLinks.map(\n      ({ id, label, link, pdfLink, buttonClassName, iconClassName }) => (\n        <React.Fragment key={id}>\n          <OutboundLink\n            className={classNames(buttonClassName, styles.button)}\n            href={link}\n            data-pdf-link={pdfLink || link}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <i className={classNames(iconClassName, styles.icon)} />\n            <span className={styles.label}>{label}:</span>{' '}\n          </OutboundLink>{' '}\n        </React.Fragment>\n      )\n    )}\n  </p>\n);\n\nProfileIconLinks.propTypes = {\n  socialLinks: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      label: PropTypes.string,\n      link: PropTypes.string,\n      pdfLink: PropTypes.string,\n      buttonClassName: PropTypes.string,\n      iconClassName: PropTypes.string,\n    })\n  ),\n};\n\nProfileIconLinks.defaultProps = {\n  socialLinks: [],\n};\n\nexport default ProfileIconLinks;\n","import React from 'react';\n\nimport { getSocialLinks } from './ProfileIconLinksData';\nimport ProfileIconLinks from './ProfileIconLinks';\n\nexport default () => {\n  const socialLinks = getSocialLinks();\n\n  return <ProfileIconLinks socialLinks={socialLinks} />;\n};\n","import { useStaticQuery, graphql } from 'gatsby';\n\nexport const getSocialLinks = () =>\n  useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            socialLinks {\n              id\n              label\n              link\n              pdfLink\n              buttonClassName\n              iconClassName\n            }\n          }\n        }\n      }\n    `\n  ).site.siteMetadata.socialLinks;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { OutboundLink } from 'gatsby-plugin-google-analytics';\n\nimport ProfileBackground from './ProfileBackground';\nimport ProfileIconLinks from './ProfileIconLinks';\n\nimport styles from './ProfileSection.module.scss';\n\nconst ProfileSection = ({ name, description, avatar, bio }) => (\n  <>\n    <ProfileBackground />\n    <header className={`${styles.profileSection} section-nude`}>\n      <div className=\"container\">\n        <div className={`row ${styles.ownerAvatar}`}>\n          <div className=\"col-md-2 col-md-offset-5 col-sm-4 col-sm-offset-4 col-xs-6 col-xs-offset-3 text-center\">\n            <div className={styles.avatar}>\n              <img\n                src={avatar}\n                alt=\"Avi Sharvit Avatar\"\n                className=\"img-circle img-no-padding img-responsive\"\n              />\n            </div>\n          </div>\n        </div>\n        <div className={`row ${styles.owner}`}>\n          <div className=\"col-md-6 col-md-offset-3 text-center\">\n            <h1 className={styles.name}>\n              {name}\n              <br />\n              <small>{description}</small>\n            </h1>\n          </div>\n        </div>\n        <div className={`row ${styles.ownerContact}`}>\n          <div className=\"col-md-6 col-md-offset-3 text-center\">\n            <ProfileIconLinks />\n          </div>\n        </div>\n        <div className={`row ${styles.ownerAbout}`}>\n          <div className=\"col-md-6 col-md-offset-3 text-center\">\n            <div dangerouslySetInnerHTML={{ __html: bio }} />\n            <div className={styles.resumeButton}>\n              <OutboundLink\n                href=\"/avi-sharvit-resume.pdf\"\n                className=\"btn btn-danger btn-fill\"\n              >\n                DOWNLOAD RESUME PDF\n              </OutboundLink>\n            </div>\n          </div>\n        </div>\n      </div>\n    </header>\n  </>\n);\n\nProfileSection.propTypes = {\n  name: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  bio: PropTypes.string.isRequired,\n};\n\nProfileSection.defaultProps = {};\n\nexport default ProfileSection;\n","import React from 'react';\nimport { getProfileData } from './ProfileSectionData';\nimport ProfileSection from './ProfileSection';\n\nconst Component = () => {\n  const { title, description, avatar, bio } = getProfileData();\n\n  return (\n    <ProfileSection\n      name={title}\n      description={description}\n      avatar={avatar}\n      bio={bio}\n    />\n  );\n};\n\nexport default Component;\n","import { useStaticQuery, graphql } from 'gatsby';\n\nexport const getProfileData = () => {\n  const {\n    site: {\n      siteMetadata: {\n        title,\n        description,\n        author: { avatar },\n      },\n    },\n    file: {\n      childMarkdownRemark: { html: bio },\n    },\n  } = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n          description\n          author {\n            avatar\n          }\n        }\n      }\n      file(sourceInstanceName: { eq: \"bio\" }, name: { eq: \"short-bio\" }) {\n        childMarkdownRemark {\n          html\n        }\n      }\n    }\n  `);\n\n  return { title, description, avatar, bio };\n};\n"],"sourceRoot":""}