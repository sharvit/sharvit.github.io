{"version":3,"sources":["webpack:///./src/components/Blog/BlogPost/BlogPost.js","webpack:///./src/components/Blog/BlogPost/index.js","webpack:///./src/templates/post.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/SEO.js","webpack:///./src/components/Layout/Navbar/Navbar.js","webpack:///./src/components/Layout/Navbar/index.js","webpack:///./src/components/Layout/Layout.js","webpack:///./src/components/Layout/index.js","webpack:///./src/components/Layout/LayoutData.js","webpack:///./src/components/Layout/Breadcrumbs/BreadcrumbItem.js","webpack:///./src/components/Layout/Breadcrumbs/Breadcrumbs.js","webpack:///./src/components/Layout/Breadcrumbs/index.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./node_modules/gatsby-plugin-disqus/utils.js","webpack:///./node_modules/gatsby-plugin-disqus/index.js","webpack:///./node_modules/gatsby-plugin-disqus/components/Disqus.js","webpack:///./node_modules/gatsby-plugin-disqus/components/CommentCount.js"],"names":["BlogPost","_ref","id","title","date","url","html","disqusConfig","identifier","react_default","a","createElement","className","dangerouslySetInnerHTML","__html","toDateString","gatsby_plugin_disqus","config","defaultProps","Date","PostTemplate","_ref$pageContext","pageContext","name","postPath","postUrl","_ref$data$file$childM","data","file","childMarkdownRemark","excerpt","frontmatter","Layout","breadcrumbs","path","SEO","description","Blog_BlogPost","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","d","__webpack_exports__","loader","enqueue","React","createContext","m","module","exports","require","default","lang","meta","_staticQueryData$data","_public_static_d_3921925534_json__WEBPACK_IMPORTED_MODULE_0__","siteMetadata","site","titleTemplate","metaTitle","metaDescription","rawMarkdownBody","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","content","property","author","avatar","twitter","concat","Navbar","siteTitle","transparent","classNames","role","type","data-toggle","data-target","gatsby_browser_entry","to","children","Fragment","Layout_Navbar","length","Breadcrumbs","items","_toConsumableArray","Component","props","components_Layout_Layout","Object","assign","_856328897","BreadcrumbItem","itemScope","itemType","itemProp","style","margin","map","item","Breadcrumbs_BreadcrumbItem","key","ProdPageRenderer","location","pageResources","InternalPageRenderer","json","__esModule","insertScript","src","parent","script","window","document","async","appendChild","removeScript","getElementById","removeChild","debounce","func","wait","runOnFirstCall","timeout","context","this","args","arguments","callNow","clearTimeout","setTimeout","apply","_interopRequireDefault","_Disqus","Disqus","_CommentCount","CommentCount","_default","_extends2","_objectWithoutPropertiesLoose2","_inheritsLoose2","_react","_propTypes","_utils","_React$Component","_this","call","shortname","GATSBY_DISQUS_SHORTNAME","_proto","prototype","componentWillReceiveProps","nextProps","setState","componentWillMount","cleanInstance","componentDidMount","loadInstance","shouldComponentUpdate","current","next","componentDidUpdate","disqus_config","page","body","DISQUS","reset","error","undefined","thread","hasChildNodes","firstChild","render","_this$props","__source","fileName","lineNumber","__self","propTypes","shape","string","queueResetCount","DISQUSWIDGETS","getCount","placeholder","data-disqus-identifier","data-disqus-url"],"mappings":"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","file":"component---src-templates-post-js-5da42ce352fa640ad3e0.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Disqus } from 'gatsby-plugin-disqus';\n\nconst BlogPost = ({ id, title, date, url, html }) => {\n  const disqusConfig = {\n    identifier: id,\n    url,\n    title,\n  };\n  return (\n    <div className=\"section section-nude\">\n      <div className=\"container\">\n        <article className=\"post\">\n          <h1>{title}</h1>\n\n          <div className=\"entry\" dangerouslySetInnerHTML={{ __html: html }} />\n\n          <div className=\"date\">Written on {date.toDateString()}</div>\n\n          <Disqus config={disqusConfig} />\n        </article>\n      </div>\n    </div>\n  );\n};\n\nBlogPost.propTypes = {\n  id: PropTypes.string,\n  title: PropTypes.string,\n  date: PropTypes.instanceOf(Date),\n  url: PropTypes.string,\n  html: PropTypes.string,\n};\n\nBlogPost.defaultProps = {\n  id: '',\n  title: '',\n  date: new Date(),\n  url: '',\n  html: '',\n};\n\nexport default BlogPost;\n","import BlogPost from './BlogPost';\n\nexport default BlogPost;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql } from 'gatsby';\n\nimport Layout from '../components/Layout';\nimport SEO from '../components/SEO';\nimport BlogPost from '../components/Blog/BlogPost';\n\nconst PostTemplate = ({\n  pageContext: { name, date, postPath, postUrl },\n  data: {\n    file: {\n      childMarkdownRemark: {\n        html,\n        excerpt,\n        frontmatter: { title },\n      },\n    },\n  },\n}) => (\n  <Layout\n    breadcrumbs={[{ title: 'Blog', path: '/blog' }, { title, path: postPath }]}\n  >\n    <SEO title={title} description={excerpt} />\n    <BlogPost\n      id={name}\n      title={title}\n      date={new Date(date)}\n      url={postUrl}\n      html={html}\n    />\n  </Layout>\n);\n\nPostTemplate.propTypes = {\n  pageContext: PropTypes.shape({\n    name: PropTypes.string,\n    date: PropTypes.string,\n    postPath: PropTypes.string,\n    postUrl: PropTypes.string,\n  }).isRequired,\n  data: PropTypes.shape({\n    file: PropTypes.shape({\n      childMarkdownRemark: PropTypes.shape({\n        html: PropTypes.string,\n        excerpt: PropTypes.string,\n        frontmatter: PropTypes.shape({\n          title: PropTypes.string,\n        }),\n      }),\n    }),\n  }).isRequired,\n};\n\nexport default PostTemplate;\n\nexport const pageQuery = graphql`\n  query($name: String!) {\n    file(sourceInstanceName: { eq: \"posts\" }, name: { eq: $name }) {\n      childMarkdownRemark {\n        html\n        excerpt\n        frontmatter {\n          title\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nfunction SEO({ description, lang, meta, title }) {\n  const {\n    site: { siteMetadata },\n    file,\n  } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author {\n              twitter\n              avatar\n            }\n          }\n        }\n        file(sourceInstanceName: { eq: \"bio\" }, name: { eq: \"short-bio\" }) {\n          childMarkdownRemark {\n            rawMarkdownBody\n          }\n        }\n      }\n    `\n  );\n\n  const titleTemplate = title ? `${siteMetadata.title} | %s` : '%s';\n\n  const metaTitle =\n    title || `${siteMetadata.title} | ${siteMetadata.description}`;\n\n  const metaDescription =\n    description || file.childMarkdownRemark.rawMarkdownBody;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={metaTitle}\n      titleTemplate={titleTemplate}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: metaTitle,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: 'og:image',\n          content: siteMetadata.author.avatar,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:site`,\n          content: `@${siteMetadata.author.twitter}`,\n        },\n        {\n          name: `twitter:creator`,\n          content: `@${siteMetadata.author.twitter}`,\n        },\n      ].concat(meta)}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Link } from 'gatsby';\n\nconst Navbar = ({ siteTitle, transparent }) => (\n  <nav\n    className={classNames(\n      'navbar',\n      transparent ? 'navbar-ct-transparent' : 'navbar-ct-primary'\n    )}\n    role=\"navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-header\">\n        <button\n          type=\"button\"\n          className=\"navbar-toggle\"\n          data-toggle=\"collapse\"\n          data-target=\"#navigation\"\n        >\n          <span className=\"sr-only\">Toggle navigation</span>\n          <span className=\"icon-bar\" />\n          <span className=\"icon-bar\" />\n          <span className=\"icon-bar\" />\n        </button>\n        <Link to=\"/\" className=\"navbar-brand\">\n          {siteTitle}\n        </Link>\n      </div>\n      <div className=\"collapse navbar-collapse\" id=\"navigation\">\n        <ul className=\"nav navbar-nav navbar-right\">\n          <li>\n            <Link to=\"/blog\">Blog</Link>\n          </li>\n          <li>\n            <Link to=\"/about\">About</Link>\n          </li>\n          <li>\n            <Link to=\"/open-source\">Open Source</Link>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </nav>\n);\n\nNavbar.propTypes = {\n  siteTitle: PropTypes.string,\n  transparent: PropTypes.bool,\n};\n\nNavbar.defaultProps = {\n  siteTitle: ``,\n  transparent: false,\n};\n\nexport default Navbar;\n","import Navbar from './Navbar';\n\nexport default Navbar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Navbar from './Navbar';\nimport Breadcrumbs from './Breadcrumbs';\nimport '../../stylesheet/main.scss';\n\nconst Layout = ({ siteTitle, transparent, breadcrumbs, children }) => (\n  <>\n    <Navbar siteTitle={siteTitle} transparent={transparent} />\n    {breadcrumbs && breadcrumbs.length && (\n      <Breadcrumbs items={[{ title: siteTitle, path: '/' }, ...breadcrumbs]} />\n    )}\n    <div className=\"wrapper\">{children}</div>\n  </>\n);\n\nLayout.propTypes = {\n  transparent: PropTypes.bool,\n  siteTitle: PropTypes.string,\n  breadcrumbs: Breadcrumbs.propTypes.items,\n  children: PropTypes.node.isRequired,\n};\n\nLayout.defaultProps = {\n  siteTitle: '',\n  breadcrumbs: [],\n  transparent: false,\n};\n\nexport default Layout;\n","import React from 'react';\n\nimport { getSiteTitle } from './LayoutData';\nimport Layout from './Layout';\n\nconst Component = props => <Layout {...props} siteTitle={getSiteTitle()} />;\n\nexport default Component;\n","import { useStaticQuery, graphql } from 'gatsby';\n\nexport const getSiteTitle = () =>\n  useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `).site.siteMetadata.title;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\n\nconst BreadcrumbItem = ({ title, path }) => (\n  <li itemScope itemType=\"http://data-vocabulary.org/Breadcrumb\">\n    <Link to={path} itemProp=\"url\">\n      <span itemProp=\"title\">{title}</span>\n    </Link>\n  </li>\n);\n\nBreadcrumbItem.propTypes = {\n  title: PropTypes.string,\n  path: PropTypes.string,\n};\n\nBreadcrumbItem.defaultProps = {\n  title: '',\n  path: '',\n};\n\nexport default BreadcrumbItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport BreadcrumbItem from './BreadcrumbItem';\n\nconst Breadcrumbs = ({ items }) => (\n  <nav className=\"breadcrumbs\">\n    <ol className=\"breadcrumb\" style={{ margin: 0 }}>\n      {items.map(item => (\n        <BreadcrumbItem key={item.path} {...item} />\n      ))}\n    </ol>\n  </nav>\n);\n\nBreadcrumbs.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      ...Breadcrumbs.propTypes,\n    })\n  ).isRequired,\n};\n\nexport default Breadcrumbs;\n","import Breadcrumbs from './Breadcrumbs';\n\nexport default Breadcrumbs;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","\"use strict\";\n\nexports.__esModule = true;\nexports.insertScript = insertScript;\nexports.removeScript = removeScript;\nexports.debounce = debounce;\n\nfunction insertScript(src, id, parent) {\n  var script = window.document.createElement('script');\n  script.async = true;\n  script.src = src;\n  script.id = id;\n  parent.appendChild(script);\n  return script;\n}\n\nfunction removeScript(id, parent) {\n  var script = window.document.getElementById(id);\n\n  if (script) {\n    parent.removeChild(script);\n  }\n}\n\nfunction debounce(func, wait, runOnFirstCall) {\n  var timeout;\n  return function () {\n    var context = this;\n    var args = arguments;\n\n    var deferredExecution = function deferredExecution() {\n      timeout = null;\n\n      if (!runOnFirstCall) {\n        func.apply(context, args);\n      }\n    };\n\n    var callNow = runOnFirstCall && !timeout;\n    window.clearTimeout(timeout);\n    timeout = setTimeout(deferredExecution, wait);\n\n    if (callNow) {\n      func.apply(context, args);\n    }\n  };\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _Disqus = _interopRequireDefault(require(\"./components/Disqus\"));\n\nexports.Disqus = _Disqus.default;\n\nvar _CommentCount = _interopRequireDefault(require(\"./components/CommentCount\"));\n\nexports.CommentCount = _CommentCount.default;\nvar _default = _Disqus.default;\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _utils = require(\"../utils\");\n\nrequire(\"../style.css\");\n\nvar _jsxFileName = \"/Users/brettstevenson/Desktop/Folder/gatsby-plugin-workspace/gatsby-plugin-disqus/src/components/Disqus.jsx\";\n\nvar Disqus =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inheritsLoose2.default)(Disqus, _React$Component);\n\n  function Disqus(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.shortname = typeof GATSBY_DISQUS_SHORTNAME !== \"undefined\" && GATSBY_DISQUS_SHORTNAME !== '' ? GATSBY_DISQUS_SHORTNAME : '';\n\n    if (props.config) {\n      _this.config = props.config;\n    } else {\n      _this.config = {\n        identifier: props.identifier,\n        url: props.url,\n        title: props.title\n      };\n    }\n\n    return _this;\n  }\n\n  var _proto = Disqus.prototype;\n\n  _proto.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    this.setState(nextProps);\n  };\n\n  _proto.componentWillMount = function componentWillMount() {\n    if (typeof window !== 'undefined' && window.document && this.shortname) {\n      this.cleanInstance();\n    }\n  };\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.loadInstance();\n  };\n\n  _proto.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n    if (this.shortname !== nextProps.shortname) return true;\n    var current = this.config;\n    var next = nextProps.config;\n    if (current.url === next.url && current.identifier === next.identifier) return false;\n    return true;\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    this.loadInstance();\n  };\n\n  _proto.loadInstance = function loadInstance() {\n    if (typeof window !== 'undefined' && window.document && this.shortname) {\n      var component = this;\n      var config = this.config;\n\n      window.disqus_config = function () {\n        this.page.identifier = config.identifier;\n        this.page.title = config.title;\n        this.page.url = config.url;\n      };\n\n      (0, _utils.insertScript)(\"https://\" + this.shortname + \".disqus.com/embed.js\", 'disqus-embed-script', window.document.body);\n    }\n  };\n\n  _proto.cleanInstance = function cleanInstance() {\n    (0, _utils.removeScript)('disqus-embed-script', window.document.body);\n\n    if (window && window.DISQUS) {\n      window.DISQUS.reset();\n    }\n\n    try {\n      delete window.DISQUS;\n    } catch (error) {\n      window.DISQUS = undefined;\n    }\n\n    var thread = window.document.getElementById('disqus_thread');\n\n    if (thread) {\n      while (thread.hasChildNodes()) {\n        thread.removeChild(thread.firstChild);\n      }\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        config = _this$props.config,\n        props = (0, _objectWithoutPropertiesLoose2.default)(_this$props, [\"config\"]);\n    return _react.default.createElement(\"div\", (0, _extends2.default)({\n      id: \"disqus_thread\"\n    }, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }));\n  };\n\n  return Disqus;\n}(_react.default.Component);\n\nexports.default = Disqus;\nDisqus.propTypes = {\n  config: _propTypes.default.shape({\n    /*\n     * Tells the Disqus service how to identify the current page. \n     * When the Disqus embed is loaded, the identifier is used to look up \n     * the correct thread. \n     */\n    identifier: _propTypes.default.string,\n\n    /*\n     * Tells the Disqus service the title of the current page.\n     * This is used when creating the thread on Disqus.\n     */\n    title: _propTypes.default.string,\n\n    /*\n     * Tells the Disqus service the URL of the current page.\n     * This URL is used when a thread is created so that Disqus knows which\n     * page a thread belongs to.\n     * (If undefined, Disqus will use the global.location.href)\n     */\n    url: _propTypes.default.string\n  }),\n  identifier: _propTypes.default.string,\n  title: _propTypes.default.string,\n  url: _propTypes.default.string\n};","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _utils = require(\"../utils\");\n\nvar _jsxFileName = \"/Users/brettstevenson/Desktop/Folder/gatsby-plugin-workspace/gatsby-plugin-disqus/src/components/CommentCount.jsx\";\nvar queueResetCount = (0, _utils.debounce)(function () {\n  if (window.DISQUSWIDGETS) {\n    window.DISQUSWIDGETS.getCount({\n      reset: true\n    });\n  }\n}, 300, false);\n\nvar CommentCount =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inheritsLoose2.default)(CommentCount, _React$Component);\n\n  function CommentCount(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.shortname = typeof GATSBY_DISQUS_SHORTNAME !== \"undefined\" && GATSBY_DISQUS_SHORTNAME !== '' ? GATSBY_DISQUS_SHORTNAME : '';\n    return _this;\n  }\n\n  var _proto = CommentCount.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.loadInstance();\n  };\n\n  _proto.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n    var current = this.props.config;\n    var next = nextProps.config;\n    if (current.url === next.url && current.identifier === next.identifier) return false;\n    return true;\n  };\n\n  _proto.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    this.setState(nextProps);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    this.loadInstance();\n  };\n\n  _proto.loadInstance = function loadInstance() {\n    if (window.document.getElementById('dsq-count-scr')) {\n      queueResetCount();\n    } else {\n      (0, _utils.insertScript)(\"https://\" + this.shortname + \".disqus.com/count.js\", 'dsq-count-scr', window.document.body);\n    }\n  };\n\n  _proto.cleanInstance = function cleanInstance() {\n    (0, _utils.removeScript)('dsq-count-scr', window.document.body);\n    window.DISQUSWIDGETS = undefined;\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        config = _this$props.config,\n        placeholder = _this$props.placeholder,\n        props = (0, _objectWithoutPropertiesLoose2.default)(_this$props, [\"config\", \"placeholder\"]);\n    return _react.default.createElement(\"span\", (0, _extends2.default)({\n      className: \"disqus-comment-count\",\n      \"data-disqus-identifier\": config.identifier,\n      \"data-disqus-url\": config.url\n    }, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), placeholder);\n  };\n\n  return CommentCount;\n}(_react.default.Component);\n\nexports.default = CommentCount;\nCommentCount.defaultProps = {\n  placeholder: '...'\n};\nCommentCount.propTypes = {\n  config: _propTypes.default.shape({\n    /*\n     * Tells the Disqus service how to identify the current page. \n     * When the Disqus embed is loaded, the identifier is used to look up \n     * the correct thread. \n     */\n    identifier: _propTypes.default.string,\n\n    /*\n     * Tells the Disqus service the title of the current page.\n     * This is used when creating the thread on Disqus.\n     */\n    title: _propTypes.default.string,\n\n    /*\n     * Tells the Disqus service the URL of the current page.\n     * This URL is used when a thread is created so that Disqus knows which\n     * page a thread belongs to.\n     * (If undefined, Disqus will use the global.location.href)\n     */\n    url: _propTypes.default.string\n  }),\n\n  /*\n   * This is the text that will be used as a placeholder prior to \n   * loading the response.\n   */\n  placeholder: _propTypes.default.string\n};"],"sourceRoot":""}